[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community 虽然这一点 是在假设已经知道所有Lu用户主题向量的基础上计算的 这样就可以将它们堆叠成L矩阵 同样我们也知道所有的电影的主题因子 可以把它们放在一起形成R矩阵 然后 将两个矩阵相乘 就能得到 关于每个用户对每部电影的评价假设的大矩阵 然后 将两个矩阵相乘 就能得到 关于每个用户对每部电影的评价假设的大矩阵 但重要的是  事实上我们并不知道这些信息 我们并不知道关于这些用户们 或关于电影们的特征是什么 相反的 我们将要做的是逆向思考这个问题 接下来 需要尝试估计这些矩阵 L和R矩阵的内容 意思就是 需要在基于观测到的评价的基础上 为每个用户和每部电影估计这些主题向量 或者说 特征向量 而这些矩阵 或者说关于主题向量的这些集合 就是我们模型的参数 而这些矩阵 或者说关于主题向量的这些集合 就是我们模型的参数 现在回到我们之前讲过的 回归 模块上 即 对于已知模型和与其相关的参数 如何有效地从数据中估计这些参数 这里我们打算做的东西是相似的 我们有数据 数据是什么？ 这里 数据就是指我们观察到的评价 就是那些黑色的方块们 而参数就是指这些用户和电影的主题因子 好的 接下来要做的就是 我们将从观察到的评价来估计每一个参数 好的 接下来要做的就是 我们将从观察到的评价来估计每一个参数 如果要估计L和R向量以及结果矩阵的话 可以使用信息只有这些黑格子 如果要估计L和R向量以及结果矩阵的话 可以使用信息只有这些黑格子 那将要如何做呢？ 好的 考虑下 求一个矩阵的合适值 是不是 就像之前说过的回归模块那样 如果你还记得 在回归模块中 我们讨论过 残差平方和 我们那时候讨论的是一个屋子 它有一系列特征 然后 [咳嗽声] 那些特征具有对应的权值 而那些权值就是我们的参数 这样我们就能够预测一些东西的销售价格 将预测的价格和实际销售价格进行比较 就能够求它们差的平方 然后将数据库中每个屋子对应的值相加 好的 现在 模型的参数变成 L 和 R 在我们的预测中 带帽的Rating将表示为 <Lu, Rv> 这个符号表示元素按位相乘然后求和 那就是我们预测出的评价 然后 观察到的评价表示为Rating(u,v) 看看它们之间有何的不同 然后 观察到的评价表示为Rating(u,v) 看看它们之间有何的不同 求观察到评价和根据参数Lu以及Rv做出的预测评价间的差 然后将它们做平方操作 求观察到评价和根据参数Lu以及Rv做出的预测评价间的差 然后将它们做平方操作 接下来讨论的是 参数L和参数R的残差平方和 接下来讨论的是 参数L和参数R的残差平方和 并且将会对所有已经有评价的电影求和 并且将会对所有已经有评价的电影求和 下面将对所有的已经做出评价的 配对的u,v 对进行操作 下面将对所有的已经做出评价的 u,v对进行操作 这里用u'和v'来区别表示 这里 u 和 v 表示的是给出的某个特例 我们将添加所有的u'v'对 这里加入的u‘的评价和v’的评价都是有效地 这里加入的u‘的评价和v’的评价都是有效地 这些有效评价在哪里？ 就是这些黑色的方格 只需要记住这张图片 好的 接下来就可以用给定的L矩阵和R矩阵 来观察预测值 好的 接下来就可以用给定的L矩阵和R矩阵 来观察预测值 我们将观察并评估 之前对这些黑色格子所做的的预测结果如何 看看我们用来填充观察到的评价矩阵的L和U的效果如何 那么 现在评估L和R 就像住宅价值预测问题中 评估回归系数的权值一样 那么 现在评估L和R 就像住宅价值预测问题中 评估回归系数的权值一样 在这个例子中 我们检索了所有的用户主题向量 所有的电影主题向量 以及 在这个例子中 我们检索了所有的用户主题向量 所有的电影主题向量 以及 然后找到一个最适合我们观察到的评价的巨大空间的参数组合 这里所用的推理方式称之为矩阵因子分解模型 这个很关键 之所以把它称之为矩阵因子分解模型 是因为 这里将通过把这个矩阵因式分解的方式来逼近它自身 关键是这个输出  一个包含被评估参数的集合 遗憾的是 我才提到这个非常非常非常关键的点 对此我表示非常抱歉 让我们停一会儿 这样你可以记下来 我接下来要讲的就是下面这个动画所表达的 现在已经有很多用于因式分解问题的有效算法 我们将在以后的推荐系统课程 或者矩阵因式分解课程中 详细探讨这个问题 我们将在以后的推荐系统课程 或者矩阵因式分解课程中 详细探讨这个问题 不过 现在 在已有了有效计算L和R估计值的算法基础上 不过 现在 在已有了有效计算L和R估计值的算法基础上 如何去生成预测值？ 如何去填充这些白色的格子 这是我们最初的目标 好的  我们有评估得出的带帽Lu和带帽Rv 好的  我们有评估得出的带帽Lu和带帽Rv 我们可以得到预测值  方法就和之前所说的 假设知道这些向量确切值的基础上来预测的方法一样 好的 矩阵因式分解真的是一个非常强大的工具 在许多不同的应用中 它都已经被证明是有用的 但这边存在一个限制 是关于我们早前讨论过的冷启动问题 这个模型依然无法解决 当有一个新的用户或新的电影时 该怎么办 这个问题 这个模型依然无法解决 当有一个新的用户或新的电影时 该怎么办 这个问题 当出现对某个特定用户或特定电影无法作出评价的情况 当出现对某个特定用户或特定电影无法作出评价的情况 就可能表示 一部新的电影或者一个新的用户 出现。 这真的是一个很重要的问题 比如 Netflix(在线影片租赁提供商) 就会一直碰到 我们如何能够对这些用户或电影作出预测？ [背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community