1
00:00:00,000 --> 00:00:03,930
[음악]

2
00:00:03,930 --> 00:00:08,228
특징 기반 분류에서 제한된 사용자 데이터도

3
00:00:08,228 --> 00:00:11,400
처리할 수 있음을 보았습니다

4
00:00:11,400 --> 00:00:14,950
또 한편으로 행렬 분해법에서는

5
00:00:14,950 --> 00:00:19,190
사용자와 항목 간의 관계를 찾아내고

6
00:00:19,190 --> 00:00:24,130
또 특징을 학습할 있음을 보았습니다

7
00:00:24,130 --> 00:00:26,960
그렇다면 두 가지 방법의 장점만을 취하는

8
00:00:26,960 --> 00:00:29,310
통합된 접근법이 존재할까요?

9
00:00:29,310 --> 00:00:34,030
분류 기반 접근법의 특징은

10
00:00:34,030 --> 00:00:37,530
시간, 본 것들, 사용자 정보, 과거 구매와 같은

11
00:00:37,530 --> 00:00:42,860
문맥을 알아낼 수 있다는 점입니다

12
00:00:42,860 --> 00:00:47,560
반면에 행렬 분해에서 발견한 특징으로는

13
00:00:47,560 --> 00:00:50,850
비슷하게 행동하는 사용자 그룹을 찾아냅니다

14
00:00:50,850 --> 00:00:55,710
시애틀에 선생님이자 아이 엄마인 여성이 있습니다

15
00:00:56,910 --> 00:01:00,730
두 접근법을 어떻게 통합할지가 문제입니다

16
00:01:00,730 --> 00:01:02,390
꽤 단순한데요

17
00:01:02,390 --> 00:01:05,810
구매 이력이 없는 새로운 사용자에게

18
00:01:05,810 --> 00:01:10,250
존재하는 특징을

19
00:01:12,900 --> 00:01:16,170
활용할 수 있습니다

20
00:01:16,170 --> 00:01:19,830
사람의 나이, 성별 등으로

21
00:01:19,830 --> 00:01:23,550
별점을 예측해냅니다

22
00:01:23,550 --> 00:01:29,440
마찬가지로 사용자 데이터가 많을수록

23
00:01:29,440 --> 00:01:33,570
행렬 분해에 더 가중을 둘 수 있고

24
00:01:33,570 --> 00:01:39,670
학습한 특징들을 통해 추천을 구성할 수 있습니다

25
00:01:39,670 --> 00:01:45,277
사용자 특화 특징 기반 모델과 행렬 분해의

26
00:01:45,277 --> 00:01:50,660
학습된 특징을 합친다고 생각하면 쉽습니다

27
00:01:50,660 --> 00:01:52,716
각 사용자, 상품 정보의 양에 따라

28
00:01:52,716 --> 00:01:56,713
점진적으로 둘 사이를 오갑니다

29
00:01:59,879 --> 00:02:03,280
이렇게 모델을 혼합시키는 게 유행입니다

30
00:02:04,510 --> 00:02:08,690
추천 시스템에 아주 큰 영향을 끼친

31
00:02:08,690 --> 00:02:12,830
모범적인 예가 모듈 처음에 언급했던

32
00:02:12,830 --> 00:02:16,800
넷플릭스 대회입니다

33
00:02:16,800 --> 00:02:20,140
이 대회에서는 넷플릭스 사용자의 별점을

34
00:02:20,140 --> 00:02:26,020
누가 가장 잘 예측하는지를 봤습니다

35
00:02:26,020 --> 00:02:31,960
데이터 세트는 수 억 개의 별점과 영화로 이루어졌고요

36
00:02:31,960 --> 00:02:37,557
영화 거의 1.8만편과 50만명 가까운 순 사용자에서

37
00:02:37,557 --> 00:02:42,636
별점 3백만개를 높은 정확도로 예측하는 게 목표였습니다

38
00:02:42,636 --> 00:02:45,400
상금은 백만 달러였고요

39
00:02:45,400 --> 00:02:50,460
많은 사람이 관심을 갖고 대회에 뛰어들었는데

40
00:02:50,460 --> 00:02:56,060
이 표에 보이는 게 선두 팀입니다

41
00:02:56,060 --> 00:02:58,700
백 개가 넘는 모델을 배합시켜

42
00:02:58,700 --> 00:03:02,580
성능을 끌어올렸죠

43
00:03:02,580 --> 00:03:05,911
이런 앙상블 접근법은 분류 모듈에서

44
00:03:05,911 --> 00:03:09,006
더 다룰 테지만

45
00:03:09,006 --> 00:03:14,403
모델을 합쳐 모델 하나하나보다 뛰어난 성능을

46
00:03:14,403 --> 00:03:19,587
이끌어내는 건 흔하지만 강력한 기법입니다