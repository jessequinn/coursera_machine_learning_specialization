1
00:00:00,184 --> 00:00:04,142
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community

2
00:00:04,142 --> 00:00:07,885
现在我们已经创建了这些辅助函数

3
00:00:07,885 --> 00:00:10,700
一起来用在这里的另外一张图片上

4
00:00:10,700 --> 00:00:15,150
这是一张有点作弊的图片 我找到了一辆车 而且

5
00:00:15,150 --> 00:00:17,050
之后我们会尝试一些例子

6
00:00:17,050 --> 00:00:25,250
我们找到一辆在image_train中的汽车
它是第8张

7
00:00:25,250 --> 00:00:27,820
所以我按图片顺序查找到了那辆车

8
00:00:27,820 --> 00:00:34,123
这样你就回看到
让我们看看这张汽车图片

9
00:00:34,123 --> 00:00:42,050
用car_image.show
我们就会看到实际要找的图片

10
00:00:42,050 --> 00:00:44,180
这就是那张红色的车

11
00:00:44,180 --> 00:00:46,960
你会在这里看到红色的车

12
00:00:46,960 --> 00:00:50,120
问题在于 哪些是那辆车的最近邻

13
00:00:50,120 --> 00:00:54,120
要用的是我们之前创建的命令

14
00:00:54,120 --> 00:00:58,820
get_images_from_ids可以查询那辆车

15
00:00:58,820 --> 00:01:01,010
但我想走点捷径

16
00:01:01,010 --> 00:01:06,676
所以我想用get_images_from_ids

17
00:01:06,676 --> 00:01:11,632
我要用knn_model且

18
00:01:11,632 --> 00:01:16,220
把汽车图片作为输入

19
00:01:16,220 --> 00:01:21,060
所以通过knn_model
我要查询当前的图片

20
00:01:22,160 --> 00:01:26,800
输出应该是个列表 一个SFrame 而且

21
00:01:26,800 --> 00:01:32,230
之后我要选择SFrame里代表图片的那一列

22
00:01:32,230 --> 00:01:36,040
在此敲入.show

23
00:01:36,040 --> 00:01:40,502
现在 在此之后 你会发现输入应该是这个红色车辆 而且

24
00:01:40,502 --> 00:01:43,574
现在我们有一些与8号汽车车相似的红色汽车

25
00:01:43,574 --> 00:01:45,350
这真的很酷

26
00:01:45,350 --> 00:01:52,418
只需要几行 我们就建立了一个关于一辆车和一只猫的最近邻模型的例子

27
00:01:52,418 --> 00:01:53,849
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community