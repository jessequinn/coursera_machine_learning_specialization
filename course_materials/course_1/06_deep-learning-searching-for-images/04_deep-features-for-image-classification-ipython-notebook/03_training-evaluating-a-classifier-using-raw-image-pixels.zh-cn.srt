1
00:00:00,382 --> 00:00:04,272
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community

2
00:00:04,272 --> 00:00:06,618
首先减小字体大小

3
00:00:06,618 --> 00:00:10,980
我们要在这个数据中训练出一个基础模型

4
00:00:10,980 --> 00:00:15,890
我要做的第一件事并不是使用图片

5
00:00:15,890 --> 00:00:18,050
而是使用图片的像素

6
00:00:18,050 --> 00:00:21,400
并且在图片的像素基础上训练分类器
然后观察分类器的效果如何

7
00:00:21,400 --> 00:00:25,625
让我们开始吧

8
00:00:25,625 --> 00:00:33,119
标题是 训练分类器

9
00:00:33,119 --> 00:00:34,420
抱歉我拼错了

10
00:00:34,420 --> 00:00:39,248
恩这次写对了

11
00:00:39,248 --> 00:00:43,420
在像素基础上训练分类器

12
00:00:45,410 --> 00:00:49,790
原始的照片像素就是我的特征 并不是那些深度特征

13
00:00:49,790 --> 00:00:54,306
所以我就把这个叫做

14
00:00:54,306 --> 00:01:01,400
原始像素模型raw_pixel_model

15
00:01:01,400 --> 00:01:04,480
我可以用任意的分类器

16
00:01:04,480 --> 00:01:06,280
预测结果大概差不多

17
00:01:06,280 --> 00:01:08,200
所以我就用逻辑斯提回归了

18
00:01:08,200 --> 00:01:12,730
我们在情感分析中用过

19
00:01:12,730 --> 00:01:16,480
对于逻辑斯蒂回归 在一个数据集中

20
00:01:16,480 --> 00:01:18,270
用训练数据

21
00:01:20,730 --> 00:01:22,960
也就是我的image_train

22
00:01:22,960 --> 00:01:26,030
我会告诉它目标是什么

23
00:01:27,560 --> 00:01:31,790
目标会是数据集中叫做label标签的那一列

24
00:01:31,790 --> 00:01:36,440
那一列每一张图都有标签

25
00:01:37,710 --> 00:01:41,260
我会告诉模型 哪些特征会用到

26
00:01:41,260 --> 00:01:48,410
这些特征叫做image_array

27
00:01:48,410 --> 00:01:51,793
我要运行模型了

28
00:01:51,793 --> 00:01:55,400
我又笔误了

29
00:01:55,400 --> 00:01:59,720
我在这边忘记了添加create 你们该提醒我的

30
00:02:01,110 --> 00:02:05,470
在GraphLab中 create这个代码代表着创造模型

31
00:02:05,470 --> 00:02:07,747
所以正确的代码

32
00:02:07,747 --> 00:02:11,400
应该是logistic_classifier.create

33
00:02:11,400 --> 00:02:13,710
这样应该就能运行了

34
00:02:13,710 --> 00:02:17,546
我们用原始的照片像素来建立起了分类器

35
00:02:17,546 --> 00:02:22,470
这只是快速的复习 我不期待这个预测结果能有多好

36
00:02:22,470 --> 00:02:24,670
但是先做做看吧

37
00:02:24,670 --> 00:02:27,400
完成了

38
00:02:29,360 --> 00:02:33,890
来看看预测的精确度怎么样

39
00:02:33,890 --> 00:02:37,850
第一件事是 我准备先用这个模型做预测

40
00:02:39,030 --> 00:02:44,736
所以标题是用简单的像素模型预测

41
00:02:44,736 --> 00:02:51,039
#Make a prediction with the simple model based on raw pixels

42
00:02:53,941 --> 00:02:57,698
然后我准备从测试数据集中选取一些图片

43
00:02:57,698 --> 00:03:01,450
看一下分类器的结果

44
00:03:01,450 --> 00:03:07,880
所以我就准备用前三张图了

45
00:03:07,880 --> 00:03:11,940
所以说images[0:3] 前三张图片

46
00:03:11,940 --> 00:03:16,930
看一下这几张图

47
00:03:16,930 --> 00:03:22,358
然后我要输入type.show() 来给你看一下那几张图是什么

48
00:03:22,358 --> 00:03:24,656
看这里就是这个

49
00:03:24,656 --> 00:03:31,420
图片在这个数据中有点小

50
00:03:31,420 --> 00:03:37,140
所以我准备放大一下 你可以看到这几张图片是猫

51
00:03:37,140 --> 00:03:39,250
一辆车 和 一个猫

52
00:03:39,250 --> 00:03:40,340
所以说一共是两只猫一辆车

53
00:03:40,340 --> 00:03:41,390
车 猫 不搞错了

54
00:03:41,390 --> 00:03:42,880
猫 车 猫

55
00:03:42,880 --> 00:03:49,780
所以我就准备把字体变得这么大
这样就能看清楚图片了

56
00:03:49,780 --> 00:03:53,170
看看标签吧

57
00:03:53,170 --> 00:03:55,510
这是测试数据

58
00:03:55,510 --> 00:04:01,570
前三个对象 所以说第一个和第三个

59
00:04:01,570 --> 00:04:06,910
我肉眼看到的应该是猫车猫

60
00:04:06,910 --> 00:04:14,320
看看原本的标签 猫 机动车 猫

61
00:04:14,320 --> 00:04:17,330
它说了机动车 不是汽车 但是没什么区别了

62
00:04:17,330 --> 00:04:21,632
所以说

63
00:04:21,632 --> 00:04:26,700
让我们来看模型预测的结果

64
00:04:26,700 --> 00:04:32,345
让我们做个预测

65
00:04:32,345 --> 00:04:39,400
所以说预测的是image_test[0:3]

66
00:04:39,400 --> 00:04:43,810
事实是猫车猫 而预测的是 鸟 猫 鸟

67
00:04:43,810 --> 00:04:47,355
全错 它觉得猫是鸟

68
00:04:47,355 --> 00:04:52,030
汽车是猫 认为第三只猫也是鸟

69
00:04:52,030 --> 00:04:56,520
前三个全错了 但也可能是侥幸的结果

70
00:04:56,520 --> 00:04:59,880
可能只是前几个有错

71
00:04:59,880 --> 00:05:02,870
所以看看全部的结果吧

72
00:05:04,300 --> 00:05:07,990
让我们看看整个测试集模型的结果

73
00:05:07,990 --> 00:05:12,710
和预测正确率是多少

74
00:05:12,710 --> 00:05:18,524
标题是衡量预测结果

75
00:05:18,524 --> 00:05:24,717
然后用raw_pixel_model.evaluate

76
00:05:24,717 --> 00:05:28,946
用evaluate这个函数

77
00:05:28,946 --> 00:05:33,628
evaluate这个函数

78
00:05:33,628 --> 00:05:40,576
是用来计算失败的 那些误差矩阵

79
00:05:40,576 --> 00:05:44,673
所以我会用到测试集

80
00:05:44,673 --> 00:05:51,349
你可以看到准确率只有在46.8%

81
00:05:51,349 --> 00:05:52,720
非常糟糕

82
00:05:52,720 --> 00:05:57,280
一共4类 随机猜测的正确率在25% 

83
00:05:57,280 --> 00:05:59,570
我们的分类器正确率只有在46% 情况不乐观

84
00:06:00,660 --> 00:06:03,670
还有更多细节

85
00:06:03,670 --> 00:06:05,670
当我们画出混淆矩阵

86
00:06:05,670 --> 00:06:09,594
我就先不画了 你在家记得要画出来看一下

87
00:06:09,594 --> 00:06:11,312
反正记住准确率只有在46%左右

88
00:06:11,312 --> 00:06:14,929
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community