1
00:00:00,000 --> 00:00:04,754
[موسيقى]

2
00:00:04,754 --> 00:00:10,350
في كثير من الأحيان، فإن أفضل طريقة لمنع الإفراط في تسلسل القرار هي استخدام التهذيب.

3
00:00:10,350 --> 00:00:13,260
حيث ينمو التسلسل ليكون أكبر بكثير مما تحتاجه،

4
00:00:13,260 --> 00:00:17,140
ثم تقوم بإزالة الأجزاء التي تصبح أقل أهمية.

5
00:00:18,270 --> 00:00:21,640
التهذيب مهم جدا ⏎ إذا كنت تقوم بتنفيذ

6
00:00:21,640 --> 00:00:25,110
خوارزمية تسلسل قرار واقعية.

7
00:00:25,110 --> 00:00:28,530
ومع ذلك، قد تصبح التفاصيل مملة إلى حد ما.

8
00:00:28,530 --> 00:00:32,770
ليس بها الكثير من الرياضيات ولكن ⏎ فقط الكثير من الأشياء الصغيرة التي يجب القيام بها،

9
00:00:32,770 --> 00:00:35,570
بالتحديد، الكثير من التوصيل والتنقيط للمتغيرات T و I.

10
00:00:35,570 --> 00:00:38,260
ولذا جعلنا هذا القسم اختياريًا.

11
00:00:38,260 --> 00:00:40,450
ونحن نرحب بك لمشاهدته.

12
00:00:40,450 --> 00:00:43,790
لا يوجد الكثير من الرياضيات، بل فقط الكثير من التفاصيل.

13
00:00:43,790 --> 00:00:47,080
أنصحك ⏎ بالانتباه والتركيز

14
00:00:47,080 --> 00:00:50,330
إذا كنت تنشئ تسلسلًا خاصًا بك لاتخاذ
القرارات، فهذا يمثل التعلم من البداية.

15
00:00:50,330 --> 00:00:53,750
وإذا لم يكن الأمر كذلك، فقط تعرف على عملية التهذيب، ⏎ فقد تحدثنا عنها منذ قليل.

16
00:00:53,750 --> 00:00:56,000
واعلم بأن معظم التطبيقات،

17
00:00:56,000 --> 00:00:59,240
وبالتحديد التطبيقات الكبيرة الموجودة حاليًا، تستخدم التهذيب بطريقة أو بأخرى.

18
00:01:00,520 --> 00:01:03,920
ناقشنا الكثير من التكرار ونحن ننشئ تسلسل القرارات

19
00:01:03,920 --> 00:01:09,110
من أعلى إلى أسفل وناقشنا نوعين من قائمة توقف L وشروط التوقف،

20
00:01:09,110 --> 00:01:11,520
تلك التي يجب أن نتبع حالات التوقف دائما من أجلها

21
00:01:11,520 --> 00:01:15,380
في الوحدة السابقة وحالات قائمة
التوقف الثلاث في هذه الوحدة.

22
00:01:15,380 --> 00:01:19,370
الآن دعونا نستكشف بعض التحديات التي تحدث،

23
00:01:19,370 --> 00:01:22,230
مع حالات التوقف المبكر المذكورة.

24
00:01:22,230 --> 00:01:25,500
حالة التوقف المبكر كانت تعنى
بانتقاء أقصى عمق،

25
00:01:25,500 --> 00:01:28,430
وتوقف التكرار بمجرد الوصول إلى العمق الأقصى المحدد.

26
00:01:28,430 --> 00:01:32,760
السؤال هو، ⏎ كيف يمكن انتقاء أقصى عمق؟

27
00:01:33,810 --> 00:01:37,320
قلنا إنه يجب عليك استخدام الصلاحية
المتبادلة لمجموعات التحقق من الصحة،

28
00:01:37,320 --> 00:01:41,760
يمكن أن تكون هناك تحديات مع وضع البيانات جنبًا إلى ذلك وقد تضطر العودة إلى

29
00:01:41,760 --> 00:01:47,910
الخوارزميات عدة مرات، وقد لا تصل دائمًا إلى الإجابة المطلوبة.

30
00:01:47,910 --> 00:01:51,390
بالإضافة إلى أنك تريد بعض الأجزاء من ⏎ التسلسل ينمو أكثر من غيره.

31
00:01:51,390 --> 00:01:54,640
ويصبح من التعقيد البالغ وضع هذا المتغير.

32
00:01:54,640 --> 00:01:57,940
الآن، الحالة الثانية للتوقف المبكر، ⏎ هي الأخطر.

33
00:01:57,940 --> 00:02:04,880
تقول قاعدة الحالة الثانية للتوقف المبكر؛ توقف، ⏎ إذا توقف التناقص في خطأ التدريب.

34
00:02:04,880 --> 00:02:09,680
إذا حدث ذلك، فإن خطأ التصنيف لبيانات التدريب يتوقف عن الانحدار،

35
00:02:09,680 --> 00:02:10,600
أو يصبح بقيمة ثابتة.

36
00:02:10,600 --> 00:02:13,150
ومع ذلك اتضح أنه من الناحية العملية

37
00:02:13,150 --> 00:02:15,420
قد لا يكون المنحنى منسقًا كما رسمته.

38
00:02:15,420 --> 00:02:18,250
قد لا يسير على نحو سلس، بل قد يقفز من قيمة لأخرى

39
00:02:18,250 --> 00:02:20,100
وقد يسير بطرق غير مألوفة.

40
00:02:20,100 --> 00:02:21,770
دعونا نرى لماذا يمكن أن يحدث ذلك.

41
00:02:23,110 --> 00:02:26,300
كما ناقشنا في وقت مبكر، الحالة الثانية للتوقف المبكر

42
00:02:26,300 --> 00:02:28,710
تتوقف بتوقف انحدار الخطأ وبالتالي فهي قد تكون خطرة.

43
00:02:28,710 --> 00:02:32,470
ولإظهار مدى خطورة ذلك، نحتاج إلى مثال مضاد

44
00:02:32,470 --> 00:02:38,680
لنستخدمه مع أي شيء، وإذا تلقيت
الدورة الأولى فستعرف أنه xor.

45
00:02:39,720 --> 00:02:42,720
إذن، هذه هي البيانات

46
00:02:42,720 --> 00:02:48,640
وهذه البيانات تتوافق مع xor للإدخال الأول والثاني.

47
00:02:48,640 --> 00:02:52,040
لذا، عندما يكون كل منهما خطأ، يصبح الناتج خطأ

48
00:02:52,040 --> 00:02:55,860
عندما يكون خطأ، والآخر صحيحًا، يصبح الناتج
صحيحًا، كما يظهر في الصفين في الوسط

49
00:02:55,860 --> 00:03:00,910
وعندما يكون كل منهما صحيحًا، يصبح الناتج خطأ.

50
00:03:00,910 --> 00:03:04,810
إذا كنت تبحث عن مثال مضاد لأي شيء، فقط استخدم xor.

51
00:03:04,810 --> 00:03:07,240
في الواقع إذا اتصل بك شخص ما في منتصف الليل

52
00:03:07,240 --> 00:03:11,370
ليسألك ما هو المثال المضاد لهذه المشكلة المعقدة التي أواجهها؟

53
00:03:11,370 --> 00:03:13,280
فقط قل xor.

54
00:03:14,920 --> 00:03:20,510
إذن ما يحدث مع xor عندما ننظر فقط إلى أساس تسلسل القرارات.

55
00:03:20,510 --> 00:03:28,030
حسنا لدينا صفان بمخرجات صحيحة، وصفان بمخرجات خاطئة.

56
00:03:28,030 --> 00:03:33,230
إذاً فما هو الخطأ في تسلسل القرار الذي نحاول ترقيته.

57
00:03:33,230 --> 00:03:37,540
حسناً، فقط سنختار واحدة من
هذين الخيارين فكلاهما متشابه،

58
00:03:37,540 --> 00:03:42,350
لنفترض أننا اخترنا المخرج "صحيح" لأننا متفائلون والإيجابية من خصالنا.

59
00:03:42,350 --> 00:03:46,990
وسنقول أن الناتج هنا هو 1+.

60
00:03:46,990 --> 00:03:52,150
وهذا يعني أننا
نرتكب "خطأين".

61
00:03:53,940 --> 00:03:58,519
هناك خطآن، وبالتالي نقطتان
من نقاط البيانات الأربعة،

62
00:03:58,519 --> 00:04:02,440
قيمة الخطأ هنا 0.5، وهو أمر سيئ.

63
00:04:02,440 --> 00:04:07,496
مما يعني أنها تماثل القيمة العشوائية، حيث قيمة الخطأ 0.5.

64
00:04:07,496 --> 00:04:10,656
حسنًا، دعنا نر ما يحدث
إذا قسمنا ‎x[1]‎.

65
00:04:10,656 --> 00:04:16,370
إذا قسمنا x [1] فنحن في الواقع

66
00:04:16,370 --> 00:04:21,110
نقسم الجدول كما ترى وستلاحظ أن بسبب التناسق التام في xor،

67
00:04:21,110 --> 00:04:24,790
للمرة الثانية، نحن في نفس الوضع بالنسبة لكل واحدة من هذه العقد اللاحقة.

68
00:04:24,790 --> 00:04:31,170
إذن، على سبيل المثال، في حالة x-1 تساوي 2، لديك y "صحيح" و y "خطأ".

69
00:04:31,170 --> 00:04:35,920
لذا لنفترض أنك تتوقع واحدًا زائدًا لهذا الجانب وأيضًا واحدًا زائدًا

70
00:04:35,920 --> 00:04:41,540
للجانب حيث x-1 هو "خطأ"، لأن كل شيء متماثل.

71
00:04:41,540 --> 00:04:42,325
إذن فما هو الخطأ؟

72
00:04:42,325 --> 00:04:47,920
حسنا، لقد ارتكبنا بعض الأخطاء.

73
00:04:47,920 --> 00:04:52,698
فنحن أخطأنا هنا وهنا حتى جعلنا 1 +1

74
00:04:52,698 --> 00:04:57,487
أخطاءَ وهي 2 من أصل 4، لذلك فهي 0.5.

75
00:04:57,487 --> 00:05:01,160
لذلك تبين أن تقسيم x [1] لا جدوى منه.

76
00:05:02,710 --> 00:05:08,100
حسنا، لنتعرف على ماذا سيحدث عند محاولة تقسيم X [2]

77
00:05:08,100 --> 00:05:10,960
فإذا حاولت تقسيم x [2] سأصل إلى

78
00:05:10,960 --> 00:05:15,480
نفس النتيجة المتوقعة عند تغيير هذا المسمى هنا من x[1] إلى x[2].

79
00:05:15,480 --> 00:05:20,810
ولمرة أخرى، سنكون في نفس الوضع بالضبط

80
00:05:20,810 --> 00:05:26,350
حيث يكون المخرج 1، على كل واحدة من هذه النتائج.

81
00:05:26,350 --> 00:05:28,760
ونرتكب نفس العدد من الأخطاء.

82
00:05:28,760 --> 00:05:35,727
لذا خطأ واحد لكل منهما، يعطينا، قيمة الخطأ الكلية البالغة 0.5.

83
00:05:35,727 --> 00:05:39,278
وإذا نظرت، بشكل عام،

84
00:05:39,278 --> 00:05:43,940
يتعذر تقسيم x1 و x2.

85
00:05:45,040 --> 00:05:47,590
وهذا يساعدني على تقليل الخطأ.

86
00:05:47,590 --> 00:05:50,720
كلا التقسيمين يعطينا نفس الخطأ.

87
00:05:52,570 --> 00:05:54,710
وبالتالي، فالسؤال هو، هل يجب أن أبدأ الآن؟

88
00:05:54,710 --> 00:05:59,510
إذا لم تتحسن أي من الميزات ثم استعنت بالحالة الثانية للتوقف المبكر

89
00:05:59,510 --> 00:06:04,460
فستكون النتيجة هي محاولة التقليل من عدد التقسيمات.

90
00:06:04,460 --> 00:06:07,730
ثم نتوقف عن تقسيم تسلسل القرار.

91
00:06:07,730 --> 00:06:13,950
ليكون الناتج الأولي "صحيحا"، ارتكبنا خطأين

92
00:06:13,950 --> 00:06:19,115
ولنفترض أن قيمة الخطأ التي تحصل عليها في النهاية هي 0.5.

93
00:06:19,115 --> 00:06:25,000
لذا، [ضحك] هذا هو السبب في أن xor هو مثال مضاد لكل شيء.

94
00:06:25,000 --> 00:06:28,422
ﻣﺎذا ﻳﺤﺪث ﻟﻮ ﻟﻢ ﺗستعن بالحالة الثانية ﻟﻠﺘﻮﻗﻒ المبكر

95
00:06:28,422 --> 00:06:29,470
واستمررت في التقدم؟

96
00:06:31,699 --> 00:06:36,580
إذا استمررت فستحصل على
هذا التسلسل الذي يبدو كما تراه.

97
00:06:36,580 --> 00:06:41,680
وكما ترى، لكل واحد من هذه الفروع، هناك "أخطاء" بقيمة 0.

98
00:06:41,680 --> 00:06:47,680
لذا فإن الفرع من المخرجات اليسرى خاطئ أو ناقص واحد.

99
00:06:47,680 --> 00:06:51,200
وبه صفر من الأخطاء، والفرع الآخر كذلك.

100
00:06:51,200 --> 00:06:54,510
والثالث والرابع كذلك أيضًا.

101
00:06:54,510 --> 00:06:56,100
وبالتالي إذا استمررت.

102
00:06:56,100 --> 00:07:00,979
وإذا لم تستعن بالحالة
الثانية من التوقف المبكر،

103
00:07:00,979 --> 00:07:04,480
فستحصل على ثلاثة أخطاء بقيمة صفر.

104
00:07:04,480 --> 00:07:08,908
وفي تلك الحالة هناك فرق شاسع،

105
00:07:08,908 --> 00:07:13,582
بين خطأ التدريب 0.5،

106
00:07:13,582 --> 00:07:19,363
المماثل للقيمة العشوائية، وبين خطأ التدريب 0،

107
00:07:19,363 --> 00:07:22,930
والذي يعتبر خير مثال على خطأ التدريب.

108
00:07:24,540 --> 00:07:27,520
لذلك فإن الحالة الثانية للتوقف المبكر

109
00:07:28,740 --> 00:07:33,610
أنشأت فجوة كبيرة عشوائية بين أفضل ما يمكنها إنتاجه.

110
00:07:33,610 --> 00:07:34,880
وبين المخرجات الفعلية.

111
00:07:37,170 --> 00:07:39,590
لذلك رأينا قائمة بالحالة الثانية.

112
00:07:39,590 --> 00:07:43,980
توقف عن التكرار إذا انحدرت قيمة خطأ التدريب بما فيه الكفاية.

113
00:07:43,980 --> 00:07:50,090
قد تبدو وكأنها نصيحة منطقية، ولكن لديها بعض المخاطر الفادحة.

114
00:07:50,090 --> 00:07:53,720
نظرًا لأن التقصير في الملاحظة، لا يستكشف الفروع بما فيه الكفاية.

115
00:07:53,720 --> 00:07:56,540
هو نوعًا ما مبدأ جيد بشكل عام.

116
00:07:56,540 --> 00:08:00,560
لكن إذا قمت بالتطبيق من الأعلى إلى الأسفل، فقد تبدأ المشاكل في الظهور.

117
00:08:00,560 --> 00:08:02,040
إذن فما الحل؟

118
00:08:02,040 --> 00:08:06,360
هنا يأتي دور عملية التهذيب، حيث يكون المقياس

119
00:08:06,360 --> 00:08:07,515
من الأسفل لأعلى.

120
00:08:07,515 --> 00:08:11,709
[موسيقى]