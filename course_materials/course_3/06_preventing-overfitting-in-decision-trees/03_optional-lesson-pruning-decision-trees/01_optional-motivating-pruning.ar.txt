[موسيقى] في كثير من الأحيان، فإن أفضل طريقة لمنع الإفراط في تسلسل القرار هي استخدام التهذيب. حيث ينمو التسلسل ليكون أكبر بكثير مما تحتاجه، ثم تقوم بإزالة الأجزاء التي تصبح أقل أهمية. التهذيب مهم جدا ⏎ إذا كنت تقوم بتنفيذ خوارزمية تسلسل قرار واقعية. ومع ذلك، قد تصبح التفاصيل مملة إلى حد ما. ليس بها الكثير من الرياضيات ولكن ⏎ فقط الكثير من الأشياء الصغيرة التي يجب القيام بها، بالتحديد، الكثير من التوصيل والتنقيط للمتغيرات T و I. ولذا جعلنا هذا القسم اختياريًا. ونحن نرحب بك لمشاهدته. لا يوجد الكثير من الرياضيات، بل فقط الكثير من التفاصيل. أنصحك ⏎ بالانتباه والتركيز إذا كنت تنشئ تسلسلًا خاصًا بك لاتخاذ
القرارات، فهذا يمثل التعلم من البداية. وإذا لم يكن الأمر كذلك، فقط تعرف على عملية التهذيب، ⏎ فقد تحدثنا عنها منذ قليل. واعلم بأن معظم التطبيقات، وبالتحديد التطبيقات الكبيرة الموجودة حاليًا، تستخدم التهذيب بطريقة أو بأخرى. ناقشنا الكثير من التكرار ونحن ننشئ تسلسل القرارات من أعلى إلى أسفل وناقشنا نوعين من قائمة توقف L وشروط التوقف، تلك التي يجب أن نتبع حالات التوقف دائما من أجلها في الوحدة السابقة وحالات قائمة
التوقف الثلاث في هذه الوحدة. الآن دعونا نستكشف بعض التحديات التي تحدث، مع حالات التوقف المبكر المذكورة. حالة التوقف المبكر كانت تعنى
بانتقاء أقصى عمق، وتوقف التكرار بمجرد الوصول إلى العمق الأقصى المحدد. السؤال هو، ⏎ كيف يمكن انتقاء أقصى عمق؟ قلنا إنه يجب عليك استخدام الصلاحية
المتبادلة لمجموعات التحقق من الصحة، يمكن أن تكون هناك تحديات مع وضع البيانات جنبًا إلى ذلك وقد تضطر العودة إلى الخوارزميات عدة مرات، وقد لا تصل دائمًا إلى الإجابة المطلوبة. بالإضافة إلى أنك تريد بعض الأجزاء من ⏎ التسلسل ينمو أكثر من غيره. ويصبح من التعقيد البالغ وضع هذا المتغير. الآن، الحالة الثانية للتوقف المبكر، ⏎ هي الأخطر. تقول قاعدة الحالة الثانية للتوقف المبكر؛ توقف، ⏎ إذا توقف التناقص في خطأ التدريب. إذا حدث ذلك، فإن خطأ التصنيف لبيانات التدريب يتوقف عن الانحدار، أو يصبح بقيمة ثابتة. ومع ذلك اتضح أنه من الناحية العملية قد لا يكون المنحنى منسقًا كما رسمته. قد لا يسير على نحو سلس، بل قد يقفز من قيمة لأخرى وقد يسير بطرق غير مألوفة. دعونا نرى لماذا يمكن أن يحدث ذلك. كما ناقشنا في وقت مبكر، الحالة الثانية للتوقف المبكر تتوقف بتوقف انحدار الخطأ وبالتالي فهي قد تكون خطرة. ولإظهار مدى خطورة ذلك، نحتاج إلى مثال مضاد لنستخدمه مع أي شيء، وإذا تلقيت
الدورة الأولى فستعرف أنه xor. إذن، هذه هي البيانات وهذه البيانات تتوافق مع xor للإدخال الأول والثاني. لذا، عندما يكون كل منهما خطأ، يصبح الناتج خطأ عندما يكون خطأ، والآخر صحيحًا، يصبح الناتج
صحيحًا، كما يظهر في الصفين في الوسط وعندما يكون كل منهما صحيحًا، يصبح الناتج خطأ. إذا كنت تبحث عن مثال مضاد لأي شيء، فقط استخدم xor. في الواقع إذا اتصل بك شخص ما في منتصف الليل ليسألك ما هو المثال المضاد لهذه المشكلة المعقدة التي أواجهها؟ فقط قل xor. إذن ما يحدث مع xor عندما ننظر فقط إلى أساس تسلسل القرارات. حسنا لدينا صفان بمخرجات صحيحة، وصفان بمخرجات خاطئة. إذاً فما هو الخطأ في تسلسل القرار الذي نحاول ترقيته. حسناً، فقط سنختار واحدة من
هذين الخيارين فكلاهما متشابه، لنفترض أننا اخترنا المخرج "صحيح" لأننا متفائلون والإيجابية من خصالنا. وسنقول أن الناتج هنا هو 1+. وهذا يعني أننا
نرتكب "خطأين". هناك خطآن، وبالتالي نقطتان
من نقاط البيانات الأربعة، قيمة الخطأ هنا 0.5، وهو أمر سيئ. مما يعني أنها تماثل القيمة العشوائية، حيث قيمة الخطأ 0.5. حسنًا، دعنا نر ما يحدث
إذا قسمنا ‎x[1]‎. إذا قسمنا x [1] فنحن في الواقع نقسم الجدول كما ترى وستلاحظ أن بسبب التناسق التام في xor، للمرة الثانية، نحن في نفس الوضع بالنسبة لكل واحدة من هذه العقد اللاحقة. إذن، على سبيل المثال، في حالة x-1 تساوي 2، لديك y "صحيح" و y "خطأ". لذا لنفترض أنك تتوقع واحدًا زائدًا لهذا الجانب وأيضًا واحدًا زائدًا للجانب حيث x-1 هو "خطأ"، لأن كل شيء متماثل. إذن فما هو الخطأ؟ حسنا، لقد ارتكبنا بعض الأخطاء. فنحن أخطأنا هنا وهنا حتى جعلنا 1 +1 أخطاءَ وهي 2 من أصل 4، لذلك فهي 0.5. لذلك تبين أن تقسيم x [1] لا جدوى منه. حسنا، لنتعرف على ماذا سيحدث عند محاولة تقسيم X [2] فإذا حاولت تقسيم x [2] سأصل إلى نفس النتيجة المتوقعة عند تغيير هذا المسمى هنا من x[1] إلى x[2]. ولمرة أخرى، سنكون في نفس الوضع بالضبط حيث يكون المخرج 1، على كل واحدة من هذه النتائج. ونرتكب نفس العدد من الأخطاء. لذا خطأ واحد لكل منهما، يعطينا، قيمة الخطأ الكلية البالغة 0.5. وإذا نظرت، بشكل عام، يتعذر تقسيم x1 و x2. وهذا يساعدني على تقليل الخطأ. كلا التقسيمين يعطينا نفس الخطأ. وبالتالي، فالسؤال هو، هل يجب أن أبدأ الآن؟ إذا لم تتحسن أي من الميزات ثم استعنت بالحالة الثانية للتوقف المبكر فستكون النتيجة هي محاولة التقليل من عدد التقسيمات. ثم نتوقف عن تقسيم تسلسل القرار. ليكون الناتج الأولي "صحيحا"، ارتكبنا خطأين ولنفترض أن قيمة الخطأ التي تحصل عليها في النهاية هي 0.5. لذا، [ضحك] هذا هو السبب في أن xor هو مثال مضاد لكل شيء. ﻣﺎذا ﻳﺤﺪث ﻟﻮ ﻟﻢ ﺗستعن بالحالة الثانية ﻟﻠﺘﻮﻗﻒ المبكر واستمررت في التقدم؟ إذا استمررت فستحصل على
هذا التسلسل الذي يبدو كما تراه. وكما ترى، لكل واحد من هذه الفروع، هناك "أخطاء" بقيمة 0. لذا فإن الفرع من المخرجات اليسرى خاطئ أو ناقص واحد. وبه صفر من الأخطاء، والفرع الآخر كذلك. والثالث والرابع كذلك أيضًا. وبالتالي إذا استمررت. وإذا لم تستعن بالحالة
الثانية من التوقف المبكر، فستحصل على ثلاثة أخطاء بقيمة صفر. وفي تلك الحالة هناك فرق شاسع، بين خطأ التدريب 0.5، المماثل للقيمة العشوائية، وبين خطأ التدريب 0، والذي يعتبر خير مثال على خطأ التدريب. لذلك فإن الحالة الثانية للتوقف المبكر أنشأت فجوة كبيرة عشوائية بين أفضل ما يمكنها إنتاجه. وبين المخرجات الفعلية. لذلك رأينا قائمة بالحالة الثانية. توقف عن التكرار إذا انحدرت قيمة خطأ التدريب بما فيه الكفاية. قد تبدو وكأنها نصيحة منطقية، ولكن لديها بعض المخاطر الفادحة. نظرًا لأن التقصير في الملاحظة، لا يستكشف الفروع بما فيه الكفاية. هو نوعًا ما مبدأ جيد بشكل عام. لكن إذا قمت بالتطبيق من الأعلى إلى الأسفل، فقد تبدأ المشاكل في الظهور. إذن فما الحل؟ هنا يأتي دور عملية التهذيب، حيث يكون المقياس من الأسفل لأعلى. [موسيقى]