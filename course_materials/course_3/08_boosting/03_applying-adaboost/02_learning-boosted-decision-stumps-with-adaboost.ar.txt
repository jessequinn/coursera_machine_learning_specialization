[موسيقى] سنأخذ بعض الدقائق في تمثيل هذه
الخوارزمية المجردة التي وصفناها ونرى كيف تبدو في
سياق تعلم فروع القرار. توجد فروع قرارات معززة أخرى، وهي طريقة افتراضية بسيطة وجيدة حقًا
للتدرب على البيانات. وهي الطريقة التي سنتعمق فيها
بشكل أكبر وستساعدنا على تأسيس بعض المفاهيم
التي واجهتنا حتى الآن. لذا، قد قمت بتوضيح خوارزمية AdaBoost
التي ناقشناها من قبل في الشرائح السابقة، ولكن لأكون واضحًا، فسأتحدث حول فروع
القرار الخطية لـ Ft محاولين اكتشاف كيفية تحديثها، واكتشاف
المعامل لديها، وهو W^t. خطوتنا الأولى هي اكتشاف كيفية
تعلم فرع القرار التالي، والذي سيكون Ft. وهذا سيكون بمثابة التعلم القياسي
لفرع القرار. وسنحاول تقسيمها وفقًا لكل سمة، من حيث
الدخل والسجل الائتماني، والمدخرات وظروف السوق. واكتشاف مدى جودة كل من فروع
القرارات الناتجة بالنسبة للبيانات المرجحة. ولاحظ أنه في خلال العملية قد نقوم
بتقسيم الدخل عدة مرات. لذا، فخلال عدة مراحل متكررة قد
نعيد النظر في نفس السمة. سنحاول تقسيم كل واحدة من
تلك السمات، وسنقوم بقياس نسبة الخطأ المرجح بالنسبة لكل
واحدة منهم على بيانات التدريب. لنفترض تقسيم الدخل، فقد تكون نسبة
ترجيح الخطأ 0.2. وبالنسبة لتقسيم الائتمان،
فقد تكون 0.35. ولتقسيم المدخرات،
قد تكون 0.3. وأخيرًا، مرحلة تقسيم
ظروف السوق، وقد تكون الأسوأ ضمن فروع
القرارات الأربعة تلك. فتبعًا لهذه البيانات المرجحة، فقد يكون
خطأ مرجحًا بنسبة 0.4. وبالتالي، سننتقي أفضل سمة، وهي السمة
التي لديها أقل نسبة خطأ مرجح، لذا، سنقوم باختيار التقسيم
الأول للسمة. وسنقوم بتقسيم الدخل إلى
أكبر من 100000. لذا، فستمثل Ft فروع القرارات، والتي تقول إن الدخل الأكبر من 100000، إذا كان كذلك، فحينها
يكون القرض آمنًا، وإذا لم يكن فحينها يكون القرض يشكل مخاطرة. والآن، فإن السؤال الأخير، ما المعامل الذي سنعطيه لهذا
المصنف المحدد؟ كل ما علينا القيام به هو إدخال القيمة 0.2 إلى
معادلة AdaBoost، وإذا قمنا بإدخالها وقمنا ببعض الرياضيات، فستكون النتيجة 0.69. لذا، فمعامل فرع القرار هذا
سيكون 0.69. وبالعودة إلى خوارزمية AdaBoost،
فقد ناقشنا كيفية تعلم هذه الأشياء الجديدة من البيانات،
وكيفية اكتشاف المعامل. دعونا نتحدث عن كيفية تحديث ترجيح
αi لكل نقطة بيانات. وها هي العملية البديهية
التي تحدث. لدينا نقاط البيانات وقد قمت بتحديدهم هنا وفقًا للدخل
كما فعلنا من قبل. ولكني سأجري عملية تنبؤ باستخدام
فرع القرار هذا. والسؤال هو، ما مدى جودة فرع القرار
الذي لديه دخل أكبر من 100000، وإذا قمت بالنظر إليه، فستجد أنه يحدث أخطاء في بعض
نقاط البيانات ويأتي بالبعض الآخر بشكل صحيح. لذا، فقد حددت النقاط الصحيحة باللون الأخضر
والأخطاء باللون الأحمر. وإذا أخذنا الترجيحات السابقة التي يرمز لها
بالرمز α ،لكل واحدة من نقاط البيانات تلك، كما أنا موضح تلك الترجيحات
الموجودة هنا. فنحن نحتاج إلى حساب الترجيح الجديد
وفقًا لصيغة المعادلة بالأعلى، والتي عبارة عن صيغة قياسية
لمعادلة AdaBoost . سنقوم بإدخال قيمة W^ التي
قمنا بحسابها 0.69، إلى معادلة AdaBoost لاكتشاف ما هو حاصل
ضرب كل واحدة من هذه الترجيحات. إذا قمنا بإدخالها، فسترى أن كل قيمة -0.69
هي نصف، فسنقوم بالحصول على نصف الترجيح لكل نقطة
بيانات صحيح، وأن كل قيمة 0.69 هي 2. لذا، فسنقوم بمضاعفة الترجيح لكل
نقطة بيانات غير صحيحة. لذا، سأنتقل من صف إلى آخر، وبالنسبة للنقاط الخضراء الصحيحة، فسأقوم
بتقسيم الترجيح إلى النصف. وبالتالي، بالنسبة للصف الأول هناك فكان الترجيح
من قبل 0.5، وقد أصبح الآن 0.25. والنقطة التالي كانت 1.5 وقد أصبحت
0.75 لأنها نقطة صحيحة. بالنسبة للصف الثالث، فقد ارتكبت خطأ
حيث كان يساوي 1.5 من قبل والآن، سأقوم بمضاعفة تلك
القيمة، سأجعلها 3. لذا، يمكننا التعامل مع كل نقطة بيانات تلو الأخرى
ثم نضربها في 2 أو نقسمها على 2، وهو الترجيح، الذي وفقًا له نكون حصلنا
على نقطة البيانات بشكل صحيح أو لا. وإن الأمر في غاية البساطة لإنشاء مصنف
لفروع القرارات في AdaBoost، فذلك يميل للعمل بشكل جيد للغاية على
نطاق واسع من مجموعات البيانات. [موسيقى]