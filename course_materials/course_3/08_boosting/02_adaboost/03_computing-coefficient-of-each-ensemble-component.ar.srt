1
00:00:00,000 --> 00:00:04,547
[موسيقى]

2
00:00:04,547 --> 00:00:09,827
يستخدم AdaBoost ذلك، بصيغة بها قدر أقل من الثقة،
 لاكتشاف ما الذي يجب أن تكون عليه Ŵt ،

3
00:00:09,827 --> 00:00:15,020
ولكنها ستكن بديهية للغاية إذا تناولتها بقدر أكير من التفصيل.

4
00:00:15,020 --> 00:00:19,320
وتشتق هذه الصيغة من نظرية مشهورة، ألا وهي نظرية AdaBoost،

5
00:00:19,320 --> 00:00:22,280
والتي أود أن أتطرق إليها باختصار شديد مع انتهاء هذه الوحدة.

6
00:00:22,280 --> 00:00:26,867
ولكنها صيغة تسمح لك بالعثور على مصنفات تقوم بأداء أفضل وأفضل

7
00:00:26,867 --> 00:00:30,253
وتساعد على التعزيز للحصول على الحل الأمثل.

8
00:00:30,253 --> 00:00:35,081
ولذا، دعونا نتناول تلك بقدر أكبر بقليل من التفصيل، من خلال استعراض

9
00:00:35,081 --> 00:00:35,603
بعض الحالات الممكنة.

10
00:00:35,603 --> 00:00:38,180
ولذا، فإن السؤال هو، هل (Ft) مناسبة؟

11
00:00:38,180 --> 00:00:39,737
في حال كانت Ft جيدة مناسبة للغاية.

12
00:00:39,737 --> 00:00:45,110
فسيكون بها خطأ أقل بالفعل فيما يخص بيانات التدريب،
 والذي يطلق عليه الخطأ المرجح.

13
00:00:45,110 --> 00:00:51,297
ولذا، وعلى سبيل المثال، إذا كان الخطأ المرجح
يساوي 0.01، فمن ثم فهو يعتبر مصنِف مناسب.

14
00:00:51,297 --> 00:00:55,943
والسؤال هو، ما الذي يحدث لهذا المصطلح المتوسط الشهير

15
00:00:55,943 --> 00:00:58,280
عندما يساوي الخطأ المرجح 0.01.

16
00:00:58,280 --> 00:01:05,270
ولهذا فإن المصطلح في المنتصف سيكون 1-0.01 ÷ 0.01،

17
00:01:05,270 --> 00:01:08,682
والذي يساوي 99.

18
00:01:08,682 --> 00:01:11,881
وبعد ذلك، ولتكملة Ŵt،

19
00:01:11,881 --> 00:01:17,921
سنقوم بأخذ ناتج ضرب 1/2 في اللوغاريتم للعدد 99،

20
00:01:17,921 --> 00:01:22,645
ولهذا، إن قمت بضرب 1/2 في اللوغاريتم للعدد 99،

21
00:01:22,645 --> 00:01:25,611
فستحصل على 2.3.

22
00:01:25,611 --> 00:01:32,889
ولهذا، فإن ذلك يعتبر مصنِفًا ممتازًا، وقد أعطيناه
ترجيحًا بنسبة 2.3، والذي يعتبر ترجيحًا مرتفعًا.

23
00:01:32,889 --> 00:01:36,830
والآن، دعونا نرى ماذا يحدث، إذا كان المُخرج لدينا مصنِف عشوائي،

24
00:01:36,830 --> 00:01:41,471
ولذا، فإننا كما قلنا إن المصنِف العشوائي،
به خطأ مُرجح يساوي 0.5

25
00:01:41,471 --> 00:01:44,747
فهو بذلك شيء لا يمكن الوثوق به.

26
00:01:44,747 --> 00:01:50,842
ولذا، إذا قمت بتلك العملية الحسابية 1-0.5 ÷ 0.5

27
00:01:50,842 --> 00:01:54,604
فستحصل على العدد السحري 1.

28
00:01:54,604 --> 00:01:59,475
وفي حال نظرت إلى 1/2 اللوغاريتم 1، فماذا سيكون اللوغاريتم 1؟

29
00:01:59,475 --> 00:02:03,119
فسيكون 0، ولذا فإن Ŵt ستكون 0.

30
00:02:03,119 --> 00:02:05,849
ولذا، ما تعلمناه هو أن إذا كان المصنف عشوائي،

31
00:02:05,849 --> 00:02:07,994
فلن يقوم بأي شيء ذي معنى،

32
00:02:07,994 --> 00:02:09,491
وسنقوم بحسابه باعتباره صفرًا.

33
00:02:09,491 --> 00:02:12,935
ويكأن لسان حالنا يقول، أنت فظيع، سنقوم بتجاهلك،

34
00:02:12,935 --> 00:02:16,340
وقد يكون لديك زملاء يشبهون ذلك نوعًا ما،

35
00:02:16,340 --> 00:02:17,670
ممن يقولون أشياءً عشوائية،

36
00:02:17,670 --> 00:02:21,110
ولا تثق أبدًا بما يقولونه، وتضع ترجيح يساوي 0 أمام آرائِهم.

37
00:02:21,110 --> 00:02:22,860
ولذا، هذا ما سيقوم به AdaBoost أيضًا.

38
00:02:24,160 --> 00:02:27,843
والآن سيكون لدينا حالة مثيرة جدًا جدًا.

39
00:02:27,843 --> 00:02:35,247
دعونا نفترض أن التصنيف فظيع،
 وسيكون به خطأ مرجح يساوي 0.99.

40
00:02:35,247 --> 00:02:40,181
ولذا، فإن كل ما به تقريبًا خطأ، ولذا يعد أسوأ من العشوائي،

41
00:02:40,181 --> 00:02:45,327
ودعونا نرى ماذا يحدث للمصطلح
 في المنتصف هنا في المعادلة التي لدينا،

42
00:02:45,327 --> 00:02:50,097
أنت تحصل على 1-0.99 ÷ 0.99،

43
00:02:50,097 --> 00:02:54,072
ويساوي الناتج 0.01،

44
00:02:54,072 --> 00:03:01,547
وخمن ماذا قد يحدث عندما تأخذ 1/2 اللوغاريتم والذي يساوي 0.01؟

45
00:03:01,547 --> 00:03:05,106
ستحصل على -2.3.

46
00:03:05,106 --> 00:03:10,537
وعندما رأيت ذلك أولاً، قلت يا للروعة،
 إن نظرية AdaBoost هذه رائعة،

47
00:03:10,537 --> 00:03:14,491
ولكني استغرقت لحظات، لفهم ماذا حدث للتو.

48
00:03:14,491 --> 00:03:18,317
لقد حصلنا على هذا المصنف الفظيع.

49
00:03:18,317 --> 00:03:22,343
ولكننا أعطيناه ترجيحًا مرتفعًا
للغاية وهو 2.3،

50
00:03:22,343 --> 00:03:25,128
ولكن مع علامة سالبة، فلماذا ذلك؟

51
00:03:25,128 --> 00:03:33,114
لأن المصنِف الفظيع جدًا، قد يكون فظيعًا
ولكن إن أخذنا 1-Ft،

52
00:03:33,114 --> 00:03:38,957
فإننا سنقوم بالضبط بعكس ما يُقال،
ولذا سيكون مصنِفًا رائعًا،

53
00:03:40,894 --> 00:03:45,158
وبصيغة أخرى، إذا قمنا بعكس المصنف، فسيحدث ذلك بشكل رائع.

54
00:03:45,158 --> 00:03:47,595
وتقوم نظرية AdaBoost بذلك تلقائيًا لك،

55
00:03:47,595 --> 00:03:50,061
وهذا مجددًا، يعتبر نوعًا من
استخدام تناظر الصديق،

56
00:03:50,061 --> 00:03:53,784
فقد يكون لديك، والذي يكون صاحب آراء جيدة تمامًا،

57
00:03:53,784 --> 00:03:56,051
ولكنها تبدو جميعها خاطئة.

58
00:03:56,051 --> 00:03:59,325
ولذا، نقوم بالضبط بعكس ما يقوله الشخص.

59
00:03:59,325 --> 00:04:02,980
وربما يكون ذلك،
 مثل أن تسمع لوالديك أو أي شخص ما أو بعض الأصدقاء

60
00:04:02,980 --> 00:04:06,931
وتقول حسنًا، حسنًا،
 يجب أن أقوم بكذا، ولكنك في قرارة نفسك ستقوم بعكسه.

61
00:04:06,931 --> 00:04:09,434
ومن خلال القيام بذلك، قد أقوم بأشياء رائعة في العالم.

62
00:04:09,434 --> 00:04:14,123
ويقوم AdaBoost تلقائيًا باكتشاف ذلك لك، ويعتبر ذلك رائعًا.

63
00:04:14,123 --> 00:04:18,332
والآن، دعونا نعود مرة أخرى لخوارزمية AdaBoost
 والتي تحدثنا عنها قبل ذلك،

64
00:04:18,332 --> 00:04:19,866
ومن خلال هذا الجزء من هذه الوحدة،

65
00:04:19,866 --> 00:04:23,870
سنقوم بالتدقيق حول كيفية يتم حساب المعامل Ŵt،

66
00:04:23,870 --> 00:04:27,169
ولاحظنا أنه يمكن حساب ذلك من خلال هذه الصيغة البسيطة.

67
00:04:27,169 --> 00:04:32,064
وقمنا بحساب الخطأ المُقدر لـ Ft 
 وقلنا إن Ŵt تساوي 1/2 اللوغاريتم

68
00:04:32,064 --> 00:04:36,659
والذي به 1 - الخطأ المرجح ومقسومًا على الخطأ المرجح.

69
00:04:36,659 --> 00:04:38,961
ومن خلال ذلك، فسيكون لدينا Ŵt،

70
00:04:38,961 --> 00:04:42,844
وسيمكن التركيز على كيفية
التوصل إلى Alpha IS،

71
00:04:42,844 --> 00:04:50,509
ونحن نود أن تكون α I أن تكون مرتفعة،
 عندما تقوم Ft بأخطاء أو (كلام غير مسموع )

72
00:04:50,509 --> 00:04:53,549
[موسيقى]