1
00:00:00,000 --> 00:00:04,712
[موسيقى]

2
00:00:04,712 --> 00:00:09,481
>>وأخيرًا، فنحن في حاجة إلى معالجة هذه المشكلة التقنية التي
أشرنا إليها عندما قمنا بتوحيد ترجيحات نقاط البيانات

3
00:00:09,481 --> 00:00:14,480
لتبدأ من 1 وصولًا إلى N، وذلك عندما
كانت لدينا ترجيحات موحدة.

4
00:00:14,480 --> 00:00:18,882
والتي ينبغي أن تقوم بتوحيد ترجيحات نقاط
البيانات من خلال التكرار،

5
00:00:18,882 --> 00:00:23,426
فعلى سبيل المثال، إذا أخذت نقطة البيانات Xi،
على افتراض أنها غالبًا ما تمثل خطأ،

6
00:00:23,426 --> 00:00:28,041
حيث نقوم بضرب الترجيح في رقم
موجب مرة أخرى،

7
00:00:28,041 --> 00:00:29,112
مرارًا وتكرارًا.

8
00:00:29,112 --> 00:00:34,450
لنفترض أننا سنضربه في 2 مرارًا وتكرارًا،
حتى يصبح الترجيح كبيرًا للغاية.

9
00:00:34,450 --> 00:00:38,290
ومن ناحية أخرى، يمكنك أن تأخذ نقطة البيانات Xi
والتي غالبًا ما تمثل شيئًا صحيحًا،

10
00:00:38,290 --> 00:00:41,570
وتقوم بضربها بعددٍ ما أقل من 1، ولنفترض
أننا سنضربها في نصف.

11
00:00:41,570 --> 00:00:44,578
ثم تستمر في ضرب القيمة في نصف مرارًا وتكرارًا،
حتى يمكن أن يصبح هذا الترجيح،

12
00:00:44,578 --> 00:00:45,870
صغيرًا للغاية.

13
00:00:45,870 --> 00:00:52,220
وبالتالي، يمكن أن تؤدي هذه المشكلة إلى حالة من
عدم الاستقرار العددي في هذا النهج.

14
00:00:52,220 --> 00:00:57,430
وكما تعلم، قد لا يتمكن جهاز الكمبيوتر لديك من التصرف على
نحوٍ جيد في وجود هذا الكم الجنوني من البيانات المرجحة.

15
00:00:57,430 --> 00:01:02,240
لذا، فما يجب القيام به، أنه فيما يلي
كل تكرار، يجب أن نقوم 

16
00:01:02,240 --> 00:01:07,710
بتوحيد ترجيحات جميع نقاط
البيانات لتصل إلى واحد.

17
00:01:07,710 --> 00:01:13,370
فبشكل أساسي، نقوم بقسمة كل αi على مجموع
نقاط البيانات مضروبًا في αi،

18
00:01:13,370 --> 00:01:17,690
لذا، فإن هذا النهج

19
00:01:18,880 --> 00:01:23,890
يحافظ على الترجيحات في نطاق معقول،
ويتجنب عدم الاستقرار العددي.

20
00:01:23,890 --> 00:01:26,290
لذا، دعونا نلخص خوارزمية AdaBoost.

21
00:01:26,290 --> 00:01:30,380
حيث نبدأ بالترجيحات المتعادلة
والموحدة والمتساوية

22
00:01:30,380 --> 00:01:31,460
بالنسبة لكل نقاط البيانات.

23
00:01:31,460 --> 00:01:33,850
ونتعرف على المصنف Ft.

24
00:01:33,850 --> 00:01:39,870
ونحاول إيجاد المعامل لهذا المصنف، استنادًا إلى مدى
جودته فيما يتعلق بالخطأ المرجح.

25
00:01:39,870 --> 00:01:45,760
ثم نقوم بتحديث الترجيحات لتستوعب أخطاء
بنسبة أكثر من الأشياء الصحيحة لدينا.

26
00:01:45,760 --> 00:01:46,830
وأخيرًا،

27
00:01:46,830 --> 00:01:52,300
ثم نوحد الترجيحات عن طريق قسمة كل
قيمة على المجموع الكلي للترجيحات.

28
00:01:52,300 --> 00:01:55,610
وتوحيد الترجيحات هذا هو أمر
مهم من الناحية العملية.

29
00:01:55,610 --> 00:02:00,456
لذا، كل ما يتعلق بخوارزمية AdaBoost،
فهي رائعة وتعمل بشكل جيد للغاية،

30
00:02:00,456 --> 00:02:01,629
وسهلة الاستخدام حقًا.

31
00:02:01,629 --> 00:02:06,339
>> [موسيقى]