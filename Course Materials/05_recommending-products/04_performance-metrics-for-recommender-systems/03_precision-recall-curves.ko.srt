1
00:00:00,358 --> 00:00:05,604
[음악]

2
00:00:05,604 --> 00:00:09,683
정밀도와 재현율 기준을 통해 사용 후보인

3
00:00:09,683 --> 00:00:14,200
여러 알고리즘을 어떻게 비교할지 알아보죠

4
00:00:15,880 --> 00:00:20,190
이를 위해 정밀도-재현율(PR) 곡선을 그립니다

5
00:00:20,190 --> 00:00:25,518
이 곡선이 무엇을 나타내는지부터 설명드리죠

6
00:00:25,518 --> 00:00:30,074
곡선이 추천 시스템을 어떻게 표현할지 보려면

7
00:00:30,074 --> 00:00:34,916
추천 시스템이 얼마나 많은 항목을 추천할지를

8
00:00:34,916 --> 00:00:39,586
결정하는 역치에 변화를 주면 됩니다

9
00:00:39,586 --> 00:00:44,458
아마존의 모든 유아용품의 등급을 매기고

10
00:00:44,458 --> 00:00:49,334
그중 하나, 둘, 세 개를 추천합니다

11
00:00:49,334 --> 00:00:51,772
이 역치에 변화를 준 거죠

12
00:00:51,772 --> 00:00:54,880
곡선의 윤곽을 그립니다

13
00:00:54,880 --> 00:00:57,270
좋아하는 상품만 추천하는 이상적인 추천기의

14
00:00:57,270 --> 00:01:01,210
곡선은 어떤 모습일까요?

15
00:01:02,740 --> 00:01:07,450
상품 하나만을 추천할 때 정밀도는 어떨까요?

16
00:01:07,450 --> 00:01:11,970
좋아하는 상품을 골라줬고

17
00:01:11,970 --> 00:01:18,520
상품이 하나뿐이니 정밀도는 1입니다

18
00:01:18,520 --> 00:01:21,700
재현율은 어떨까요?

19
00:01:21,700 --> 00:01:25,590
좋아하는 게 10개고 그중 하나만

20
00:01:26,730 --> 00:01:30,550
찾아냈다면 1/10입니다

21
00:01:30,550 --> 00:01:35,650
마찬가지로 보여주는 항목 수를 증가시켜도

22
00:01:35,650 --> 00:01:39,620
정밀도는 1에 머물러 있습니다

23
00:01:39,620 --> 00:01:43,090
오직 좋아하는 상품만 추천하기 때문인데

24
00:01:43,090 --> 00:01:48,420
재현율은 좋아하는 항목이 더 포함되면서 증가합니다

25
00:01:48,420 --> 00:01:55,256
그러다보면 1, 1에 도달하게 됩니다

26
00:01:55,256 --> 00:02:01,366
이상적인 PR곡선이 이것입니다

27
00:02:01,366 --> 00:02:04,970
더 현실적인 추천기의 곡선이

28
00:02:04,970 --> 00:02:07,270
어떤 모습일지 알아봅시다

29
00:02:08,800 --> 00:02:16,121
이건 이상적인 추천기라고 써둘게요

30
00:02:20,174 --> 00:02:23,714
좀 더 현실적인 추천기는

31
00:02:23,714 --> 00:02:25,002
어떤 모습일지 보겠습니다

32
00:02:25,002 --> 00:02:29,927
처음으로 추천하는 상품은 좋아할 수도

33
00:02:29,927 --> 00:02:34,397
아닐 수도 있으니 정밀도 축의 어느 지점에서 시작하죠

34
00:02:34,397 --> 00:02:38,615
역치에 변화를 충분히 주면 어느 지점부터

35
00:02:38,615 --> 00:02:43,050
좋아하는 상품을 추천할 겁니다

36
00:02:43,050 --> 00:02:46,651
정밀도와 재현율이 모두 올라가게 되죠

37
00:02:46,651 --> 00:02:51,540
그러나 좋아하지 않는 상품이 추천되죠

38
00:02:52,914 --> 00:02:58,500
이게 일어나는 시점에서 관심 항목 수에는

39
00:02:58,500 --> 00:03:03,560
변화가 없으니 재현율은 그대로지만

40
00:03:03,560 --> 00:03:06,590
정밀도는 하락하는데 전체 항목 수인

41
00:03:06,590 --> 00:03:08,530
초록색 사각형들이 증가하기 때문입니다

42
00:03:08,530 --> 00:03:13,580
정밀도는 수직하락하지만 재현도는 그대롭니다

43
00:03:14,660 --> 00:03:20,060
곡선은 지그재그 형태 즉 정밀도가 하락한 다음

44
00:03:20,060 --> 00:03:26,900
정밀도와 재현율이 다시 상승하는 모습을 보입니다

45
00:03:26,900 --> 00:03:30,360
한번 그려볼 텐데 아주 정확하진 않더라도

46
00:03:30,360 --> 00:03:31,790
대략 비슷한 모습입니다

47
00:03:33,810 --> 00:03:37,968
일반적으로 PR곡선은 이런 모양입니다

48
00:03:37,968 --> 00:03:41,850
좀 더 현실적인 시스템의 예였습니다

49
00:03:45,630 --> 00:03:51,128
이상적인 추천기와 비교되는 또 다른 추천기입니다

50
00:03:51,128 --> 00:03:56,245
이제 PR곡선을 그리는 법을 아니

51
00:03:56,245 --> 00:04:00,950
여러 알고리즘을 비교해서 어떤 게 최선인지 보겠습니다

52
00:04:03,590 --> 00:04:06,610
정밀도와 재현율이 모두 높아지길 바라는데

53
00:04:06,610 --> 00:04:11,750
최선은 무엇일까요?

54
00:04:11,750 --> 00:04:15,160
이상적인 추천기가 이런 곡선임을 알아봤습니다

55
00:04:16,470 --> 00:04:20,920
하지만 지그재그 모양의 다른 곡선도 살펴봤는데

56
00:04:21,920 --> 00:04:24,480
이중 어느 한쪽에 절대적 우위가 있지는 않습니다

57
00:04:24,480 --> 00:04:27,760
각각의 지점에서 다른 성능을 보일 겁니다

58
00:04:27,760 --> 00:04:31,580
여기 이걸 지우고 다른 색을 써서

59
00:04:31,580 --> 00:04:33,880
좀 더 분명하게 그려보겠습니다

60
00:04:36,580 --> 00:04:39,500
어느 한쪽이 언제나 낫다고 하긴 힘듭니다

61
00:04:43,910 --> 00:04:46,304
여기 하나 더 그려보죠

62
00:04:49,581 --> 00:04:54,025
이 경우 여러 알고리즘을 비교해서

63
00:04:54,025 --> 00:04:58,877
어떤 게 최선이라고 어떻게 하나요?

64
00:04:58,877 --> 00:05:03,920
말씀드린 대로 PR이 되도록 크면 좋지만

65
00:05:03,920 --> 00:05:07,683
어느 한쪽이 다른 쪽보다 낫다는

66
00:05:07,683 --> 00:05:12,910
비교를 위해 측정할 게 있습니다
어떻게 접근할까요?

67
00:05:13,930 --> 00:05:18,280
곡선 아래 넓이를 구하면 됩니다

68
00:05:18,280 --> 00:05:24,128
파란색 곡선 아래 넓이를 구하고

69
00:05:27,866 --> 00:05:33,136
초록색 곡선 아래

70
00:05:33,136 --> 00:05:40,638
넓이와 비교하면

71
00:05:40,638 --> 00:05:45,926
어떤 게 큰지 나옵니다

72
00:05:45,926 --> 00:05:48,660
어떤 추천 시스템이 나은지

73
00:05:48,660 --> 00:05:54,276
간접적으로 알아볼 수 있는 방법입니다

74
00:05:54,276 --> 00:05:57,040
여기 이것인데

75
00:05:57,040 --> 00:06:02,222
이 기준은 방금 그려본

76
00:06:02,222 --> 00:06:08,240
곡선 아래 넓이를 활용합니다

77
00:06:08,240 --> 00:06:12,330
추천 시스템의 성능을 모든 상황에서

78
00:06:12,330 --> 00:06:15,920
알고 싶은 게 아닐 수도 있습니다

79
00:06:15,920 --> 00:06:19,670
예를 들어 웹사이트가 있고 페이지 크기에 따라

80
00:06:19,670 --> 00:06:25,090
얼마나 많은 항목을 보여줄 수 있을지 압니다

81
00:06:25,090 --> 00:06:30,091
이를테면 항목 10개 추천을 보여주거나

82
00:06:30,091 --> 00:06:34,436
사용자의 주의 범위가 어느 정도인지 알면

83
00:06:34,436 --> 00:06:38,140
상품 추천을 20개까지만 한다던가

84
00:06:38,140 --> 00:06:39,805
하는 식입니다

85
00:06:39,805 --> 00:06:41,385
이렇게

86
00:06:41,385 --> 00:06:45,705
상품 몇 개를 추천해야 할지 명확히 아는 경우

87
00:06:45,705 --> 00:06:52,310
추천 상품수에서 정밀도가 중요합니다

88
00:06:52,310 --> 00:06:56,410
상품수 제한이 있을 때 정밀도가

89
00:06:56,410 --> 00:06:59,970
되도록이면 높았으면 하기 때문이죠

90
00:06:59,970 --> 00:07:03,979
지금까지 정밀도와 재현율을 통해

91
00:07:03,979 --> 00:07:08,754
알고리즘을 비교하는 두 예제를 살펴봤습니다

92
00:07:08,754 --> 00:07:12,629
[음악]