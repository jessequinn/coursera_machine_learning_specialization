[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community 现在 我们来讨论一下
如何使用精度和召回率的这些度量 来比较我们可能会使用的不同算法 为了进行比较 我们可以画一个
叫做精度-召回率曲线的东西 首先我们来讲一下这些曲线代表的是什么 以及在特定的推荐系统中曲线代表什么 我希望你们做的是对推荐系统设立不同的阈值 改变系统可以给我推荐的数量 我会进行排列 比如说
对亚马逊上所有的婴儿产品排列 并且我想要你们只推荐一件或者两件或者三件等等 这就是你们要改变的阈值 这些都是沿着曲线能找到的 在最优推荐的地方曲线会是什么样呢 也就是只推荐我喜欢的产品的时候
曲线会是什么样呢? 只推荐一件产品的时候精度是多少? 我们知道推荐的这件是我喜欢的
所以精度是 我的所有只是这一件产品而且我喜欢它
所以我的精度是1 那么我的召回率是多少呢? 如果我有十件喜欢的东西 而结果只覆盖了其中的一件 所以召回率是1/10 同样地 随着我增加物品的数量 我的精度始终保持为1 我只推荐我喜欢的产品 但是 召回率在增加 
因为推荐的物品更多地覆盖了我喜欢的物品 所以最终我们会达到1
1这个点 所以最优的精度-召回率曲线是这条线 好了 我们再讨论一下
另一个真实的推荐系统的曲线 可能会是什么样子 在这之前 我要先注释一下
这是我们的最优推荐系统 现在 我们来看一下一个更真实的推荐系统 会是什么样子 好了 我们推荐的第一个产品可能不是我喜欢的 也可能是 所以曲线要从精度轴上的某处开始 最终在阈值足够大的某个点 可能会在某个点
系统能够推荐给我喜欢的产品 所以 精度和召回率都会增加 然后可能会发生增加我不喜欢的产品这种情况 所以 在这个点发生了什么
我的召回率保持着不变 因为没有覆盖到更多我感兴趣的物品 但是我的精度降低了
因为我在关注更广的世界 绿框中的更大的系列 所以我的精度直线下降
但是我的召回率保持不变 你可能会得到这种锯齿状的曲线 或者 这种精度下降的曲线
然后是这种精度和召回率上升的曲线 我会画出来 可能不完全准确 但是 大概看起来是这样的 这种就是典型的精度-召回率曲线 好了 这是一个更加真实的系统的例子 这是不同于我们的最优系统的另一种推荐系统 好了 我们已经知道了如何绘制精度-召回率曲线 那么我们来比较一下不同的算法
我们要如何知道哪个是最好的呢? 我们知道我们希望的是精度和 召回率都尽量地大
最好的情况会是什么样的呢? 我们讲最优的推荐是那条曲线 但是随后当我们看其他这些锯齿状的曲线时 一项并不一定完全地控制另一项 它们在不同的点可能在做不同的事 所以 一条曲线是不必要的
让我擦掉它 并且用另一种颜色画出来使之更清楚些 不是说这个就比另一个更好 也许我们会在这里有另一条曲线 所以 在这个例子中 我如何考虑比较这些 不同的算法 并且选择最好的一个呢? 正如我所说的 我们希望精度和召回率尽可能得大 我们可以度量的一件事情是笼统得比较一下 哪个比另一个更好
那么主要的思路是什么呢? 我们可以考虑一下曲线下方的面积 比如说 我们可以观察一下蓝色曲线下方的整个这片区域 举个例子 我们可以将之与 绿色曲线下的区域比较 可以知道哪个面积更大 这是一个代理 由此推荐系统能够做出更好的工作 这就是关键 我们可以采用的一种度量是曲线下方的面积 它度量的正式我在下方画出来的这个 但是你可能不关心推荐系统是如何 穿越所有可能的表现情景的 相反 我们假设 你可能会处在一个拥有网页的情景中 基于页面上的不动产 你知道你可以展示多少件物品 因此 你可能会向使用者推荐10件不同的物品 或者 你知道通常来说使用者的关注范围是什么 并且 你希望把推荐的产品限制在多少范围内
比如到20项 像这样 所以 在这些案例中 你明确的知道你会推荐多少产品 你关心的是在这个推荐产品数量下你的精度是多少 因为在推荐产品数目的限制下 你希望精度越大越好 这是使用精度和召回率的概念来比较不同算法的时候 你可能会用到的度量方法的例子 [背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community