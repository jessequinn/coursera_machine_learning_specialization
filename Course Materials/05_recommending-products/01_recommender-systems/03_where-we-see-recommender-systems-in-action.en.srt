1
00:00:00,000 --> 00:00:04,234
[MUSIC]

2
00:00:04,234 --> 00:00:07,720
Let's start by discussing some areas in
which recommender systems are playing

3
00:00:07,720 --> 00:00:10,010
a really active role behind the scenes.

4
00:00:10,010 --> 00:00:14,130
And as we're gonna see in this discussion,
depending on the specific application

5
00:00:14,130 --> 00:00:18,370
different aspects of the objective we're
trying to optimize are gonna be important.

6
00:00:19,630 --> 00:00:21,950
But before we start talking
about recommenders systems,

7
00:00:21,950 --> 00:00:25,630
it's really important to talk
about the idea of personalization,

8
00:00:25,630 --> 00:00:29,800
because personalization is transforming
our experience of the world.

9
00:00:29,800 --> 00:00:34,470
As we talked about in the clustering and
similarity module, there are lots and

10
00:00:34,470 --> 00:00:36,230
lots of articles out there.

11
00:00:36,230 --> 00:00:38,420
In lots and lots of webpages.

12
00:00:38,420 --> 00:00:40,900
And we can't possibly be
expected to browse all of them.

13
00:00:40,900 --> 00:00:43,930
So another example here is YouTube.

14
00:00:43,930 --> 00:00:44,620
So YouTube,

15
00:00:45,900 --> 00:00:51,610
it's quoted that there are roughly 100
hours of video recorded per minute.

16
00:00:51,610 --> 00:00:54,400
And the question is what do I care about.

17
00:00:54,400 --> 00:00:58,610
You know, I go on YouTube and I wanna
watch some video that's of interest to me.

18
00:00:58,610 --> 00:01:02,140
So this is an example, clearly,
of information overload.

19
00:01:02,140 --> 00:01:07,450
There's just way too much content there
for me possibly to be able to go and for

20
00:01:07,450 --> 00:01:13,790
me to find what I'm interested in without
somebody helping that content come to me.

21
00:01:13,790 --> 00:01:18,900
So browsing, the traditional
form of browsing, is history.

22
00:01:18,900 --> 00:01:21,420
There needs to be some way in which

23
00:01:21,420 --> 00:01:24,960
the content that's relevant to
me is automatically discovered.

24
00:01:24,960 --> 00:01:29,910
And so this the notion of personalization,
where we wanna connect users like myself,

25
00:01:29,910 --> 00:01:34,400
who goes to YouTube and
items which, in this case,

26
00:01:34,400 --> 00:01:39,380
are gonna be videos on YouTube
need to somehow be connected.

27
00:01:41,810 --> 00:01:43,100
Okay, so,

28
00:01:43,100 --> 00:01:47,390
personalization is gonna play a key role
in this notion of recommender systems and

29
00:01:47,390 --> 00:01:51,970
now let's talk about some examples where
recommender systems are very important.

30
00:01:51,970 --> 00:01:56,590
So one very classic example that we
mentioned a little bit earlier was this

31
00:01:56,590 --> 00:02:01,460
idea of Netflix where,
here people go and they watch videos.

32
00:02:01,460 --> 00:02:07,690
And Netflix has this goal of trying to
make suggestions of which movies or

33
00:02:07,690 --> 00:02:11,370
TV shows might be of interest
the person who's come to this site.

34
00:02:11,370 --> 00:02:15,180
And the question is, how are we gonna
go about doing these recommendations.

35
00:02:16,890 --> 00:02:21,150
Another example, again going back to
something we talked about earlier,

36
00:02:21,150 --> 00:02:23,840
is Amazon making product recommendations.

37
00:02:23,840 --> 00:02:28,100
So you go on to Amazon, you purchase some
product, and you'll see on the site that

38
00:02:28,100 --> 00:02:31,550
it makes a recommendation of other
products you might be interested in.

39
00:02:31,550 --> 00:02:34,790
But one important thing to
incorporate in these recommendations

40
00:02:34,790 --> 00:02:38,310
is the fact that not only do
you have to take into account

41
00:02:38,310 --> 00:02:40,880
the interest that the person
had in this one session.

42
00:02:40,880 --> 00:02:46,170
So for example here we're showing that
somebody bought a book about websites and

43
00:02:46,170 --> 00:02:49,080
might be interested in another
book about web applications or for

44
00:02:49,080 --> 00:02:53,950
example my most recent purchase on
Amazon were shoes for my son but

45
00:02:55,360 --> 00:02:59,160
the interest that I have in making that
purchase of shoes isn't my only interest.

46
00:02:59,160 --> 00:03:02,580
I'm not only looking for
shoes for a one-year old.

47
00:03:02,580 --> 00:03:06,250
There are lots of other reasons why
I go to Amazon and make purchases.

48
00:03:06,250 --> 00:03:09,870
And if you look at my history of purchases
you're gonna be able to make much

49
00:03:09,870 --> 00:03:14,080
better recommendations for
me than just based on a single session.

50
00:03:14,080 --> 00:03:18,850
And likewise,
recommendations might change over time.

51
00:03:18,850 --> 00:03:22,630
So there's interest in making
recommendations, for example,

52
00:03:22,630 --> 00:03:25,180
what I might be interested
in purchasing today.

53
00:03:25,180 --> 00:03:28,381
So if you look at my
purchase history a year ago,

54
00:03:28,381 --> 00:03:31,310
I was buying a lot of newborn products.

55
00:03:31,310 --> 00:03:33,320
So newborn baby products.

56
00:03:33,320 --> 00:03:37,580
But that's probably not something that
I'm very likely to purchase today.

57
00:03:37,580 --> 00:03:40,650
So the recommendations that
Amazon presents to me today

58
00:03:40,650 --> 00:03:42,520
have to adapt with time.

59
00:03:42,520 --> 00:03:45,840
So just as on demand video with
personalized recommendation has really

60
00:03:45,840 --> 00:03:50,900
revolutionized how people watch movies and
TV shows, likewise there are a lot

61
00:03:50,900 --> 00:03:55,570
of websites that provide streaming
audio with personal recommendations.

62
00:03:55,570 --> 00:03:59,760
However, in this case unlike
thinking about on demand video

63
00:03:59,760 --> 00:04:03,160
here we want one song
to play after another.

64
00:04:03,160 --> 00:04:06,150
And what we want is we want
some coherent stream of songs.

65
00:04:06,150 --> 00:04:09,740
So songs I've liked I
wanna play similar songs.

66
00:04:09,740 --> 00:04:16,527
I don't wanna rapidly switch between for
example some cafe Indi songs,

67
00:04:16,527 --> 00:04:21,510
all of a sudden playing
a heavy metal song.

68
00:04:21,510 --> 00:04:24,890
But at the same time

69
00:04:24,890 --> 00:04:29,270
I don't want a song I just heard
to play again and again and again.

70
00:04:29,270 --> 00:04:33,530
So I want some sense of
recommendations that are coherent but

71
00:04:33,530 --> 00:04:38,120
I also want them to provide a diverse
sequence of songs for me to listen to.

72
00:04:39,520 --> 00:04:43,870
Okay, well another critical area
where recommender systems have

73
00:04:43,870 --> 00:04:48,430
played a very active role
is in social networking.

74
00:04:48,430 --> 00:04:52,740
So for example on Facebook there
are tons and tons of users.

75
00:04:52,740 --> 00:04:55,440
And we wanna form connections
between these users.

76
00:04:55,440 --> 00:05:00,780
So for example here might be a graph of
connections between users on Facebook and

77
00:05:00,780 --> 00:05:04,600
maybe I'm this pink node right here, and

78
00:05:04,600 --> 00:05:08,240
Facebook wants to recommend other people
I might be interested in connecting with.

79
00:05:10,380 --> 00:05:14,550
In this application and it's important
to note that both the users and

80
00:05:14,550 --> 00:05:17,610
the quote unquote items
are of the same type.

81
00:05:17,610 --> 00:05:18,840
We're both people.

82
00:05:18,840 --> 00:05:24,670
So when I'm a user on Facebook the things
that are being recommended to me,

83
00:05:24,670 --> 00:05:26,778
the items, they are other people.

84
00:05:26,778 --> 00:05:28,880
So we're gonna end up with users and

85
00:05:28,880 --> 00:05:32,590
items being exactly the same
type in this application.

86
00:05:33,660 --> 00:05:37,050
But the recommendation system that we've
talked about have really focused on

87
00:05:37,050 --> 00:05:38,470
online media.

88
00:05:38,470 --> 00:05:42,470
But more and more, people are realizing
other area's in which recomender systems

89
00:05:42,470 --> 00:05:44,460
can play a really important role.

90
00:05:44,460 --> 00:05:45,610
And just as one example,

91
00:05:45,610 --> 00:05:49,270
we can think about what is
call drug-target interactions.

92
00:05:49,270 --> 00:05:53,280
And here, maybe we have some drug
that's been studied, for example,

93
00:05:53,280 --> 00:05:54,620
let's talk about aspirin.

94
00:05:54,620 --> 00:05:58,520
It's been well studied as a treatment for
headaches.

95
00:05:58,520 --> 00:06:03,540
But what if it's discovered to
have some other possible use?

96
00:06:03,540 --> 00:06:07,370
So for example, for blood thinning,
for heart patients?

97
00:06:09,380 --> 00:06:11,370
If we can find these
types of relationships,

98
00:06:11,370 --> 00:06:16,820
if we can repurpose this drug for
some other treatment,

99
00:06:16,820 --> 00:06:22,240
then that could be really useful,
because it's really quite costly and

100
00:06:22,240 --> 00:06:26,340
lengthy process to get FDA approval for
a completely new drug, but

101
00:06:26,340 --> 00:06:30,380
if we can take a drug where
the types of side effects and

102
00:06:30,380 --> 00:06:34,470
the possible risks associated
are already well known and well studied.

103
00:06:34,470 --> 00:06:41,030
Then it's a lot easier to get approval for
treatment with some other condition,

104
00:06:41,030 --> 00:06:45,740
so this is a case where we might say,
if you like Aspirin for headaches,

105
00:06:45,740 --> 00:06:48,790
you might also like Aspirin for
your heart condition.

106
00:06:48,790 --> 00:06:53,660
So recommender systems are playing an
active role in medicine as just an example

107
00:06:53,660 --> 00:06:57,961
of the diversity of applications
where we see these types of systems.

108
00:06:57,961 --> 00:07:02,049
>> [MUSIC]