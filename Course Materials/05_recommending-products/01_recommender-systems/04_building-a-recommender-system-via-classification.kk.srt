1
00:00:00,168 --> 00:00:04,284
[ӘУЕН]

2
00:00:04,284 --> 00:00:07,978
We talked about a lot of application
domains where we see recommender systems,

3
00:00:07,978 --> 00:00:11,240
but now let's talk about how we
actually build a recommender system.

4
00:00:12,700 --> 00:00:15,130
And there are lots and
lots of approaches for

5
00:00:15,130 --> 00:00:19,790
performing these types of recommendations
and let's discuss some of them.

6
00:00:19,790 --> 00:00:23,850
And the first Level 0 way we might
think about recommending products

7
00:00:23,850 --> 00:00:26,690
is just based off of
the popularity of each product.

8
00:00:26,690 --> 00:00:32,630
And this approach is actually really
popular on things like news sites.

9
00:00:32,630 --> 00:00:37,340
So, for example, New York Times has this
list on the side of the website that says,

10
00:00:37,340 --> 00:00:42,320
the most popular articles, and it's
sorted by different topics, for example,

11
00:00:42,320 --> 00:00:44,280
the most emailed articles.

12
00:00:46,180 --> 00:00:49,910
So here when we think about
recommending articles to other readers,

13
00:00:49,910 --> 00:00:53,680
we're just sorting the articles
by how often they were shared

14
00:00:53,680 --> 00:00:55,725
by other readers on New York Times.

15
00:00:55,725 --> 00:00:59,160
So this can work fairly well.

16
00:00:59,160 --> 00:01:02,410
I might actually discover an article that
I'm interested in using this type of

17
00:01:02,410 --> 00:01:03,680
approach.

18
00:01:03,680 --> 00:01:08,660
But one disappointing thing about it
is it completely lacks personalization,

19
00:01:08,660 --> 00:01:11,200
because all the recommendations
are based off of the entire

20
00:01:11,200 --> 00:01:15,700
population of New York Times readers out
there, which is actually pretty diverse.

21
00:01:15,700 --> 00:01:19,410
So instead, I would, of course, love to
have a method that knew a little bit more

22
00:01:19,410 --> 00:01:22,970
about me and my interests to
recommend news articles to me.

23
00:01:25,500 --> 00:01:28,550
So let's try and add in a little
bit of personalization using

24
00:01:28,550 --> 00:01:33,210
a classification model where we're going
to use features of both the products and

25
00:01:33,210 --> 00:01:35,600
the users to make our recommendations.

26
00:01:35,600 --> 00:01:39,500
And this classification model is going to
look exactly like the classification model

27
00:01:39,500 --> 00:01:43,630
that you're just learning from Carlos,
where there you guys were using

28
00:01:43,630 --> 00:01:47,900
classification to do sentiment analysis,
but here, we're going to

29
00:01:47,900 --> 00:01:52,560
use this model to classify whether
a person likes or does not like a product.

30
00:01:54,210 --> 00:01:57,984
Okay. Okay. So this classification model
is going to take in features about

31
00:01:57,984 --> 00:02:01,086
the user, features about
the past purchases of that user,

32
00:02:01,086 --> 00:02:05,307
features about the product that we're
thinking about possibly recommending,

33
00:02:05,307 --> 00:02:08,931
as well as potentially lots of other
features that we can talk about.

34
00:02:08,931 --> 00:02:12,730
And we're going to shove all these
features into our classification model,

35
00:02:12,730 --> 00:02:16,353
and it's either going to spit out,
yes, I believe this person is going to

36
00:02:16,353 --> 00:02:20,315
like this product or, no,
I don't think they're going to like it.

37
00:02:20,315 --> 00:02:24,560
Well, this type of classification approach
has a lot of things going for it.

38
00:02:24,560 --> 00:02:26,700
So first it can be very personalized.

39
00:02:26,700 --> 00:02:31,550
We're using features of the user as
well as the user's purchase history.

40
00:02:31,550 --> 00:02:34,490
And, in addition,
this model can capture context.

41
00:02:34,490 --> 00:02:35,230
So, for example,

42
00:02:35,230 --> 00:02:39,700
we can take into consideration the time
of the day, what that person just saw.

43
00:02:39,700 --> 00:02:42,960
So, for example, maybe I'm much
more likely to purchase a textbook

44
00:02:42,960 --> 00:02:47,880
during the day or home products at night.

45
00:02:47,880 --> 00:02:51,580
And one other really nice thing about this
approach is the fact that it can handle

46
00:02:51,580 --> 00:02:53,650
a very limited user history.

47
00:02:53,650 --> 00:02:56,800
So, for example,
let's say I'm a user on Amazon and

48
00:02:56,800 --> 00:02:59,120
I haven't purchased
many items in the past.

49
00:02:59,120 --> 00:03:03,160
So for a lot of approaches, there might
be a lot of ambiguity about what I

50
00:03:03,160 --> 00:03:08,260
might be interested in or not, but if you
have information about me, such as my age,

51
00:03:08,260 --> 00:03:11,670
that alone can be very predictive
of what I might like or not like.

52
00:03:14,150 --> 00:03:17,430
But this approach has limitations as well.

53
00:03:17,430 --> 00:03:20,750
And one of the important limitations is
the fact that these features that we're

54
00:03:20,750 --> 00:03:24,240
talking about that can be so informative
about the products that we're going to

55
00:03:24,240 --> 00:03:27,800
potentially like or
not might not be available.

56
00:03:27,800 --> 00:03:29,930
So, for example,
you might not know my age.

57
00:03:29,930 --> 00:03:32,070
You might not know my gender.

58
00:03:32,070 --> 00:03:34,120
And the list goes on and on.

59
00:03:34,120 --> 00:03:38,680
And, likewise, for a product, you might
also have either missing information or

60
00:03:38,680 --> 00:03:43,300
very poorly written product descriptions,
especially on Amazon where you have lots

61
00:03:43,300 --> 00:03:45,250
of people on there selling
different products.

62
00:03:45,250 --> 00:03:48,020
The quality of that information
might be pretty low.

63
00:03:50,520 --> 00:03:54,350
So often what we actually see is something
that's called collaborative filtering,

64
00:03:54,350 --> 00:03:56,620
which we're going to talk about next,

65
00:03:56,620 --> 00:03:59,660
can actually work better than this
type of classification approach.