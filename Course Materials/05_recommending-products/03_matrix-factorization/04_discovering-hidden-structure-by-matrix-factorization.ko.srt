1
00:00:00,037 --> 00:00:03,938
[음악]

2
00:00:03,938 --> 00:00:06,228
지금까지

3
00:00:06,228 --> 00:00:12,210
Lu 사용자 주제 벡터를 모두 안다고 가정했죠

4
00:00:12,210 --> 00:00:15,690
그래서 행렬 L에 결합할 수 있었습니다

5
00:00:15,690 --> 00:00:17,810
모든 영화 주제 벡터는 알죠

6
00:00:17,810 --> 00:00:21,340
이 둘을 합쳐 행렬 R을 만듭니다

7
00:00:21,340 --> 00:00:24,490
그런 다음 둘을 곱해 각 사용자가

8
00:00:24,490 --> 00:00:27,960
영화에 주는 별점의 예측값을 구합니다

9
00:00:29,140 --> 00:00:34,300
중요한 점은 우리에게 이 정보가 없다는 사실입니다

10
00:00:34,300 --> 00:00:39,800
사용자나 영화에 대한 특징이 없습니다

11
00:00:39,800 --> 00:00:44,080
그 대신에 문제를 뒤집어보겠습니다

12
00:00:44,080 --> 00:00:48,830
행렬 L과 R을 추정하려고 하는데

13
00:00:48,830 --> 00:00:53,110
이는 곧 관찰된 별점을 바탕으로

14
00:00:53,110 --> 00:00:58,870
각 사용자와 영화의 주제, 특징 벡터를
추정하는 것과 같습니다

15
00:00:58,870 --> 00:01:03,690
이 행렬, 즉 주제 벡터 집합이

16
00:01:03,690 --> 00:01:05,900
우리 모델의 파라미터가 됩니다

17
00:01:05,900 --> 00:01:08,890
이전의 회귀 모듈로 돌아가보면

18
00:01:10,700 --> 00:01:15,620
데이터에서 파라미터를 추정할 때

19
00:01:15,620 --> 00:01:18,360
모델과 연관 파라미터에 대해 알아봤습니다

20
00:01:20,050 --> 00:01:22,640
이것과 아주 유사한 개념입니다

21
00:01:22,640 --> 00:01:23,720
데이터가 있죠

22
00:01:23,720 --> 00:01:24,610
어떤 게 데이터죠?

23
00:01:24,610 --> 00:01:28,090
이 경우 관찰된 별점입니다

24
00:01:28,090 --> 00:01:29,900
검은 사각형들이고요

25
00:01:31,320 --> 00:01:38,930
파라미터는 사용자와 영화 주제 벡터입니다

26
00:01:38,930 --> 00:01:43,370
관찰된 별점을 가지고 이를

27
00:01:43,370 --> 00:01:44,180
추정하려 합니다

28
00:01:44,180 --> 00:01:47,740
검은 사각형만 사용해서

29
00:01:47,740 --> 00:01:53,380
L, R 벡터와 새로운 행렬을 추정합니다

30
00:01:53,380 --> 00:01:55,499
어떻게 할까요?

31
00:01:57,060 --> 00:01:58,630
회귀 모듈에서 알아봤듯이

32
00:01:58,630 --> 00:02:02,300
적합의 기준이 뭔지 고민해봅시다

33
00:02:02,300 --> 00:02:03,110
기억하신다면

34
00:02:03,110 --> 00:02:06,860
모듈에서 RSS를 설명드렸습니다

35
00:02:07,910 --> 00:02:09,520
주택이 있었고

36
00:02:09,520 --> 00:02:12,668
특징 세트가 있었으며

37
00:02:12,668 --> 00:02:15,020
특징에 대한 가중치가 있었는데

38
00:02:15,020 --> 00:02:17,220
그게 파라미터였습니다

39
00:02:17,220 --> 00:02:20,810
판매 가격을 어떻게든 예측하려 했고요

40
00:02:20,810 --> 00:02:25,420
실제 판매 가격과 비교해서 차의 곱셈을 구해

41
00:02:25,420 --> 00:02:31,760
더하는 걸 데이터 세트의 모든 주택에 했습니다

42
00:02:31,760 --> 00:02:36,060
이 경우 모델 파라미터는 L과 R입니다

43
00:02:36,060 --> 00:02:42,605
예측값인 별점^은 ＜Lu, Rv＞인데

44
00:02:42,605 --> 00:02:50,870
이 기호는 더할 때 원소별 곱셈을 하라는 뜻입니다

45
00:02:52,190 --> 00:02:53,795
이게 예측 별점이 되죠

46
00:03:01,283 --> 00:03:05,562
관찰된 별점은 별점(u,v)인데

47
00:03:05,562 --> 00:03:09,840
관찰된 별점과 파라미터 Lu, Rv

48
00:03:09,840 --> 00:03:13,732
예측값의 차의

49
00:03:13,732 --> 00:03:20,753
제곱을 구합니다

50
00:03:20,753 --> 00:03:25,912
파라미터 L과 R의 RSS는

51
00:03:25,912 --> 00:03:30,572
이와 같으며

52
00:03:30,572 --> 00:03:36,231
별점이 있는 모든 영화에서

53
00:03:36,231 --> 00:03:41,740
이것의 합을 구합니다

54
00:03:41,740 --> 00:03:46,093
모든 u,v 짝을 포함할 건데

55
00:03:46,093 --> 00:03:51,953
u'와 v'로

56
00:03:51,953 --> 00:03:57,143
예제의 u, v 예와

57
00:03:57,143 --> 00:04:03,520
구분하겠습니다

58
00:04:03,520 --> 00:04:07,540
별점 u'와 별점 v'가

59
00:04:07,540 --> 00:04:10,794
있을 때마다

60
00:04:10,794 --> 00:04:15,202
모든 u' v' 짝을 더합니다

61
00:04:18,999 --> 00:04:20,520
이건 어디 있냐고요?

62
00:04:20,520 --> 00:04:21,710
검은 사각형들입니다

63
00:04:21,710 --> 00:04:24,670
이 그림을 기억하세요

64
00:04:24,670 --> 00:04:30,620
이제 할 건 주어진 행렬 L과 행렬 R의

65
00:04:30,620 --> 00:04:33,760
예측값을 살펴봅니다

66
00:04:33,760 --> 00:04:41,040
모든 검은 사각형에서 얼마나 정확한지 평가합니다

67
00:04:42,330 --> 00:04:49,130
관찰된 별점에 얼마나 잘 들어맞는지 봅니다

68
00:04:51,160 --> 00:04:55,320
L과 R을 추정할 때

69
00:04:55,320 --> 00:05:01,250
주택 가치 예측 문제에서 회귀계수 가중치를

70
00:05:01,250 --> 00:05:06,930
추정했던 것처럼 모든 사용자 주제 벡터와

71
00:05:06,930 --> 00:05:13,010
영화 주제 벡터를 검색해 관찰된 별점에

72
00:05:13,010 --> 00:05:17,570
가장 들어맞는 파라미터 조합을 찾아냅니다

73
00:05:19,480 --> 00:05:25,200
행렬 분해 모델이라 불리는 이유가 바로 이것입니다

74
00:05:25,200 --> 00:05:30,610
분해를 통해 행렬의 근사치를 구하기 때문에

75
00:05:30,610 --> 00:05:34,150
행렬 분해 모델이라고 합니다

76
00:05:37,060 --> 00:05:43,365
알아둘 것은 출력이 추정 파라미터의 세트라는 점입니다

77
00:05:43,365 --> 00:05:49,180
중요한 요점 위에 글자가 있네요

78
00:05:49,180 --> 00:05:50,440
사과드립니다

79
00:05:50,440 --> 00:05:52,720
잠시 치워두죠

80
00:05:53,950 --> 00:05:58,750
이 애니메이션은 분해에 효율적인 알고리즘이

81
00:05:58,750 --> 00:06:03,440
많이 있다는 것입니다

82
00:06:03,440 --> 00:06:09,140
추천 시스템과 행렬 분해 강의에서

83
00:06:09,140 --> 00:06:13,660
아주 자세히 다루게 될 것입니다

84
00:06:15,000 --> 00:06:18,070
L과 R에 대한 추정을 계산하는

85
00:06:18,070 --> 00:06:21,770
효율적인 알고리즘이 있다고 했습니다

86
00:06:21,770 --> 00:06:23,960
예측을 어떻게 구성하나요?

87
00:06:23,960 --> 00:06:30,340
원래 목표였던 흰 사각형은 어떻게 채울까요

88
00:06:30,340 --> 00:06:35,370
추정 L^u와 R^v를

89
00:06:35,370 --> 00:06:37,520
사용합니다

90
00:06:37,520 --> 00:06:41,500
이 벡터를 실제로 알았다고 가정할 때

91
00:06:41,500 --> 00:06:43,670
예측을 설명한 대로 구성합니다

92
00:06:45,220 --> 00:06:49,350
행렬 분해는 아주 강력한 도구입니다

93
00:06:49,350 --> 00:06:53,414
다양한 영역에서 유용함이 증명됐습니다

94
00:06:53,414 --> 00:06:58,246
한 가지 한계가 있는데 조금 전 이야기했던

95
00:06:58,246 --> 00:07:02,367
콜드 스타트 문제로 새로운 사용자나

96
00:07:02,367 --> 00:07:06,120
영화가 있을 때 모델이 예측을 못 내놓는 현상입니다

97
00:07:06,120 --> 00:07:11,120
사용자나 영화에 별점이 없을 때

98
00:07:11,120 --> 00:07:15,030
이런 현상이 나타납니다

99
00:07:15,030 --> 00:07:18,480
새 영화나 사용자가 추가됐을 때
문제가 발생합니다

100
00:07:18,480 --> 00:07:20,960
이건 매우 중요한 문제입니다

101
00:07:20,960 --> 00:07:24,280
넷플릭스 같은 회사가 항상 접하게 되죠

102
00:07:24,280 --> 00:07:28,050
이런 사용자나 영화에 대해 어떻게 예측할까요?

103
00:07:28,050 --> 00:07:32,159
[음악]