1
00:00:00,000 --> 00:00:04,349
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community

2
00:00:04,349 --> 00:00:06,820
那么问题是 我们如何给出这些推荐？

3
00:00:06,820 --> 00:00:10,070
我们如何猜测一个人对从未看过的电影会有怎样的评价

4
00:00:10,070 --> 00:00:11,770
我们如何猜测一个人对从未看过的电影会有怎样的评价

5
00:00:11,770 --> 00:00:12,760
好的 让我们想象一下

6
00:00:12,760 --> 00:00:18,530
我们有关于每部电影和每个用户的一些特征集合

7
00:00:18,530 --> 00:00:21,680
比如 我们知道

8
00:00:21,680 --> 00:00:25,501
这个例子中 电影 v  指 《肖申克的救赎》 (The Shawshank Redemption)

9
00:00:27,498 --> 00:00:32,040
是属于多种类型的电影 如动作片 爱情片 戏剧

10
00:00:32,040 --> 00:00:37,200
因此我们可以定义一个向量 它包含了每一种类型的信息

11
00:00:37,200 --> 00:00:44,410
这部电影 与动作片相关值为0.3 与爱情片相关值为0.01

12
00:00:45,800 --> 00:00:49,020
与戏剧相关值为1.5

13
00:00:50,090 --> 00:00:55,030
有了这组数据 我们可以知道这部电影是有关哪些类型的

14
00:00:55,030 --> 00:00:58,230
同样的 对于每一个用户  比如这个用户u

15
00:00:58,230 --> 00:01:03,280
我们知道哪一种类型的电影被用户所喜爱

16
00:01:03,280 --> 00:01:08,550
因此对于这个用户 我们可以用一个向量来

17
00:01:08,550 --> 00:01:12,270
表示这个用户用户真的非常非常喜欢动作片 

18
00:01:12,270 --> 00:01:17,300
并且真的非常不喜欢爱情片

19
00:01:19,150 --> 00:01:23,239
有点喜欢喜剧 诸如此类的

20
00:01:23,239 --> 00:01:28,672
接下来 我们称这第一个向量为关于电影的类型向量 RV

21
00:01:28,672 --> 00:01:32,270
我们称这个用户偏好向量为 LU

22
00:01:34,980 --> 00:01:39,250
那么在我们掌握了这些信息后 如何去预测一个评价呢?

23
00:01:41,570 --> 00:01:46,340
接下来一个有意义的事是将电影类型向量和

24
00:01:46,340 --> 00:01:49,280
用户偏好向量进行比较 看它们的相符程度

25
00:01:49,280 --> 00:01:51,070
假如它们有许多一致的地方

26
00:01:51,070 --> 00:01:54,540
那么我们就可以猜测这个人会对这部电影作出很高评价

27
00:01:54,540 --> 00:01:59,120
假如它们有很多地方不一致 我们就可以认为很可能

28
00:01:59,120 --> 00:02:03,030
用户将不会喜欢这部电影 会给出一个较低的评价

29
00:02:03,030 --> 00:02:05,180
这样我们就可以对评价进行估计

30
00:02:05,180 --> 00:02:12,520
我们在这里画上一个帽子 表示这是

31
00:02:12,520 --> 00:02:17,100
 用户u对他从未看过的电影 v的喜爱程度的评估

32
00:02:18,190 --> 00:02:22,980
接下来我们要使用的方法 就和我们在度量两个文档

33
00:02:22,980 --> 00:02:26,230
的相似度时一样 首先定义两个向量

34
00:02:26,230 --> 00:02:30,630
文档例子中 每个向量是关于某一文档所属的不同类型的

35
00:02:30,630 --> 00:02:37,600
这里 每个向量则代表某一电影的不同类型

36
00:02:37,600 --> 00:02:41,650
然后 我们可以得到这些向量的具体值

37
00:02:41,650 --> 00:02:45,600
比如 0.3, 0.01, 1.5 之类

38
00:02:48,450 --> 00:02:51,000
然后进行乘法运算

39
00:02:52,530 --> 00:02:57,730
对这个向量逐个元素地相乘

40
00:02:57,730 --> 00:03:00,340
这是我们的Rv

41
00:03:01,490 --> 00:03:02,690
这是我们的Lu

42
00:03:02,690 --> 00:03:08,103
接下来我们将计算

43
00:03:08,103 --> 00:03:13,000
我们计算

44
00:03:13,000 --> 00:03:18,154
 0.3 x 2.5 + 0

45
00:03:18,154 --> 00:03:24,350
+ 1.5 x 0.8 等等

46
00:03:24,350 --> 00:03:31,430
然后假设计算结果是7.2

47
00:03:31,430 --> 00:03:33,576
这只是我随口说的

48
00:03:33,576 --> 00:03:38,430
但是假如这个用户向量

49
00:03:38,430 --> 00:03:43,000
真的和电影向量很不一致 让我们换一种笔的颜色

50
00:03:43,000 --> 00:03:44,380
这是另外一个用户

51
00:03:44,380 --> 00:03:49,860
可以称他为Lu‘

52
00:03:49,860 --> 00:03:54,167
从他们的向量可以推测出 他们非常不喜欢动作片

53
00:03:54,167 --> 00:03:55,505
他们喜欢爱情片

54
00:03:57,873 --> 00:03:59,452
他们真的很讨厌戏剧

55
00:04:02,657 --> 00:04:04,110
类似种种

56
00:04:04,110 --> 00:04:07,320
这样 分数就会十分的低

57
00:04:07,320 --> 00:04:12,180
我们将计算 0+3 对不起

58
00:04:14,542 --> 00:04:20,374
只是为了一致性 + 0.01 x 3.5

59
00:04:20,374 --> 00:04:26,871
+ 1.5 x 0.01 + 所有这些数

60
00:04:26,871 --> 00:04:33,035
都和前面那个完全不同

61
00:04:33,035 --> 00:04:37,699
这可能的结果会是

62
00:04:37,699 --> 00:04:42,240
某个很小的数 像0.8

63
00:04:42,240 --> 00:04:46,760
这里的重点是 当电影向量和

64
00:04:46,760 --> 00:04:51,770
用户向量很一致时 我们得到的数字将比不一致时大很多

65
00:04:51,770 --> 00:04:55,460
这就表示 推测结果是一个分数更高的评价

66
00:04:55,460 --> 00:04:57,280
相比它们并不一致的情况

67
00:04:58,740 --> 00:05:01,640
这样当我们考虑给出推荐时 需要怎么做？

68
00:05:01,640 --> 00:05:06,160
好的 我们对那些用户所有被预测过的电影进行排序

69
00:05:06,160 --> 00:05:08,910
这是按预测的评价结果排序的 

70
00:05:08,910 --> 00:05:12,640
那么我们就可以推荐评价最高的那个

71
00:05:12,640 --> 00:05:14,350
这里我想强调下

72
00:05:14,350 --> 00:05:19,250
如何你还记得的话 评价范围是在一到五或者是零到五之间

73
00:05:19,250 --> 00:05:23,330
假如你真的很讨厌一部电影的话 可以一颗星都不给

74
00:05:23,330 --> 00:05:27,120
但是最大值是五

75
00:05:27,120 --> 00:05:32,160
这里要注意 我们的预测值7.2是很明显大于5的

76
00:05:32,160 --> 00:05:39,630
因此对目前讨论的这类模型  我们还没有加以限制

77
00:05:39,630 --> 00:05:44,530
这里并没有一个约束来强制评分值必须在0到5之间

78
00:05:44,530 --> 00:05:48,628
但是这个模型仍然可以用于推荐 

79
00:05:48,628 --> 00:05:52,181
因为我们只关注获得最大分数的电影 即便这些分数

80
00:05:52,181 --> 00:05:56,916
并没有真的准确符合这部电影将会获得的星星数目

81
00:05:56,916 --> 00:06:00,609
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community