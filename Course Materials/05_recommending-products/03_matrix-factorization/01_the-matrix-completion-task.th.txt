[ดนตรี] So in the co-occurence approaches
we've been talking about so far, there's been no notion of
different aspects of me as a user or features of the product that
are driving the recommendations made. Instead we're simply counting
co-occurences of purchases and user histories. So a natural question is whether
we can somehow use some aspects of who I am and what a product is
to drive the recommendations just like we talked about in
the classification approach, so we have some set of features for
the user and the product. But here, we'd like to be able to
learn these features from the data. That'll help us cope with
the problems we talked about where we might not have
features available. In addition, we'd like to take into
account interactions between users and items just like we did in the co-occurance
application or the co-occurance approach. So we're going to discuss this in
the context of a movie recommendation task because it's very intuitive to
talk about this application for the methods that we're gonna describe. And in this application, what we have
as our data is we have this big table where we have a whole bunch of users that
are watching some set of movies, and they rate those movies, okay? So, our table looks something like this,
where this green user went on, watched three different movies, gave them a rating
of three stars, five stars, and two stars. And then there was this blue user,
watched two different movies, and this pink user,
watched four different movies. And we have a very big table of the user,
movie, ratings combinations. However, each user only watches
a few of the available movies. So we're gonna transform this data table
into a really big users by movies matrix of ratings. And the reason it's a really big matrix in
general is there tend to be a lot of users and a lot of movies. But at the same time,
this matrix is very sparse. Because there are lots and lots of movies
and even though there are a lot of users, there's only a few movies that
any given user has watched. And so, if we look at this matrix that
like I said is a users by movies matrix, then let's say for
example this row represents user u and this column represents movie v. Well, this black square here represents
the rating that user u gave to movie v. So this is rating of movie v by user u. So there are few of these black squares,
but there are lots and lots of these white squares. So what a white square
represents is a question mark. It's a case where a user
has not watched a movie or at least has not provided a rating for
that movie. And so I just want to be clear that
all the white squares represent unknown ratings. They don't represent ratings of zero. It's not that the user
did not like that movie. It's just that we don't know what
the user thinks about that movie. Okay, so we're going to say that
rating(u,v) is the rating that user u gave to movie v and
it's known for the black squares, those are cases were we have the ratings,
and it's unknown for the white cells. And our goal here is to fill in all these
question marks, all these white cells. And the way we're gonna do
this is we're gonna take all the ratings that the user has provided,
so all the black squares for that user. So let me switch colors quickly here. So we would take all of these ratings
provided by this user and use these to predict what the rating is for
these questions marks. Actually, all of these question
marks we're gonna fill in using that user's history as
well as those of all other users. โอเค So we're taking, this is the history
of ratings of that user and every other user, and using it to predict how much we think they're gonna like
this movie that they haven't watched. So let me just be very clear. This is, we're filling in a question mark. And I just really wanna reiterate that
we're not just using the ratings of this user, but we're using all of these ratings
when we're going to make that prediction. And I won't bore you by drawing little
magenta boxes around every black cell. But just know that's all the information
we're using to fill in this really big sparse matrix. [ดนตรี]