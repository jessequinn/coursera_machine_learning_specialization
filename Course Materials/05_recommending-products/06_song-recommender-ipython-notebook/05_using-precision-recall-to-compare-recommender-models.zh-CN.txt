[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community 那么 我们现在已经见识过这些模型的应用实例了 我们也进行了我们称为 定性或者例证定性分析 让我们来做些定量比较 来对比个性化和流行度模型 那么我们现在要 做量化对比 来比较不同的模型 那我们在本课中 比较推荐系统的时候 一个很好的度量方法是精度召回率 所以我们可以绘出这两个模型的精度召回率曲线吗？ 我们在另一个笔记本中讨论过matplotlib 这里我们将调用matplotlib 我在行内加上了这个小小的命令inline 这样能保证matplotlib能融入 推荐系统  也就是融入Notebook matplotlib的功能是计算模型的性能 这个是我定义的变量 以及 在graphlab.create中的推荐系统资料库里的这个方法 它是一套推荐系统的实用程序包 其中有一个非常酷的包叫compare_models 你可以试着比较不同的推荐器模型来理解他们是如何运作的 我要比较不同的推荐系统 用的是我们分离出来的测试数据 而我要比较的模型有流行度模型和 个性化模型 这里的列表里有两个要做比较的模型 我可以比较更多 但是现在我只比较这两个 然后我想说这里有一个小的参数叫做user_sample 我要用它来采样一小部分的测试数据 这里我们把user_sample设置为0.05  因为 要搭建这个机器系统需要一点时间 而我们想要尽快看到结果进行分析 好了 这次挺快的 它在进行对比 首先评估流行度模型的性能 这是零号模型 然后是第二个模型的性能 一号模型 也就是个性化模型 最后我们在这里得到一个精度召回率曲线 我们在课程中最后讲到过 这个曲线能比较两个模型的召回率和精确度 绿色曲线代表个性化模型 蓝色曲线代表流行度模型 这个曲线越靠近顶部就越好 你可以看到引入个性化后 显著提高了 我们推荐系统的性能 所以 个性化是很有用的 只是推荐流行的条目 没那么有用 基于此 我们已经搭建了一个推荐系统 我们分析了结果 发现它能给我这种U2和乐士浮生录的歌迷 推荐不错的歌曲 当然你也可以去尝试你喜欢的东西 看看你能得到哪些其它的推荐歌曲 [背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community