1
00:00:00,000 --> 00:00:04,337
[MUSIC]

2
00:00:04,337 --> 00:00:09,035
In this module, Emily showed us how
to build product recommenders and

3
00:00:09,035 --> 00:00:12,810
algorithms associated
with recommender systems.

4
00:00:12,810 --> 00:00:15,780
Now, we're gonna build
a notebook to recommend songs

5
00:00:15,780 --> 00:00:16,770
we might want to listen to.

6
00:00:16,770 --> 00:00:19,410
This is gonna be really quite cool.

7
00:00:20,950 --> 00:00:26,960
Okay, so this is going to be the,
we're gonna rename our notebook here.

8
00:00:26,960 --> 00:00:31,920
This is the Song recommender.

9
00:00:34,490 --> 00:00:38,910
So again, I'm going to hide the header and

10
00:00:38,910 --> 00:00:41,870
hide the toolbar to show you
this a little more space.

11
00:00:41,870 --> 00:00:47,310
And as usual,
we're gonna start by importing graphlab.

12
00:00:47,310 --> 00:00:48,390
Okay, let's start here.

13
00:00:50,250 --> 00:00:55,380
And the first thing that we're
gonna do is load some music data.

14
00:00:57,050 --> 00:01:03,370
So, we're gonna load music data.

15
00:01:04,390 --> 00:01:07,378
This is a really cool dataset,
it's called the Million Song Dataset.

16
00:01:07,378 --> 00:01:10,209
And we're gonna create
a variable called song_data.

17
00:01:10,209 --> 00:01:11,750
It's gonna store it.

18
00:01:11,750 --> 00:01:16,445
And we're gonna have
a graphlab.SFrame where

19
00:01:16,445 --> 00:01:21,737
we're reading it and
this is some data that dropped.

20
00:01:21,737 --> 00:01:24,664
So here we are, we're reading it and so

21
00:01:24,664 --> 00:01:28,673
let's start doing a little
bit of data exploration.

22
00:01:28,673 --> 00:01:33,723
So let's do some exploring over

23
00:01:33,723 --> 00:01:38,970
a friend data here, music data.

24
00:01:38,970 --> 00:01:43,400
So first thing that we're gonna do,
as usual,

25
00:01:43,400 --> 00:01:46,490
is take the song_data and take a look
at the first few lines of this table.

26
00:01:47,930 --> 00:01:51,290
And so
here's what the song data looks like.

27
00:01:51,290 --> 00:01:54,590
A user for user ID.

28
00:01:55,840 --> 00:01:58,090
Listen to a song once or twice.

29
00:01:58,090 --> 00:02:02,589
This is the title of the song,
this is the artist and

30
00:02:02,589 --> 00:02:06,730
this is the song itself.

31
00:02:06,730 --> 00:02:10,520
The title is the title
of the record mentioned.

32
00:02:10,520 --> 00:02:16,250
And so, as we can see, we just have

33
00:02:16,250 --> 00:02:21,606
a table that shows us how often each
person listens to different songs.

34
00:02:21,606 --> 00:02:24,210
And then we're gonna use
this to build a recommender

35
00:02:24,210 --> 00:02:26,670
that finds out other songs you might
be interested in listening to.

36
00:02:26,670 --> 00:02:30,340
And we're gonna explore a couple
different types of recommenders

37
00:02:30,340 --> 00:02:33,760
as Emily shared with us in the module.

38
00:02:34,850 --> 00:02:41,230
So as usual I'm going to, I like showing
the histogram on the notebook itself.

39
00:02:41,230 --> 00:02:47,467
So I'm gonna do
graphlab.canvas.set_target and

40
00:02:47,467 --> 00:02:50,243
I'm gonna say a ipynb.

41
00:02:50,243 --> 00:02:54,540
And then after we done that
I'm gonna take my song_data.

42
00:02:54,540 --> 00:02:58,344
And I'm going to look at particular
column, let's say the song column and

43
00:02:58,344 --> 00:03:03,320
type.show in it, which is gonna show me

44
00:03:03,320 --> 00:03:08,300
a histogram of the different songs and
how often they're played.

45
00:03:08,300 --> 00:03:09,535
And here we are.

46
00:03:09,535 --> 00:03:14,062
So, this is the different songs by title,
and

47
00:03:14,062 --> 00:03:20,280
you see how this song here
was played 5,970 times.

48
00:03:20,280 --> 00:03:26,134
This Bjork song was played 5,281 times.

49
00:03:26,134 --> 00:03:31,270
This song here, this is a Brazilian song.

50
00:03:31,270 --> 00:03:35,471
TVC by Catola, 3,185 times.

51
00:03:35,471 --> 00:03:40,274
And so some people really like their
songs and they play them a lot.

52
00:03:40,274 --> 00:03:44,868
So this is the kind of
data we're looking at, and

53
00:03:44,868 --> 00:03:51,160
if you take a quick look at this
song data you'll see at the length.

54
00:03:51,160 --> 00:03:59,700
You see we're talking about
here 1.1 million songs.

55
00:03:59,700 --> 00:04:04,600
So million song user pair, so
this is ratings, song ratings.

56
00:04:04,600 --> 00:04:07,190
And this is what the dataset is,
a pretty large dataset.

57
00:04:07,190 --> 00:04:13,040
But we're gonna do some things together
on this large data set right here.

58
00:04:14,430 --> 00:04:17,540
So let's ask,
let's do a little bit more exploration.

59
00:04:17,540 --> 00:04:20,846
So we said for each user,
there's 1 million,

60
00:04:20,846 --> 00:04:24,840
about a million ratings or
a million number of listens.

61
00:04:24,840 --> 00:04:27,290
Let's see how many users
are involved here.

62
00:04:27,290 --> 00:04:33,413
So, I'm going to, let's say,

63
00:04:33,413 --> 00:04:39,990
oops, ##Count number of users.

64
00:04:41,400 --> 00:04:45,320
So, in doing this, I'm gonna show you
another little trick which is useful

65
00:04:45,320 --> 00:04:47,210
as you're exploring your own dataset.

66
00:04:47,210 --> 00:04:52,860
So, I am gonna create a new array here for
users.

67
00:04:52,860 --> 00:04:58,170
And this is going to
take the song data that

68
00:04:58,170 --> 00:05:03,343
we have and look at the user_id column.

69
00:05:04,600 --> 00:05:10,670
And I'm gonna ask you
apply the unique command.

70
00:05:10,670 --> 00:05:15,410
And what the unique command does
is select out of all these users,

71
00:05:15,410 --> 00:05:19,120
just shows the unique
different users that we have.

72
00:05:19,120 --> 00:05:20,630
Just all the unique ones.

73
00:05:20,630 --> 00:05:24,664
And so, if I ask for the length of users,

74
00:05:24,664 --> 00:05:30,010
you should see that we
have 66,346 unique users

75
00:05:30,010 --> 00:05:34,900
in this dataset with 1
million different song.

76
00:05:34,900 --> 00:05:38,090
You think about ratings, but
number of times you listen to some,

77
00:05:38,090 --> 00:05:39,138
song activity rows.

78
00:05:39,138 --> 00:05:43,839
[MUSIC]