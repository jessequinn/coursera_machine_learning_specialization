[MUSIC] In this module, Emily showed us how
to build product recommenders and algorithms associated
with recommender systems. Now, we're gonna build
a notebook to recommend songs we might want to listen to. This is gonna be really quite cool. Okay, so this is going to be the,
we're gonna rename our notebook here. This is the Song recommender. So again, I'm going to hide the header and hide the toolbar to show you
this a little more space. And as usual,
we're gonna start by importing graphlab. Okay, let's start here. And the first thing that we're
gonna do is load some music data. So, we're gonna load music data. This is a really cool dataset,
it's called the Million Song Dataset. And we're gonna create
a variable called song_data. It's gonna store it. And we're gonna have
a graphlab.SFrame where we're reading it and
this is some data that dropped. So here we are, we're reading it and so let's start doing a little
bit of data exploration. So let's do some exploring over a friend data here, music data. So first thing that we're gonna do,
as usual, is take the song_data and take a look
at the first few lines of this table. And so
here's what the song data looks like. A user for user ID. Listen to a song once or twice. This is the title of the song,
this is the artist and this is the song itself. The title is the title
of the record mentioned. And so, as we can see, we just have a table that shows us how often each
person listens to different songs. And then we're gonna use
this to build a recommender that finds out other songs you might
be interested in listening to. And we're gonna explore a couple
different types of recommenders as Emily shared with us in the module. So as usual I'm going to, I like showing
the histogram on the notebook itself. So I'm gonna do
graphlab.canvas.set_target and I'm gonna say a ipynb. And then after we done that
I'm gonna take my song_data. And I'm going to look at particular
column, let's say the song column and type.show in it, which is gonna show me a histogram of the different songs and
how often they're played. And here we are. So, this is the different songs by title,
and you see how this song here
was played 5,970 times. This Bjork song was played 5,281 times. This song here, this is a Brazilian song. TVC by Catola, 3,185 times. And so some people really like their
songs and they play them a lot. So this is the kind of
data we're looking at, and if you take a quick look at this
song data you'll see at the length. You see we're talking about
here 1.1 million songs. So million song user pair, so
this is ratings, song ratings. And this is what the dataset is,
a pretty large dataset. But we're gonna do some things together
on this large data set right here. So let's ask,
let's do a little bit more exploration. So we said for each user,
there's 1 million, about a million ratings or
a million number of listens. Let's see how many users
are involved here. So, I'm going to, let's say, oops, ##Count number of users. So, in doing this, I'm gonna show you
another little trick which is useful as you're exploring your own dataset. So, I am gonna create a new array here for
users. And this is going to
take the song data that we have and look at the user_id column. And I'm gonna ask you
apply the unique command. And what the unique command does
is select out of all these users, just shows the unique
different users that we have. Just all the unique ones. And so, if I ask for the length of users, you should see that we
have 66,346 unique users in this dataset with 1
million different song. You think about ratings, but
number of times you listen to some, song activity rows. [MUSIC]