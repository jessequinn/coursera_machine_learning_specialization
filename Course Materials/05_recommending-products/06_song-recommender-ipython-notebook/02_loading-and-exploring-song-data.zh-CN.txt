[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community 在这个模块中，艾米丽为我们展示了如何搭建一个产品推荐系统以及 跟推荐系统相关的算法 现在 让我们来建立一个Notebook 用来推荐 我们可能想要听的歌曲 这将会非常酷 好的 就是在这里了 我们可以在这里重命名我们的Notebook 这个叫歌曲推荐系统 像之前一样 我将会隐藏页眉和 工具栏 这样我们会有更多的空间 照例我们从导入graphlab开始 好的 从这开始了 首先我们要做的是加载音乐数据 加载音乐数据 这是个很棒的数据库  叫做百万歌库 然后我们创建一个叫song_data的变量 它是用来存储的 然后我们用graphlab.SFrame来 读入 这是载入的一些数据 这里， 我们读取了这些数据然后 就可以开始一些数据检索了 让我们检索一下 其中一帧数据 一帧音乐数据 那么首先我们要做的 像之前一样， 是提取song_data来看看这个表格中的前几行 这就是音乐数据的内容 一个用来标记用户身份的user变量 听一首歌的次数是一次还是两次 这个是歌名 这个是歌手名称 还有 这个是歌曲本身 这个标题是专辑名称 因此 就像我们看到的这样 我们只有 一个显示着每个人听不同歌曲的频率的表格 我们要用这个来建立一个推荐系统 用来找出其他你可能有兴趣的歌曲 我们会尝试一些不同类型的推荐系统 就像艾米丽在这个模块中跟我们分享过的那些一样 照例 我喜欢展示一下笔记本自身的直方图 所以我要调用graphlab.canvas.set_target和 在这命名ipynb 这之后我再回到我的song_data变量 我将会针对一个特定的列 比如说歌曲列 然后 对它调用type.show函数 这会显示 基于不同歌曲播放次数的直方图 结果在这里 这里是不同歌曲的标题 而 你可以看到这里这首歌被播放了5970次 这首比约克的歌被播放了5281次 这里这首是一首巴西歌曲 Catola的TVC 3185次 所以有些人非常喜欢听他们的歌并且反复听很多次 这就是我们想要的数据 如果你快速查看一下这个音乐数据 你可以看看它的长度 可以看到我们这里有110万首歌 也就是百万对歌曲和用户的条目 这里的条目对应的是歌曲的评分 这就是这个数据库 一个挺大的数据库 我们来一起处理这个大型数据库吧 让我们再稍稍探索一下 我们说过对每个用户 有大概1百万个评分或者1百万次播放 让我们看看总共有多少用户 我假设有 哎呀 计算用户数 用这个操作 我将会展示另一个有用的小技巧 你以后自己处理数据的时候可以用 我在这创建一个新的用户向量 这个向量会从我们现有的音乐数据中 查看用户名user_id那一列 然后对它调用unique命令 而unique命令的作用是选择所有这些用户 只输出其中不重复的用户名 只有所有的独立用户 因此 如果我问起用户列表的长度 你应该能看到我们总共有66346个独立用户 而在这个数据库中总共有1百万首不同的歌 你想的是评分项 而不是听同一首歌的次数 以及歌曲相关活动的数据行 [背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community