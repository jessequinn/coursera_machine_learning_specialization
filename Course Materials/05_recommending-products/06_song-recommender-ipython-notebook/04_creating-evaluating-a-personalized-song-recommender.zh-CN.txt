[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community 现在 与之前不同 让我们弄得更个性化一点 这次的模型要像艾米莉描述的那样更个性化 那么下一步我们将搭建一个 个性化歌曲推荐系统 让我们把它命名为personalize_model并且 我们只需重复之前的命令行 因此首先载入graphlab 只是这次不用流行度模型 而是使用相似度推荐器 要记得我们在模块中讨论过的各项相似性 我们可以调用一次item_similarity.create 现在让我们来看会发生什么现在让我们来看会发生什么 在这里，像之前一样，我们要输入训练数据train_data 我们要指明那一列是用户名 本例中它就叫user_id 你还需要给出条目列也就是这里的标记为song的那一列 那么现在我们要搭建一个基于条目相似性而不是流行度的模型 搭好了 那么让我们开始使用它吧 那么 使用这个个性化的 模型来推荐歌曲 让我们开始吧 首先从我们之前用到的那些用户开始着手 比方说 如果你拿这个叫做personalized_model个性化模型 用来对第一个用户也就是0号用户 调用推荐函数 你会看到它不再推荐比约克和 那些之前所有人都得到的少数推荐了 取而代之的是Dr. Feelgood, Elizeth Cardoso和 一些巴西歌曲 Ween啊Subhumans啊等等这些歌手的歌 这个结果有些意思而且挺酷的 让我们来看看第一号用户得到的结果 因为这是一个个性化的模型 所以它的推荐是针对用户的 这次要输入一个列表 我把1号用户这个元素放进列表里 你可以看到这次它推荐的东西完全不同 弗洛伦萨机进分子 
译者注：此为一英国独立乐队 不知道为什么 这个用户真的很喜欢弗洛伦萨机进分子 [笑] 它一直不停地推荐这个乐队的歌 还有金属启示录等等
(芬兰乐队) 所以你可以看到 现在这个模型是真的个性化 因为它是个性化的 你可以用它来干点很有意思的事情 你不仅可以找出某个特定用户喜欢什么歌 他们应该会挺哪些其他的歌曲 就像我们的推荐系统所做的那样 我们还可以以一个歌曲为单位 找出哪些其他的歌曲跟它相似 被相似的人群喜欢 那么喜欢这首歌的人也会喜欢另外这一首歌曲 因此 我们可以调用 personalized_model.get_similiar_items来实现这个功能 要找到相似的条目 你首先给模型一系列初始条目 然后它会找到相似的 举例来说， 假如我非常喜欢这首U2的 "若即若离" 我是真的非常喜欢这首歌 它太酷了 你会看到它推荐了所有U2的歌 我还是没找到我想要的 "抱紧我惊呼我亲吻我杀死我" "空中之窗"  "眩晕" "血腥星期天"  "坏" "没有我的一天" "彼时彼地" "继续前行" "继续前行"是首不错的歌，  "蹬上你的靴子" 基本上所有U2的歌 所以如果你喜欢U2的一首歌 那你就喜欢其它U2的歌 这还挺常见的 另一个我很享受的点是 如果我用这个 相似度模型我可以得到相似的条目 那么我们找到所有相似的用户 从某个用户开始找其它相似的用户 比如说她 但是这里我们要找相似的天目 因此这次我输入的列表会有所不同 那么这里是另外一首我还挺喜欢的歌 它叫做Chan Chan 我很喜欢现场版
译者注： 这里的歌名Chan Chan 应该是人名，是歌曲中的主人公 是乐士浮生录的歌
译者注： 古巴乐队 如果你不知道这首歌 如果你不知道乐士浮生录 你应该去了解一下 这首歌真的非常非常酷 那如果你喜欢古巴乐队乐士浮生录的Chan Chan 你可能也会喜欢其它乐士浮生录的歌 比如奥马尔德洛卡尤文 你可能还会喜欢这个 高登计划的"与众不同" 高登计划是一个非常酷的阿根廷乐队 风格有点像吉卜赛国王和弗拉门戈这两个乐队
这些都非常合理 记住这首高登计划的"罪犯" 我也挺喜欢它的 [背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community