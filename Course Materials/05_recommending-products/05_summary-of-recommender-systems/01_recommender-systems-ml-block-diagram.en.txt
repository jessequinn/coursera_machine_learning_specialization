[MUSIC] In this module we talked about a notion
of collaborative filtering and a couple different recommender systems for
implementing that idea where we leverage the types of other products people
purchased to recommend other products. And we explored this notion of
having some set of customers and products and understanding relationships
between these in the context of product recommendation tasks,
thinking about movie recommendation. And in the IPython notebook you guys
explore this very concretely with an implementation of a song recommender. Once again, let's revisit this
machine learning workflow, but in the context of recommender systems. In this case, what's our training data? Well it's our user, product, ratings, table. And what we're gonna do is we're
gonna extract some set of features, which in this case are a user ID,
product ID pair And the goal here is to predict the rating
that some user would give to some product. So user ID, product ID, rating. So this is our predicted rating, y hat. If we're specifically looking,
and I guess I, sorry, I should mention that,
what is the model that we're looking at? The model is, for example, we talked about many different models but
the one we're gonna talk about quite extensively in the matrix factorization
course is matrix factorization. And matrix factorization
has some set of parameters. W hat,
which are the estimated parameters, or that notation represents
estimated parameters. And what are the parameters
of matrix factorization? Well, it's a set of features for
every user. And it's a set of features for
every product. Okay, so these are our parameters, but we also talked about a featurized
version of matrix factorization. So in that case,
in addition to our features being the user ID and product ID,
we might also consider other things, we might have a list of other
features like the age of the user, the gender of the user,
a description of the product, and so on. And in that case, we would also
add weights on these features. So let me just add some extra set of, I'll call them w0 to make
it difference than this w, some other set of weights here that
are also parameters of this model. Okay, again we'll get into this in a lot
more detail in the course on this, but the idea is we're gonna take
our predicted rating and we're gonna see how well our
model is fitting the data. And the way we're gonna do that is
we're gonna take our actual data, our real ratings, so these are actual ratings that are in our training data set. And we're gonna compare
to the predicted ratings. Okay, so one metric we talked about to
measure the air between the predicted ratings and our actual observed
ratings was residual sum of squares. Just like in regression, but there are
also other metrics we could consider and we could talk about those more later. But the point is that from some notion of
error between our predicted values and our observed values, we're gonna have
some machine learning algorithm. Again, we're leaving this for the actual module on matrix factorization
to describe what this algorithm is. But what it's going to do is it's going
to iteratively update our features for the user and for the product until we
get good agreement between our predicted ratings and our actual observed ratings. Okay, so in this module you learned how to
do collaborative filtering in practice, so now you can go out actually
implement a recommender system. You can do a gift recommender for
your family, which will make holiday
shopping really easy. Or you can build a new song recommender
that's even better than the one that we demoed. So lots and lots of cool things you
can do with collaborative filtering. [MUSIC]