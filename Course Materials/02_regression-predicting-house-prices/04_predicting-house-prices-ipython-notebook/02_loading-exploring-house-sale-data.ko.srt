1
00:00:00,218 --> 00:00:03,910
[음악]

2
00:00:03,910 --> 00:00:07,360
이 모듈에서 회귀에 대해 알아봤습니다

3
00:00:07,360 --> 00:00:09,374
회귀를 통해 주택 가격을 예측하는 법을
살펴보았습니다

4
00:00:09,374 --> 00:00:16,160
IPython 노트북을 이용해

5
00:00:16,160 --> 00:00:21,180
킹 카운티의 실제 데이터를 기반으로
주택 가격 예측을 해보겠습니다

6
00:00:21,180 --> 00:00:26,104
킹 카운티는 시애틀 시의 지역이며 에밀리와 제가

7
00:00:26,104 --> 00:00:27,448
살고 있는 곳이기도 합니다

8
00:00:27,448 --> 00:00:31,040
이 공공 기록 데이터를 가지고

9
00:00:31,040 --> 00:00:35,400
IPython을 만들어서 주택 가격을
예측해 봅시다

10
00:00:35,400 --> 00:00:36,650
그럼 시작해보겠습니다.

11
00:00:36,650 --> 00:00:39,420
빈 IPython 노트북입니다

12
00:00:40,630 --> 00:00:46,440
우선

13
00:00:46,440 --> 00:00:51,990
제목을

14
00:00:51,990 --> 00:00:57,183
주택 가격 예측으로 바꿉니다

15
00:00:57,183 --> 00:01:04,080
이름은 바꿨고 이제 보기 메뉴의
헤더와 툴바를 숨김 처리 해서

16
00:01:04,080 --> 00:01:08,290
공간을 확보하죠

17
00:01:08,290 --> 00:01:09,741
다 됐죠

18
00:01:09,741 --> 00:01:15,045
우선 파이썬 알고리즘을 돌릴
GraphLab Create를

19
00:01:15,045 --> 00:01:20,453
띄울 겁니다

20
00:01:20,453 --> 00:01:24,639
Esc+m 누르고

21
00:01:24,639 --> 00:01:30,442
GraphLab Create 띄우기라고 씁니다

22
00:01:30,442 --> 00:01:37,160
import graphlab 입력하면

23
00:01:38,750 --> 00:01:41,550
띄워지죠

24
00:01:41,550 --> 00:01:46,150
오늘 할 작업은 주택 가격 예측입니다

25
00:01:46,150 --> 00:01:52,303
이제 주택 판매 데이터를

26
00:01:52,303 --> 00:01:58,630
읽어들이겠습니다

27
00:01:58,630 --> 00:02:03,850
시애틀 지역에서 팔린 주택들의
공공 데이터, 공공 기록입니다

28
00:02:05,510 --> 00:02:10,715
이 표 데이터에 판매라는 이름을 붙이고

29
00:02:10,715 --> 00:02:15,420
graphlab.SFrame이라고 써줍니다

30
00:02:15,420 --> 00:02:19,730
전 시간에 SFrame이 GraphLab
Create에서

31
00:02:19,730 --> 00:02:22,670
표 형태 데이터를 담는 자료구조라고
알려드렸지요?

32
00:02:22,670 --> 00:02:26,280
빠른 out-of-core 자료구조인데

33
00:02:26,280 --> 00:02:29,720
주택 정보를 읽어올 겁니다

34
00:02:29,720 --> 00:02:36,100
home_data라고 하고

35
00:02:36,100 --> 00:02:41,560
방금 IPython 노트북이 자동완성 해줬죠

36
00:02:41,560 --> 00:02:47,650
지금 읽고 GraphLab Create을 띄우는데

37
00:02:47,650 --> 00:02:52,350
판매라고 입력하면 데이터 형식을
볼 수 있습니다

38
00:02:52,350 --> 00:02:57,840
위로 조금 스크롤업해서 판매라고 입력하면

39
00:02:57,840 --> 00:03:02,530
ID, 날짜, 가격, 침실 개수,

40
00:03:02,530 --> 00:03:07,170
화장실 개수, 평수,

41
00:03:07,170 --> 00:03:13,120
대지면적, 층수

42
00:03:13,120 --> 00:03:19,430
등등이 여러 카테고리로 나옵니다

43
00:03:19,430 --> 00:03:25,370
시야가 있는지, 경사가 있는지

44
00:03:25,370 --> 00:03:31,050
등등의 측량 수치가 있습니다

45
00:03:31,050 --> 00:03:34,580
이런 주택 데이터를 읽어들여봤는데
괜찮아 보입니다

46
00:03:34,580 --> 00:03:38,042
이제 GraphLab Canvas를 써서

47
00:03:38,042 --> 00:03:39,910
시각화를 해보지요

48
00:03:42,070 --> 00:03:48,861
칸을 하나 생성합니다

49
00:03:48,861 --> 00:03:57,429
주택 데이터 탐색하기라고 씁니다

50
00:04:00,029 --> 00:04:01,252
주택 판매죠

51
00:04:02,750 --> 00:04:04,760
데이터 탐색을 할 겁니다

52
00:04:04,760 --> 00:04:09,886
판매 데이터를 보여주고

53
00:04:09,886 --> 00:04:15,885
.show를 입력하면 데이터를 시각화해서
보여줍니다

54
00:04:15,885 --> 00:04:19,947
이제 볼텐데 GraphLab이 모든 걸

55
00:04:19,947 --> 00:04:24,980
처리하게 놔두기보다는

56
00:04:24,980 --> 00:04:31,040
산점도를 그려볼텐데 산점도가 뭔지는
곧 알게 됩니다

57
00:04:31,040 --> 00:04:36,100
두 변수의 관계를 나타내는 산점도를
그립니다

58
00:04:36,100 --> 00:04:42,810
x축은 전용면적을 나타냅니다

59
00:04:44,460 --> 00:04:47,520
y축은 가격을 나타냅니다

60
00:04:48,960 --> 00:04:50,863
이 그래프는

61
00:04:50,863 --> 00:04:55,051
전용면적과 가격의 관계를 보여줍니다

62
00:04:55,051 --> 00:04:59,635
약간의 요령이 있는데 노트북을 생성할 때

63
00:04:59,635 --> 00:05:04,305
GraphLab Canvas를 새로운 탭에서
보통 생성하게 되는데

64
00:05:04,305 --> 00:05:09,508
그러지 말고 산점도나 간단한 그래프는

65
00:05:09,508 --> 00:05:15,364
노트북 안에서 생성하는 게 프린트 뽑기에 좋습니다

66
00:05:15,364 --> 00:05:22,170
그러기 위해 GraphLab Canvas 대상을

67
00:05:22,170 --> 00:05:26,936
기본 대상인 브라우저가 아닌

68
00:05:26,936 --> 00:05:30,030
IPython 노트북으로 설정합니다

69
00:05:30,030 --> 00:05:35,360
canvas.set_target('ipynb')라고
입력하면

70
00:05:35,360 --> 00:05:40,120
산점도가 노트북에 그려지게 됩니다

71
00:05:40,120 --> 00:05:44,500
엔터를 누르면 두 축을

72
00:05:46,140 --> 00:05:49,360
그래프로 그리게 됩니다

73
00:05:49,360 --> 00:05:49,990
자 이제

74
00:05:49,990 --> 00:05:56,750
x축은 주택 평수고 y축은 가격입니다

75
00:05:56,750 --> 00:05:59,810
이걸 좀 살펴보죠

76
00:06:01,590 --> 00:06:06,200
평수가 클수록 큰 집이니

77
00:06:06,200 --> 00:06:11,230
여기 마우스를 갖다대면 이 큰 집은
5990 평방피트임을 확인할 수 있죠

78
00:06:11,230 --> 00:06:16,810
꽤 큰 집인데 아마 600 평방미터는
될 겁니다

79
00:06:16,810 --> 00:06:21,310
220만 달러에 팔렸는데 상당한 금액이죠

80
00:06:21,310 --> 00:06:25,210
여기 보시면 적당한 관계가 형성되어 있는데

81
00:06:25,210 --> 00:06:28,140
큰 집이 더 비싸다는 것입니다

82
00:06:28,140 --> 00:06:30,000
여기 큰 덩어리가 1000에서

83
00:06:30,000 --> 00:06:33,790
3000 평방피트의 주택입니다

84
00:06:33,790 --> 00:06:39,280
여기서도 이 집은 이상점이죠

85
00:06:39,280 --> 00:06:45,657
겨우 1910 평방피트인데도 150만에
팔렸습니다

86
00:06:45,657 --> 00:06:50,917
비슷한 크기의 1700 평방피트의 집은

87
00:06:50,917 --> 00:06:53,682
14.9만에 팔렸는데 말이죠

88
00:06:53,682 --> 00:06:55,890
큰 괴리가 있습니다

89
00:06:55,890 --> 00:06:59,010
여기 데이터 세트에서 가장 튄
이상점이 있습니다

90
00:06:59,010 --> 00:07:04,179
3730 평방피드인데 250만에 팔렸죠

91
00:07:07,385 --> 00:07:11,239
[음악]