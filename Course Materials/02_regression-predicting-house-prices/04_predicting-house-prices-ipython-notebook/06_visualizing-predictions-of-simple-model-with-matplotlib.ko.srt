1
00:00:00,133 --> 00:00:05,046
[음악]

2
00:00:05,046 --> 00:00:10,260
다음으로

3
00:00:10,260 --> 00:00:15,021
#예측 보여주기

4
00:00:15,021 --> 00:00:19,791
라고 적습니다

5
00:00:19,791 --> 00:00:26,817
GraphLab Canvas를 데이터 시각화에 쓴다고
말씀드렸는데

6
00:00:26,817 --> 00:00:34,350
다른 파이썬 도구도 있습니다

7
00:00:34,350 --> 00:00:39,270
간단한 설명을 위해 도구 하나를 import
하겠습니다

8
00:00:39,270 --> 00:00:41,620
꽤 널리 사용되는 도구지요

9
00:00:41,620 --> 00:00:44,250
matplotlib라고 합니다

10
00:00:47,150 --> 00:00:49,900
pyplot을 쓰면 그래프를 쉽게

11
00:00:49,900 --> 00:00:55,220
그릴 수 있습니다

12
00:00:55,220 --> 00:00:59,060
plt라고 호칭하죠

13
00:00:59,060 --> 00:01:05,573
파이썬에서 import할 때 팩키지의 일부인

14
00:01:05,573 --> 00:01:09,920
matplotlib.pyplot을 plt라고 줄여서
import합니다

15
00:01:09,920 --> 00:01:14,000
그러면 matplotlib.pyplot이라고
다 적을 필요 없이

16
00:01:14,000 --> 00:01:15,330
간단히 plt라고만 해도 됩니다

17
00:01:15,330 --> 00:01:16,660
as 명령어를 사용하는 이유죠

18
00:01:17,840 --> 00:01:22,620
import한 다음 요령을 좀 부릴건데

19
00:01:22,620 --> 00:01:27,010
Canvas에서 했던 것처럼 노트북에
직접 출력합니다

20
00:01:27,010 --> 00:01:31,864
퍼센트 기호를 붙이고

21
00:01:31,864 --> 00:01:37,130
matplotlib inline이라 적습니다

22
00:01:37,130 --> 00:01:40,400
이러면 노트북에 그래프가 그려지게 되죠

23
00:01:40,400 --> 00:01:41,930
엔터를 칩니다

24
00:01:41,930 --> 00:01:46,130
import를 했으니 처음으로

25
00:01:47,190 --> 00:01:54,970
그래프를 그려보겠습니다

26
00:01:54,970 --> 00:01:57,970
plt.plot로 그립니다

27
00:01:57,970 --> 00:02:00,680
함수가 있죠

28
00:02:01,690 --> 00:02:06,480
테스트 데이터를 두 가지 방법으로 그려보죠

29
00:02:06,480 --> 00:02:11,940
matplotlib으로 두 그래프를 서로 겹치게
그릴 수 있죠

30
00:02:11,940 --> 00:02:13,480
바로 해보겠습니다

31
00:02:13,480 --> 00:02:18,550
테스트 데이터를 전용면적 x축에

32
00:02:18,550 --> 00:02:24,250
그리겠습니다

33
00:02:26,190 --> 00:02:32,690
테스트 데이터에서 y축은 가격이 되죠

34
00:02:32,690 --> 00:02:36,780
전에 했던 것과 비슷한 산점도가 됩니다

35
00:02:36,780 --> 00:02:40,910
이 점들을 테스트 점(포인트)이라
부르겠습니다

36
00:02:40,910 --> 00:02:43,050
점으로 그리죠

37
00:02:43,050 --> 00:02:44,830
여기 이 작은 점을 입력하면 그렇게 됩니다

38
00:02:46,320 --> 00:02:50,570
하나 더 그려보죠

39
00:02:50,570 --> 00:02:53,220
하나의 그래프에 두 개를 그릴 겁니다

40
00:02:54,830 --> 00:02:57,790
여기 쉼표를 빠뜨렸네요

41
00:03:00,060 --> 00:03:03,380
테스트 데이터와 함께 예측을 그립시다

42
00:03:06,090 --> 00:03:13,710
x축은 아까와 같이 전용면적이 되고

43
00:03:13,710 --> 00:03:20,540
y축은 좀 다른 걸 그리죠

44
00:03:20,540 --> 00:03:25,780
모델이 각 주택에 대해 예측한 걸 그립니다

45
00:03:25,780 --> 00:03:30,400
평수 모델을 만들 때

46
00:03:32,030 --> 00:03:34,540
관련 함수가 많이 있었지요

47
00:03:34,540 --> 00:03:38,930
내려보면 예측 함수란 것도 있습니다

48
00:03:38,930 --> 00:03:42,890
예측 함수에 데이터 입력을 주면

49
00:03:42,890 --> 00:03:48,590
각 입력에 대해 예측 데이터를

50
00:03:48,590 --> 00:03:50,730
배열이나 열 형식으로 출력합니다

51
00:03:50,730 --> 00:03:54,370
테스트 데이터를 입력해서 대시 기호로
나타내 보죠

52
00:03:56,530 --> 00:03:59,390
이 줄을 실행하기 전에

53
00:03:59,390 --> 00:04:02,740
그래프가 어떻게 생길지 생각해 봅시다

54
00:04:02,740 --> 00:04:08,020
윗 줄은 전용면적 대 가격을 점으로 그리라고 합니다

55
00:04:08,020 --> 00:04:11,800
전에 그린 산점도와 비슷하게 되겠죠

56
00:04:11,800 --> 00:04:14,590
두 번째 줄은

57
00:04:14,590 --> 00:04:19,310
입력 주택의 거실에 대한 예측을
대시 기호로 그리라고 돼있습니다

58
00:04:19,310 --> 00:04:22,670
간단한 회귀 모델에 단일 변수이니

59
00:04:22,670 --> 00:04:26,580
강의에서 다뤘듯 단일 변수와

60
00:04:26,580 --> 00:04:31,350
직선 하나만 그리면 됩니다

61
00:04:31,350 --> 00:04:35,630
실행시켜보면 이렇게 되죠

62
00:04:36,670 --> 00:04:41,182
파란 점들은 주택의 테스트 데이터이고

63
00:04:41,182 --> 00:04:46,710
녹색 선은 예측 주택 가치입니다

64
00:04:48,590 --> 00:04:52,729
[음악]