1
00:00:00,000 --> 00:00:04,949
[MUSIC]

2
00:00:04,949 --> 00:00:09,599
In the lectures, Emily talked
about nearest neighbor models and

3
00:00:09,599 --> 00:00:12,820
how they can be used for
document retrieval.

4
00:00:12,820 --> 00:00:16,150
So today, we're gonna actually
do some cool document retrievals

5
00:00:16,150 --> 00:00:18,692
using simple nearest neighbor models.

6
00:00:18,692 --> 00:00:24,205
Next we're going to build

7
00:00:24,205 --> 00:00:31,010
a nearest neighbor model for
document retrieval.

8
00:00:34,350 --> 00:00:37,240
And here we go, nearest neighbor model for
document retrieval.

9
00:00:37,240 --> 00:00:42,060
Again, you could implement your own,
but we have one already implemented

10
00:00:42,060 --> 00:00:45,660
here that you can use,
which is great for this first course.

11
00:00:46,830 --> 00:00:53,182
We're gonna use the one from the offline,
and it is called nearest_neighbors.

12
00:00:53,182 --> 00:01:01,260
And just like that use the verb create
to create a nearest neighbor model.

13
00:01:01,260 --> 00:01:03,200
So we're gonna give it this input.

14
00:01:03,200 --> 00:01:05,470
The people table.

15
00:01:05,470 --> 00:01:11,230
And we have to say what features we're
gonna use in the nearest neighbors.

16
00:01:11,230 --> 00:01:17,270
So the features are gonna be the tfidf,
tfidf.

17
00:01:17,270 --> 00:01:20,740
Just like we've been using for
the cosine distances above.

18
00:01:20,740 --> 00:01:25,600
And I'm going to provide
a label column and

19
00:01:25,600 --> 00:01:27,900
this label column is going to be the name.

20
00:01:27,900 --> 00:01:30,770
So when I return my nearest neighbors,
it's going to

21
00:01:30,770 --> 00:01:33,630
return the actual label of the nearest
neighbor, so the name of the person.

22
00:01:33,630 --> 00:01:37,280
And that will make the print out prettier.

23
00:01:37,280 --> 00:01:39,010
So that's cool that it's there for us.

24
00:01:39,010 --> 00:01:41,040
So it should only take a few seconds.

25
00:01:41,040 --> 00:01:42,950
And we will have, now there we are.

26
00:01:42,950 --> 00:01:48,020
We will have a nearest neighbor model for
document retrieval.

27
00:01:48,020 --> 00:01:50,216
So now we can use it, so
let's go ahead and use it.

28
00:01:50,216 --> 00:01:58,647
So I'm going to just create
another header here and

29
00:01:58,647 --> 00:02:06,491
say applying
the nearest-neighbors model for

30
00:02:06,491 --> 00:02:13,169
retrieval, and let's see what we get.

31
00:02:14,528 --> 00:02:21,004
So the first question is, so
let's do our first query.

32
00:02:21,004 --> 00:02:29,530
So who is closest to Obama?

33
00:02:29,530 --> 00:02:32,280
So who are the closest people
to Obama in the data set.

34
00:02:32,280 --> 00:02:36,750
So if you just take our neighbor model,

35
00:02:36,750 --> 00:02:41,090
we can use the method query,
the function query associated with it,

36
00:02:41,090 --> 00:02:43,510
which just queries
the model with some input.

37
00:02:43,510 --> 00:02:47,750
So in this case Obama as our input, and
gives me back the nearest-neighbor.

38
00:02:47,750 --> 00:02:53,600
So where the nearest-neighbor is to Obama,
we'll compute it, and it's very quick.

39
00:02:53,600 --> 00:02:57,160
And I say, okay, the closest person to
Obama is Obama himself, which makes sense.

40
00:02:57,160 --> 00:03:02,840
But after that, we have Joe Biden,
who is the current US vice president.

41
00:03:02,840 --> 00:03:05,180
So the president is closest
to the vice president.

42
00:03:05,180 --> 00:03:10,076
And then we find a few other politicians,
including former president Bill Clinton,

43
00:03:10,076 --> 00:03:11,239
which we saw above.

44
00:03:14,848 --> 00:03:18,759
[MUSIC]