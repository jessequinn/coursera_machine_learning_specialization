1
00:00:00,000 --> 00:00:03,755
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community

2
00:00:03,755 --> 00:00:09,005
让我们先看一下这个TFIDF 然后做些有趣的事情

3
00:00:09,005 --> 00:00:14,398
我们要手动计算

4
00:00:14,398 --> 00:00:20,100
先让我输一些东西

5
00:00:20,100 --> 00:00:25,150
我们将要手动计算

6
00:00:25,150 --> 00:00:30,770
几个人之间的距离

7
00:00:32,230 --> 00:00:36,250
我们的目标是展示这些距离是什么样子

8
00:00:36,250 --> 00:00:41,700
给你一个TFIDF 的整体印象

9
00:00:41,700 --> 00:00:45,830
我们取三个人作为例子

10
00:00:45,830 --> 00:00:48,090
我们已经说过了奥巴马

11
00:00:48,090 --> 00:00:50,020
所以我们这里有了Obama这个变量

12
00:00:50,020 --> 00:00:51,770
我们再新建两个变量

13
00:00:51,770 --> 00:01:00,116
比如说克林顿 我准备选他

14
00:01:00,116 --> 00:01:06,050
这个人的名字等于 Bill Clinton

15
00:01:06,050 --> 00:01:12,290
也就是前美国总统

16
00:01:15,210 --> 00:01:20,034
让我们再选一个人 比如贝克汉姆

17
00:01:20,034 --> 00:01:25,702
贝克汉姆是一个有名的

18
00:01:25,702 --> 00:01:30,393
英国足球运动员

19
00:01:30,393 --> 00:01:36,843
所以我们把他从人群中筛选出来

20
00:01:36,843 --> 00:01:42,511
一个名字等于

21
00:01:42,511 --> 00:01:48,578
David Beckham的人

22
00:01:48,578 --> 00:01:53,570
既然我们已经选择了克林顿和贝克汉姆
下面让我们来计算

23
00:01:53,570 --> 00:01:56,320
这两个人还有奥巴马总统的相似度

24
00:01:58,280 --> 00:02:06,078
我们的问题是

25
00:02:06,078 --> 00:02:10,649
奥巴马

26
00:02:10,649 --> 00:02:16,740
相比较贝克汉姆而言 是否离克林顿接近呢

27
00:02:22,593 --> 00:02:24,210
噢不对 这里有个小错误

28
00:02:25,280 --> 00:02:29,806
(教授少加了个#)

29
00:02:34,707 --> 00:02:38,252
这里有很多种方法来衡量相似度

30
00:02:38,252 --> 00:02:42,710
或者说两个向量之间的距离 或者说是两个文件之间的差别

31
00:02:42,710 --> 00:02:44,770
我们会计算TFIDF

32
00:02:44,770 --> 00:02:47,880
我们现在要做的是计算这些

33
00:02:47,880 --> 00:02:53,320
不同文件之间的差别 克林顿的和奥巴马的 等等

34
00:02:53,320 --> 00:02:59,360
我要使用距离矩阵

35
00:02:59,360 --> 00:03:02,930
它是Graphlab create里自带的 这样我们就不用自己再创造了

36
00:03:02,930 --> 00:03:07,220
我们会看graphlab.distance然后按下tab

37
00:03:07,220 --> 00:03:09,450
你会看到这里有很多选择

38
00:03:09,450 --> 00:03:15,550
克林顿的距离我们之前讨论过 是cosine 距离

39
00:03:15,550 --> 00:03:20,850
jaccard相似度 还有许多我们会在后面的课程学习到

40
00:03:20,850 --> 00:03:24,300
这里我就用cosine距离了

41
00:03:24,300 --> 00:03:28,120
让我们想一想cosine相似度这个概念

42
00:03:28,120 --> 00:03:29,260
如果你听说过

43
00:03:29,260 --> 00:03:32,570
这个数值越高 这两个文章相似度越高

44
00:03:32,570 --> 00:03:38,160
我们想要的是距离 所以希望这个值越小越好

45
00:03:38,160 --> 00:03:43,230
所以说cosine距离越小 两个文章越接近

46
00:03:43,230 --> 00:03:49,915
所以问题就变成了 奥巴马和克林顿的TFIDF的cosine距离

47
00:03:49,915 --> 00:03:54,410
是多少呢

48
00:03:54,410 --> 00:03:58,240
注意我选择了TFIDF这一列 但是我这里还加了个[0]

49
00:03:58,240 --> 00:04:02,360
因为这是这张表格的第零行

50
00:04:02,360 --> 00:04:04,050
这张表仅有一个对象

51
00:04:04,050 --> 00:04:05,870
但是我们仍然表明我们需要的是哪一行

52
00:04:05,870 --> 00:04:12,880
所以我们将要比较奥巴马的TFIDF 和克林顿的TFIDF

53
00:04:15,308 --> 00:04:19,360
也就是在第0行 代表着coisine距离

54
00:04:19,360 --> 00:04:21,500
你可以看到这个距离是0.83

55
00:04:21,500 --> 00:04:26,858
那么问题来了

56
00:04:26,858 --> 00:04:33,861
在同一个矩阵中 奥巴马和贝克汉姆的cosine距离是多少呢

57
00:04:33,861 --> 00:04:38,470
所以我会输入以下命令

58
00:04:38,470 --> 00:04:43,310
obama['tfidf'][0]-beckham['tfidf'][0]

59
00:04:43,310 --> 00:04:50,470
输入这个代码

60
00:04:50,470 --> 00:04:53,770
我们可以看到距离是0.97

61
00:04:53,770 --> 00:04:58,140
你能得到的最大距离是1.0

62
00:04:58,140 --> 00:05:03,202
所以在这个例子中

63
00:05:03,202 --> 00:05:08,810
相比较与贝克汉姆而言 奥巴马与
克林顿更加接近  这也很合理

64
00:05:08,810 --> 00:05:12,210
我们现在已经人工计算出了几个人之间的距离

65
00:05:12,210 --> 00:05:16,980
我们怎么才能自动找出一篇文章与其他文章之间的距离呢

66
00:05:16,980 --> 00:05:18,990
在这个例子中 是一个人与其他人有多相似

67
00:05:20,610 --> 00:05:26,390
在前面的课程当中
Emily已经讨论过了最近邻居模型以及

68
00:05:26,390 --> 00:05:27,850
怎样把这个模型运用到文章检索上

69
00:05:27,850 --> 00:05:32,394
我们现在要做的是在文章检索中

70
00:05:32,394 --> 00:05:34,679
使用一个简单的近邻模型

71
00:05:34,679 --> 00:05:35,179
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community