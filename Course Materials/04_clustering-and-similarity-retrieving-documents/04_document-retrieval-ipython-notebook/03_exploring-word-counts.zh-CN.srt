1
00:00:00,000 --> 00:00:04,733
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community

2
00:00:04,733 --> 00:00:08,220
好的 这就是我们即将使用的数据

3
00:00:08,220 --> 00:00:14,160
这是一份十分整洁的数据 让我们进一步研究它

4
00:00:14,160 --> 00:00:18,104
在课上 艾米莉 (Emily) 已经讲了建立单词统计以及

5
00:00:18,104 --> 00:00:21,020
其中的一些挑战

6
00:00:21,020 --> 00:00:24,500
所以让我们从简单浏览一下单词统计开始

7
00:00:24,500 --> 00:00:30,840
举个例子 让我们尝试取得

8
00:00:30,840 --> 00:00:36,010
关于奥巴马 (Obama) 文章的单词统计

9
00:00:36,010 --> 00:00:38,810
我们在维基百科 (Wikipedia) 上能找到
一篇关于巴拉克·奥巴马 (Barack Obama) 的文章

10
00:00:38,810 --> 00:00:42,280
我们首先要做的是快速浏览一下本篇文章的

11
00:00:42,280 --> 00:00:43,790
单词统计

12
00:00:43,790 --> 00:00:48,090
我将使用我们之前建的变量Obama

13
00:00:48,090 --> 00:00:52,930
我将向这个变量新添一列
并命名为Word_count

14
00:00:52,930 --> 00:00:57,240
该列将会用来储存对巴拉克·奥巴马 (Barack Obama) 文章的单词统计

15
00:00:57,240 --> 00:00:59,840
我们直接调用它就可以实现储存了

16
00:00:59,840 --> 00:01:05,770
和我们在分类情感分析中说的一样
你可以编写 

17
00:01:05,770 --> 00:01:08,960
你可以自己编写函数来计算单词统计

18
00:01:08,960 --> 00:01:12,940
我们在我们的文本分析工具栏中已经有一个现成的了

19
00:01:12,940 --> 00:01:16,080
我就准备直接使用这个

20
00:01:16,080 --> 00:01:18,247
就叫做count_words

21
00:01:18,247 --> 00:01:22,409
看到另外一个选项了吗 别选他 就选words 会计算单个的单词

22
00:01:22,409 --> 00:01:23,193
一个一个

23
00:01:23,193 --> 00:01:28,109
函数的输入值

24
00:01:28,109 --> 00:01:32,407
是Obama['text']

25
00:01:32,407 --> 00:01:34,750
搞定了

26
00:01:34,750 --> 00:01:37,048
看一下

27
00:01:37,048 --> 00:01:42,781
打印出 obama['word_count']

28
00:01:44,770 --> 00:01:45,280
我们去到这里

29
00:01:45,280 --> 00:01:48,230
这样我们就打印出了奥巴马单词计数word_count的结果了

30
00:01:48,230 --> 00:01:53,630
你看到operations 出现了一次 represent 出现了一次

31
00:01:53,630 --> 00:01:59,360
office两次 unemployed一次 等等等等

32
00:01:59,360 --> 00:02:01,530
这些结果看起来没什么冲击力

33
00:02:01,530 --> 00:02:05,570
所以准备继续深入

34
00:02:05,570 --> 00:02:12,010
我将要给你看一个数据工程的小技巧

35
00:02:12,010 --> 00:02:17,904
下一步

36
00:02:17,904 --> 00:02:25,212
标题是 给单词计数排序

37
00:02:25,212 --> 00:02:29,233
我们要检查奥巴马这篇文章的TF/IDF

38
00:02:30,850 --> 00:02:34,460
这样你就才能更好地理解

39
00:02:34,460 --> 00:02:37,620
这个 单词计数是Python的一个字典 

40
00:02:37,620 --> 00:02:40,780
每一个单词是一个键

41
00:02:40,780 --> 00:02:46,400
比如说Honolulu 也就是他出生的地方 天气 婚姻等等

42
00:02:46,400 --> 00:02:51,380
然后就是值 也就是单词的数量 在这里是1 2 3 5 30 等等

43
00:02:51,380 --> 00:02:53,320
也就是单词出现的次数

44
00:02:53,320 --> 00:02:57,790
然后我们要做的就是排序

45
00:02:57,790 --> 00:03:02,400
我们把他放到一张表里面 一列是单词

46
00:03:02,400 --> 00:03:06,670
也就是字典的键 第二列就是计数

47
00:03:06,670 --> 00:03:08,550
然后给这张表排序

48
00:03:08,550 --> 00:03:12,470
排序的方式也是学习python的方法

49
00:03:12,470 --> 00:03:16,600
但是我给你准备来个捷径

50
00:03:16,600 --> 00:03:23,327
所以说我创建了一张表叫做obama_word_count_table

51
00:03:23,327 --> 00:03:29,258
然后在obama表里所有的列

52
00:03:29,258 --> 00:03:35,883
选择word_count

53
00:03:35,883 --> 00:03:40,030
这样会让打印出的结果更加简洁

54
00:03:40,030 --> 00:03:42,540
你当然你可以用整张表

55
00:03:42,540 --> 00:03:45,240
这里用到的函数叫做stack

56
00:03:47,070 --> 00:03:48,880
这个stack函数很有用

57
00:03:48,880 --> 00:03:53,700
它把Sframe里面字典的一列取出

58
00:03:53,700 --> 00:03:56,330
然后和另外几列一起放在一起

59
00:03:56,330 --> 00:03:57,290
在这个例子 一共两列

60
00:03:57,290 --> 00:03:59,460
一列是单词 一列是计数

61
00:03:59,460 --> 00:04:03,984
所以说我要堆叠在 一起的是单词计数word_count

62
00:04:03,984 --> 00:04:07,240
也就是我们最关心的一列

63
00:04:07,240 --> 00:04:10,710
它会产生新的几列

64
00:04:10,710 --> 00:04:14,270
我们要给他们取个名字

65
00:04:14,270 --> 00:04:21,110
new_column_name 在这个例子中是两列

66
00:04:21,110 --> 00:04:23,440
所以我就叫做 单词word

67
00:04:23,440 --> 00:04:26,900
另一个家叫做计数 count

68
00:04:28,320 --> 00:04:32,946
如果我执行 然后看一下

69
00:04:32,946 --> 00:04:38,870
这张表的前几列

70
00:04:38,870 --> 00:04:45,420
你可以看到单词被整齐的放在了一起

71
00:04:45,420 --> 00:04:46,840
但并没有被排序

72
00:04:46,840 --> 00:04:51,820
所以下一步我们要根据计数进行排序

73
00:04:51,820 --> 00:04:55,330
很简答的步骤

74
00:04:55,330 --> 00:05:01,320
调用sort函数 进行排序

75
00:05:01,320 --> 00:05:04,502
根据count 这一列排序

76
00:05:04,502 --> 00:05:05,810
也就是根据计数排序

77
00:05:05,810 --> 00:05:09,541
然后我输入 asceding=false 进行降序排列

78
00:05:09,541 --> 00:05:13,227
不是升序 像 1 2 3

79
00:05:13,227 --> 00:05:16,998
不是之前用的升序 而是降序

80
00:05:16,998 --> 00:05:18,564
3 2 1

81
00:05:18,564 --> 00:05:23,179
输入回车 你可以看到最常见的是

82
00:05:23,179 --> 00:05:28,331
the 然后是in and of to his 最后是奥巴马

83
00:05:28,331 --> 00:05:31,222
然后是act a he

84
00:05:31,222 --> 00:05:33,881
这些单词都是没什么意义的

85
00:05:33,881 --> 00:05:40,042
在课程中 我们和Emily一起合作 她觉得这个情况

86
00:05:40,042 --> 00:05:45,073
应该把那些没有信息的单词从重要单词中去除

87
00:05:45,073 --> 00:05:48,695
这也是为什么我们要介绍TF IDF

88
00:05:48,695 --> 00:05:53,869
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community