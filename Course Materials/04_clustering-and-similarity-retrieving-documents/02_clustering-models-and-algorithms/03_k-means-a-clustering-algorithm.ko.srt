1
00:00:00,000 --> 00:00:07,193
[음악]

2
00:00:07,193 --> 00:00:13,547
클러스터 중심과의 거리만을 기준으로 삼는

3
00:00:13,547 --> 00:00:20,290
클러스터링 알고리즘을 살펴보죠

4
00:00:20,290 --> 00:00:23,730
여기 클러스터링하고 싶은 데이터가 있습니다

5
00:00:24,860 --> 00:00:30,769
k-means라 불리는 이 알고리즘은

6
00:00:30,769 --> 00:00:36,466
k 클러스터가 있다는 가정부터 시작합니다

7
00:00:36,466 --> 00:00:39,150
그러니까 클러스터의 수를 미리 지정하지요

8
00:00:39,150 --> 00:00:43,640
알고리즘이 k-means이라 불리는 이유는
k 클러스터가 있고

9
00:00:43,640 --> 00:00:47,370
각 샘플을 클러스터로 할당할 때

10
00:00:47,370 --> 00:00:50,750
클러스터의 평균인 클러스터 중심을 보기 때문입니다

11
00:00:50,750 --> 00:00:54,180
알고리즘을 어떻게 초기화할지 알아보죠

12
00:00:54,180 --> 00:00:56,670
처음으로는

13
00:00:56,670 --> 00:01:00,710
클러스터 중심을 어디에 놓을지 초기화
하는 방법이 여러 개 있는데

14
00:01:00,710 --> 00:01:04,620
나중에 더 깊이 알아보겠습니다

15
00:01:04,620 --> 00:01:05,410
지금으로선

16
00:01:05,410 --> 00:01:09,460
클러스터 중심을 무작위로 놓았다고 가정하죠

17
00:01:09,460 --> 00:01:14,210
3-means 알고리즘에서요

18
00:01:14,210 --> 00:01:18,340
첫 단계는 모든 샘플을 가장 가까운

19
00:01:18,340 --> 00:01:19,980
클러스터 중심에 할당하는 것입니다

20
00:01:19,980 --> 00:01:23,510
이 샘플은 빨간색 클러스터에 할당되죠

21
00:01:24,850 --> 00:01:32,730
이 샘플들은 모두 초록색 클러스터,
초록색 중심에 할당됩니다

22
00:01:32,730 --> 00:01:36,700
이 샘플들은 모두 파란색 중심에 가깝고요

23
00:01:38,140 --> 00:01:42,680
이를 위해서 보로노이 조각화란 기법을 씁니다

24
00:01:42,680 --> 00:01:48,092
클러스터 중심으로 범위 설정도 할 수 있는데

25
00:01:48,092 --> 00:01:51,716
자홍색으로 다시 변환하죠

26
00:01:51,716 --> 00:01:55,160
이것들이 클러스터 중심이죠

27
00:01:55,160 --> 00:02:02,730
여기 영역을 설정합니다

28
00:02:02,730 --> 00:02:07,998
영역은 새로운 샘플이 들어왔을 때

29
00:02:07,998 --> 00:02:12,920
빨간색에 쓰기 나쁜 색이네요

30
00:02:12,920 --> 00:02:14,659
다른 색이 뭐가 있었죠

31
00:02:14,659 --> 00:02:16,385
흰색은 어떨까요?

32
00:02:16,385 --> 00:02:19,590
좋네요, 흰색

33
00:02:19,590 --> 00:02:24,530
새로운 샘플이 들어왔을 때 이 빨간 영역에 속한다면

34
00:02:24,530 --> 00:02:27,350
빨간색 클러스터 중심에
가장 가깝다는 사실을 알 수 있습니다

35
00:02:27,350 --> 00:02:30,285
이것이 색칠된 영역이 나타내는 바입니다

36
00:02:32,328 --> 00:02:34,700
이게 알고리즘의 첫 단계였고요

37
00:02:34,700 --> 00:02:41,670
이로써 얻어지는 결과는 클러스터에 할당된 샘플이죠

38
00:02:41,670 --> 00:02:44,980
그런데 클러스터 중심을 무작위로 초기화했으니

39
00:02:44,980 --> 00:02:47,870
데이터에 잠재된 구조를 제대로 표현하고 있다고
생각하긴 힘듭니다

40
00:02:47,870 --> 00:02:53,930
그래서 이 과정을 반복, 할당된 샘플을 기반으로

41
00:02:53,930 --> 00:02:58,530
클러스터 중심을 재조정합니다

42
00:02:58,530 --> 00:03:02,950
여기 빨간색 클러스터에는

43
00:03:02,950 --> 00:03:05,600
샘플 하나만 할당되어 있었죠

44
00:03:05,600 --> 00:03:09,880
클러스터의 중심을 재조정하면

45
00:03:09,880 --> 00:03:14,480
이전 샘플로 옮겨갑니다

46
00:03:14,480 --> 00:03:19,662
초록색 클러스터의 경우 이전 클러스터 중심을

47
00:03:19,662 --> 00:03:23,033
초록색 클러스터에 할당된

48
00:03:23,033 --> 00:03:27,663
모든 샘플의 무게중심으로 옮깁니다

49
00:03:27,663 --> 00:03:29,793
모든 샘플의 무게중심은 여기니

50
00:03:29,793 --> 00:03:32,480
이게 새로운 클러스터 중심이 됩니다

51
00:03:32,480 --> 00:03:35,175
모든 파란색 샘플에도 똑같이 적용합니다

52
00:03:35,175 --> 00:03:38,790
이게 파란색 샘플들의 새로운 클러스터 중심이 되지요

53
00:03:40,140 --> 00:03:43,696
이게 새로운 클러스터 중심 집합입니다

54
00:03:43,696 --> 00:03:48,204
이제 보로노이 다이어그램을 다시 그려

55
00:03:48,204 --> 00:03:53,310
샘플을 최근접 클러스터 중심에 할당합니다

56
00:03:53,310 --> 00:03:56,223
이 작업을 수렴할 때까지 반복합니다

57
00:03:56,223 --> 00:03:56,723
[음악]