1
00:00:00,000 --> 00:00:07,193
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community

2
00:00:07,193 --> 00:00:13,547
那么 让我们来看一个聚类算法 

3
00:00:13,547 --> 00:00:20,290
它用到的度量标准是只看与集群中心的距离

4
00:00:20,290 --> 00:00:23,730
好的 现在我们这里看到的是我们想要分类的数据

5
00:00:24,860 --> 00:00:30,769
这个算法 我们称为k均值

6
00:00:30,769 --> 00:00:36,466
我们从最终将得到k个集群的假设出发

7
00:00:36,466 --> 00:00:39,150
也就是说你需要提前给定最终集群的数量

8
00:00:39,150 --> 00:00:43,640
所以这个算法之所以叫k均值是因为我们有k个集群 并且

9
00:00:43,640 --> 00:00:47,370
我们会看每个集群的平均值 只考虑集群中心

10
00:00:47,370 --> 00:00:50,750
以此来将数据点分到不同的集群中

11
00:00:50,750 --> 00:00:54,180
好的 让我们来谈谈如何初始化这个算法吧

12
00:00:54,180 --> 00:00:56,670
我们首先来举个例子

13
00:00:56,670 --> 00:01:00,710
我们有很多种方法来初始化集群中心的位置

14
00:01:00,710 --> 00:01:04,620
我们一会儿将会更深入地讲这些问题

15
00:01:04,620 --> 00:01:05,410
但现在但现在

16
00:01:05,410 --> 00:01:09,460
让我们暂时假设我们会随机选出3个不同的集群中心

17
00:01:09,460 --> 00:01:14,210
如果我们来跑一个3均值算法

18
00:01:14,210 --> 00:01:18,340
那么第一步就是把所有的数据点分给

19
00:01:18,340 --> 00:01:19,980
离它最近的集群中心

20
00:01:19,980 --> 00:01:23,510
因此这里的这个数据点会被分到红色集群中去

21
00:01:24,850 --> 00:01:32,730
这些数据点全都离绿色集群或者说这个绿色中心点最近

22
00:01:32,730 --> 00:01:36,700
然后这些都离蓝色中心点最近

23
00:01:38,140 --> 00:01:42,680
而做这些判定的一个方法叫做沃罗诺伊镶嵌算法

24
00:01:42,680 --> 00:01:48,092
接下来我们看集群中心
我们可以进行定义了

25
00:01:48,092 --> 00:01:51,716
这里我再换成洋红色的笔

26
00:01:51,716 --> 00:01:55,160
这里是集群中心

27
00:01:55,160 --> 00:02:02,730
我们就可以定义这里这些区域

28
00:02:02,730 --> 00:02:07,998
而这些区域代表任何我们可能得到的数据点的范围

29
00:02:07,998 --> 00:02:12,920
对于任何的数据点
- 这个颜色在红色背景下效果真烂

30
00:02:12,920 --> 00:02:14,659
我有什么别的颜色呢？

31
00:02:14,659 --> 00:02:16,385
白色怎么样？

32
00:02:16,385 --> 00:02:19,590
很好 白色

33
00:02:19,590 --> 00:02:24,530
所以我得到的某个观测值 如果它在这个红色的区域里

34
00:02:24,530 --> 00:02:27,350
我就知道它是离这个红色集群中心最近的一个

35
00:02:27,350 --> 00:02:30,285
所以这就是这些填色的区域所代表的意思

36
00:02:32,328 --> 00:02:34,700
好的，那这就是算法的第一步

37
00:02:34,700 --> 00:02:41,670
然后这些区域代表任何我们可能观测到的点所在的范围

38
00:02:41,670 --> 00:02:44,980
不过由于这些初始的集群中心都是随机生成的
所以我不会觉得它们

39
00:02:44,980 --> 00:02:47,870
反映了数据的真实情况

40
00:02:47,870 --> 00:02:53,930
所以接下来我们想要让这个流程循环下去

41
00:02:53,930 --> 00:02:58,530
一遍又一遍地根据数据点的分配情况
更新集群中心的位置

42
00:02:58,530 --> 00:03:02,950
所以如果你还记得这个红色的中心的话

43
00:03:02,950 --> 00:03:05,600
它只有被分到一个观测值

44
00:03:05,600 --> 00:03:09,880
所以当我修正那个集群的集群中心时

45
00:03:09,880 --> 00:03:14,480
这个中心就跑到了之前那个唯一的点上了

46
00:03:14,480 --> 00:03:19,662
而对于这个绿色集群来说
这里是中心原来的位置

47
00:03:19,662 --> 00:03:23,033
我们要把它移到这里

48
00:03:23,033 --> 00:03:27,663
所有被分到绿色集群的
这些点的中心位置

49
00:03:27,663 --> 00:03:29,793
这里就是这些绿点的中心

50
00:03:29,793 --> 00:03:32,480
这就是新的集群中心的位置

51
00:03:32,480 --> 00:03:35,175
同样的道理，我们也要更新蓝色中心的位置

52
00:03:35,175 --> 00:03:38,790
这是蓝色观测点的新的集群中心

53
00:03:40,140 --> 00:03:43,696
那么现在我们有了一组新的集群中心

54
00:03:43,696 --> 00:03:48,204
于是我就可以重新绘制一下
这幅沃罗诺伊图

55
00:03:48,204 --> 00:03:53,310
再把所有的观测点重新分配给
最近的集群中心

56
00:03:53,310 --> 00:03:56,223
然后我将一直重复这个过程直到结果收敛

57
00:03:56,223 --> 00:03:56,723
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community