[음악] 문서 표현하는 법과 문서 간 유사도를 측정하는 법을 알아봤습니다 이제 실제 관심사인 문서 검색으로 들어가 봅시다 누군가 기사를 읽는데 그 기사를 좋아해서 다른 기사도 보여주려 한다고 합시다 가장 인기 있는 방법은 최근접 이웃 검색이란 겁니다
검색 기사가 있을 때 지금 읽고 있는 기사죠 말뭉치도 있습니다 검색을 전개하고자 하는 모든 문서의 총합이고 여기서 추천할 새 기사를 고르게 되죠 최근접 이웃 검색을 위해서는 거리 기준을 확립해야 합니다 이전에 논한 유사도 측정이 될 테고 알고리즘은 관련 기사 모음을 결과물로 내놓습니다 최근접 이웃 검색의 예 하나는 1-최근접 이웃인데 검색 기사에서 모든 기사 중 가장 관련된 기사를 반환합니다 알고리즘은 아주 간단합니다 말뭉치의 모든 기사에서 검색해서 초록색 기사들인데 아까 설명드린 방법으로 검색 기사와 말뭉치 기사 간의 유사도를 계산합니다 그리고 유사도가 지금까지의 최고 유사도보다 높다면 이 기사를 다시 선택합니다 말뭉치의 모든 기사를 훑은 다음에 가장 유사도가 높은 기사를 살펴봅니다 그리고 이걸 사용자에게 추천하죠 이 알고리즘의 간단한 변형은 k-최근접 이웃 검색인데 가장 관련 있는 기사를 출력하는 대신 가장 관련 있는 k개의 기사 모음을 보여줍니다 그러기 위해 알고리즘은 가장 관련 있는 하나만 저장하는 건 동일하지만 우선순위 큐로 기사 k개를 유지한다는 게 다릅니다