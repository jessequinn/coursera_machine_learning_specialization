국소적으로 흔함과 전역적 희귀를 나타내는 방법 중 하나는 TF-IDF라 불리는 것인데 단어 빈도-역문서 빈도입니다 단어 빈도를 먼저 설명하자면 국소적으로 봐서 지금 읽고 있는 문서에서 단순하게 단어수를 셉니다 단어수 벡터가 되죠 그다음엔 역문서 빈도로 벡터 가중치를 낮춥니다 말뭉치의 모든 문서에서 말뭉치의 문서수 나누기 1 더하기 대상 단어 포함 문서수에 로그를 씌워 계산합니다 왜 이런 형태가 되는지 생각해 보죠 흔한 상용어를 들어 봅시다 많은 문서에 등장하는 단어죠 어떻게 되나요? 큰 숫자 / 1 + 다른 큰 숫자 전체에 로그를 씌우면 대략적으로 log1에 근접하게 되는데 0이죠 그러니까 엄청난 빈도수의 단어는 거의 0에 가깝게 가중치가 줄어드는 겁니다 모든 문서에 등장하는 단어요 반대로 희소 단어가 있고 문서수가 많다고 가정하면 큰 숫자를 1 + 작은 숫자로 나눈 값의 로그죠 이건 대충 큰 숫자가 될 겁니다 0이나 작은 숫자는 아니겠죠 여기 1이 있는 이유는 문서의 모든 단어가 말뭉치에 있다고 가정할 수 없기 때문입니다 말뭉치 어디에도 등장하지 않는 단어가 문서에 있을 수 있죠 그러므로 0으로 나누는 일만은 피해야 합니다 the란 단어의 인덱스가 있는 예제를 들 텐데 the라는 단어가 대충 대상 문서에서 1000번 등장하고 그중 메시란 단어도 있다고 합시다 메시는 5번 등장합니다 이제 이 단어의 역문서 빈도를 계산합니다 단어 the가 말뭉치의 모든 문서에서 등장한다고 가정합니다 하나만 뺀 모든 문서라고 해서 계산을 쉽게 하죠 이 항목을 보면 말뭉치 문서수의 로그를 계산할건데 말뭉치에 문서가 64개 있다고 가정하죠 그리고 1을 더해준 다음 단어 the가 전체 문서 64개 중 한 문서에서 등장하지 않았다고
가정합니다 꽤 짧은 문서였겠죠 그러면 아까 설명드린 바와 같이 결과가 0이 됩니다 가중치가 완전히 0으로 내려오는거죠 반대로 메시를 예로 들어보면 다시 총 64개의 문서에서 단어 메시가 이 중 문서 3개에 등장한다고 가정하면 로그 16이 되는데 로그2면 답이 4가 됩니다 이게 두 단어의 단어 빈도와 역문서 빈도가 됩니다 특정 문서에 대한 새로운 표현법이 될 단어 빈도와 역문서 빈도를 계산하려면 두 벡터를 곱합니다 여기 단어 the가 0이 되고 여기선 단어 메시의 가중치가 올라가서 20이 됩니다 다시 한번 어휘의 다른 모든 단어에 해야 하는 계산이 있습니다 중요한 점은 흔한 상용어인 the의 가중치는 내려가고 희귀하면서 잠재적으로 매우 중요한 단어인 메시의 가중치는 올라간다는 점입니다