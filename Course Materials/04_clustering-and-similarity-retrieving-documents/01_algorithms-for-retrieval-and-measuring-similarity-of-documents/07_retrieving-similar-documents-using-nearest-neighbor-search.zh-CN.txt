[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community 好了 我们已讨论了如何表示文档 也讨论了如何衡量文档间的相似度 现在开始我们真正关心的任务 检索文档 某人正在阅读一篇文章 我们假设他很喜欢这篇文章 我们想给他推荐阅读其他文章 对此 特别地 最热门的一种方法叫做 最近邻域搜索 我们有查询文档 也就是正在读的这篇文章 以及语料库 也就是我们搜索其中来推荐新文章的 所有文章的总和 为了实现最近邻域搜索 我们需要定义一个距离 此量用来衡量我们之前提过的 相似度 这个算法的输出是一个相关文章的集合 最近邻域搜索的一个特例叫做最近邻搜索 当搜索查询文档时 返回的 仅是搜索库中与查询文档最相关的一篇文章 这个算法很简单直接 我们只需搜索语料库中的每篇文档 就是显示成绿色的这些 然后使用 之前提到的方法计算查询文档与语料库中的 文档间的相似度 然后呢 如果当前文档的相似度高于目前为止得到的所有相似度 我们将保留当前文档作为目前最优结果 在遍历过语料库中所有文档后 我们则会将保留下来的最优选择 推荐给读者 这种算法的一个简单变体叫做k-近邻搜索 与其输出查找到的最相关的一篇文章 这个算法将返回最相关的k个不同的 文章的集合给读者 实现此目的的算法 基本与前面相同 除了我们不仅要保留当前最相关的文章 还需建立一优先队列来存放目前找到的k个最相关的文档
翻译: Emilily |审阅:
Coursera Global Translator Community