1
00:00:00,000 --> 00:00:04,066
[음악]

2
00:00:04,066 --> 00:00:05,597
이번 딥러닝 모듈에서

3
00:00:05,597 --> 00:00:09,320
딥러닝으로 가능한 두 가지
멋진 일들을 살펴봤습니다

4
00:00:09,320 --> 00:00:15,150
이미지 분류와 검색이었습니다

5
00:00:15,150 --> 00:00:17,510
두 번 다 딥 특징에 대해 설명드렸죠

6
00:00:17,510 --> 00:00:20,490
이제 딥 특징을 사용해

7
00:00:20,490 --> 00:00:23,390
이미지를 분류하는 노트북을
만들어 봅시다

8
00:00:23,390 --> 00:00:26,470
먼저 이름을 지어야겠죠

9
00:00:26,470 --> 00:00:32,829
딥 특징으로 이미지 분류하기

10
00:00:32,829 --> 00:00:37,850
라고 합니다

11
00:00:37,850 --> 00:00:41,490
헤더와 툴바를 감춰서

12
00:00:41,490 --> 00:00:44,730
공간을 확보합니다

13
00:00:44,730 --> 00:00:46,980
이제

14
00:00:46,980 --> 00:00:51,945
오타가 여기 있었네요

15
00:00:51,945 --> 00:00:57,158
GraphLab Create을 실행합니다

16
00:00:57,158 --> 00:01:02,786
GraphLab을 도입합니다 됐죠

17
00:01:02,786 --> 00:01:09,309
먼저 공통 이미지 분석 데이터 세트를
불러옵니다

18
00:01:19,689 --> 00:01:23,660
이 벤치마크 데이터 세트는
CIFAR-10라고 합니다

19
00:01:26,470 --> 00:01:30,220
그중 우리가 인식하고자 하는 카테고리

20
00:01:30,220 --> 00:01:32,460
4개만 선택합니다

21
00:01:32,460 --> 00:01:36,430
데이터 세트를 불러오면 이미

22
00:01:36,430 --> 00:01:40,540
훈련 데이터와 테스트 데이터로 나뉘어 있습니다

23
00:01:40,540 --> 00:01:45,660
컴퓨터 비전에서 모든 연구자가
같은 훈련 세트와

24
00:01:45,660 --> 00:01:50,580
같은 테스트 세트를 써야
상호비교가 가능하기 때문이죠

25
00:01:50,580 --> 00:01:58,150
데이터 세트가 있는 SFrame을
불러옵니다

26
00:01:58,150 --> 00:02:02,790
graphlab.SFrame에 훈련 데이터는

27
00:02:04,000 --> 00:02:09,046
image_train_data 안에 있습니다

28
00:02:09,046 --> 00:02:16,110
테스트 데이터는 image_test라고 하죠

29
00:02:16,110 --> 00:02:21,109
이 SFrame은

30
00:02:21,109 --> 00:02:25,681
image_test_data라고 할게요

31
00:02:25,681 --> 00:02:29,830
데이터 세트 두 개를 불러들였습니다

32
00:02:29,830 --> 00:02:33,460
데이터 탐색부터 좀 하지요

33
00:02:33,460 --> 00:02:39,320
이미지 데이터 탐색하기

34
00:02:42,300 --> 00:02:45,390
캔버스를 사용할 텐데

35
00:02:45,390 --> 00:02:48,700
먼저 노트북에 보이도록 설정해야 합니다

36
00:02:48,700 --> 00:02:50,550
이전에도 계속 해왔죠

37
00:02:50,550 --> 00:02:53,240
이제 하나로 만들어서 집에 싸가도 됩니다

38
00:02:53,240 --> 00:02:59,145
캔버스 대상을

39
00:02:59,145 --> 00:03:07,090
IPython 노트북으로 설정합니다

40
00:03:07,090 --> 00:03:10,510
이제 모든 걸 IPython 노트북에
출력하게 됩니다

41
00:03:10,510 --> 00:03:15,050
훈련 데이터부터 살펴보죠

42
00:03:15,050 --> 00:03:17,350
image_train에는 열이 몇 개 있지만

43
00:03:17,350 --> 00:03:20,898
우리에게 중요한 건 이미지 열입니다

44
00:03:20,898 --> 00:03:23,110
.show를 붙여 입력해서

45
00:03:23,110 --> 00:03:26,960
재빨리 살펴봅니다

46
00:03:26,960 --> 00:03:31,039
이미지가 별로 크지 않으니
잠시 폰트를 확대해서

47
00:03:32,320 --> 00:03:37,070
이미지를 보겠습니다

48
00:03:37,070 --> 00:03:42,070
살펴보면 새, 고양이, 개,

49
00:03:42,070 --> 00:03:42,828
차가 있습니다

50
00:03:42,828 --> 00:03:49,433
데이터 세트는 고양이, 개, 차,
새로만 이루어져 있네요

51
00:03:49,433 --> 00:03:53,659
[음악]