[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community 现在我们可以用这个模型 用图像检索的 带有深度特征的模型 来找到相似的图片 接下来 我们要用这个模型来找相似的图片 那么让我们着手实际操作 首先 我们先找个特别的图片 先定义一只猫 你会看到猫的图片 然后在我的训练图片数据里 我要选取第18张图片 通过这样我就可以获取第18张图片了 之后你知道要怎么做 我要调用cat['image']来展示那张图片 为了在这个notebook窗口展示它 我要把canvas的目标设定为IPython Notebook 这就是我们一直所做的 这样就完成了 这里有张关于猫的图片 一只虎斑猫 这些关于猫的图片看起来有点小 但是 它是一张猫的图片 你可以展示它 那么现在我们可以找到与这只猫最紧邻的图片 那么一起来实现它 现在 我们先找到这只猫图片的最近邻 我现在调出我的knn_model后 查询那张猫的图片 查询过后 你将会看到这张图 最相近的图片编号是384
6910 等等 通过编号查看图片有些困难 所以当我们创建它的时候 我们要一起创建辅助函数 可以通过那些索引编号来展示对应的图片 我们要借此机会定义个函数 我要定义个新的Python函数而且它 被命名为get_images_ids 在这个参考列里就有id 就像这个 之后我们将要取回图像 那么我们这里填 这里应该填写为 应该是 抱歉 要填写的应该是查询的结果 所以我们命名为query_result 而且它是个函数 所以我们要 通过query_result来返回image_train 我要用训练数据 进行个叫做filtered_by的操作来仅仅选取数据集中一部分行 我要通过刚刚创建的query_result来选取 当我通过query_result选取了 返回的reference_label这一列 query_result['reference_label'] 我们要做的是返回这数据集中所有的图片 只要该图片的id在reference_label这一列里 这就是辅助函数的样子 这样我们就不会需要总是输入这段代码 我们可以开始使用它 但是 我想用它做些小实验 那么让我们定义这个函数 那么 我们现在已经定义好了 通过id获取图像的函数 实际上 它更加有意义 不是么? 让我们调用get_images_from_ids 来开始做 记住 对于猫 我们已经有了一张猫的图片 所以可以仅仅写 命名为cat_neighbors 而后cat_neighbors要被赋值为 来调用函数get_images_from_ids然后 我要用knn_model查询cat的结果作为输入值 好了 这就是变量cat_neighbors了 也就是图片的近邻 现在 我们可以显示这些图片 这样 调用cat_neighbors[' images'].show 我们已经展示了一些数据 但这次是最近邻的猫 这里的是输入的猫 你可以看到所有最近邻都是猫且 都是与虎纹猫类似的品种 [背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community