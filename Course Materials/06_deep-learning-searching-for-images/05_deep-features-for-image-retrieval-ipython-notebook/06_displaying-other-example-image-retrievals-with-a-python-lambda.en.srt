1
00:00:00,097 --> 00:00:04,125
[MUSIC]

2
00:00:04,125 --> 00:00:07,525
Okay, now I wanna do one last thing,

3
00:00:07,525 --> 00:00:13,650
because it will be just fun,
and then we can all be excited.

4
00:00:13,650 --> 00:00:21,610
So what I did here, query on
a particular car for a particular image.

5
00:00:21,610 --> 00:00:26,712
Let's create a function that does all of
that and we can create anytime I want.

6
00:00:26,712 --> 00:00:31,570
And so this will be kind

7
00:00:31,570 --> 00:00:35,920
of a fun thing to do.

8
00:00:35,920 --> 00:00:39,418
So, just for fun,

9
00:00:39,418 --> 00:00:45,543
let's create a lambda to find and

10
00:00:45,543 --> 00:00:51,470
show nearest neighbor images.

11
00:00:51,470 --> 00:00:54,680
So, this is a little
bit of Python trickery.

12
00:00:54,680 --> 00:00:55,900
We get to play with it together.

13
00:00:58,230 --> 00:01:00,360
So, we're gonna call this lambda.

14
00:01:01,470 --> 00:01:05,172
Find, no, just go directly to show.

15
00:01:05,172 --> 00:01:12,268
Show_neighbors and

16
00:01:12,268 --> 00:01:20,160
this is gonna be a lambda and
it's gonna take the index i of the image.

17
00:01:21,320 --> 00:01:22,894
And here it is what it's gonna do.

18
00:01:22,894 --> 00:01:25,754
It's going to do exactly what we saw.

19
00:01:25,754 --> 00:01:31,644
So it's gonna get images from IDs,
query the nearestneighbor model,

20
00:01:31,644 --> 00:01:38,040
but instead of query for car, let's query
from image train of i to i plus one.

21
00:01:39,520 --> 00:01:43,480
And then we're gonna take the image and
we're gonna call .show in it.

22
00:01:43,480 --> 00:01:46,005
This is a crazy long lambda.

23
00:01:46,005 --> 00:01:50,247
But after we created it,
we can do something pretty neat with it.

24
00:01:50,247 --> 00:01:54,920
So now, I can just call show_neighbors and

25
00:01:54,920 --> 00:02:00,098
I give it the index of
the car which was eight, and

26
00:02:00,098 --> 00:02:06,100
if you scroll down,
you'll see those red cars.

27
00:02:06,100 --> 00:02:08,570
Really cool.

28
00:02:08,570 --> 00:02:11,340
Now, we can call show_neighbors
with some other image.

29
00:02:13,520 --> 00:02:16,810
I actually haven't thought about or
played with this, I just made this lambda

30
00:02:16,810 --> 00:02:20,340
up together, so actually, I haven't,
let's just try and run numbers.

31
00:02:20,340 --> 00:02:23,270
So, how about number 26?

32
00:02:23,270 --> 00:02:26,518
So now it's gonna find the neighbors
that even know what it is,

33
00:02:26,518 --> 00:02:28,270
26 is this car over here.

34
00:02:28,270 --> 00:02:30,720
Actually let me make this a little bigger,
so we can all see.

35
00:02:32,750 --> 00:02:36,800
So show neighbors of 26 is this blue car.

36
00:02:36,800 --> 00:02:40,650
This assigns a few other cars,
which is pretty cool.

37
00:02:40,650 --> 00:02:45,755
Let's pick some other number,
show_neighbors

38
00:02:45,755 --> 00:02:50,990
of these 2,000 images maybe image 1222.

39
00:02:50,990 --> 00:02:56,970
I actually don't know what that would be,
but now we can see, oh it's a bird.

40
00:02:56,970 --> 00:02:59,125
And, you find the nearest neighbors, oh,

41
00:02:59,125 --> 00:03:01,409
birds and
they'll all similar kind of poses.

42
00:03:01,409 --> 00:03:04,950
And I know that this is kind of a Ostrich
heads and thses other kinds of birds.

43
00:03:04,950 --> 00:03:07,290
But, they're all birds,
which is pretty cool and

44
00:03:07,290 --> 00:03:09,170
remember we're just using
those deep features.

45
00:03:09,170 --> 00:03:12,320
And now for the last one,
so show_neighbors and

46
00:03:12,320 --> 00:03:13,820
you can play with all of this at home.

47
00:03:13,820 --> 00:03:19,082
Let's show neighbors of image 2,000.

48
00:03:19,082 --> 00:03:25,330
Oops, Shift+Enter and
what are the neighbors of image 2000?

49
00:03:25,330 --> 00:03:27,620
Okay, you have a car.

50
00:03:27,620 --> 00:03:28,660
It got confused.

51
00:03:28,660 --> 00:03:31,250
It got an ostrich but
the the rest were all cars.

52
00:03:31,250 --> 00:03:36,478
So simple pictures work quite
well at image retrieval.

53
00:03:36,478 --> 00:03:40,100
You saw I made one mistake in
the few examples that we tried.

54
00:03:40,100 --> 00:03:44,670
But it actually gives you really good
results and really nice performance.

55
00:03:44,670 --> 00:03:47,730
And it was never trained on this dataset,
on this images.

56
00:03:47,730 --> 00:03:50,496
The images were different sizes,
different categories, but

57
00:03:50,496 --> 00:03:52,594
it still worked quite well and
quite exciting.

58
00:03:52,594 --> 00:03:53,930
So these are tools and

59
00:03:53,930 --> 00:03:58,694
techniques that can be used in a wide
range of areas in a really exciting way.

60
00:03:58,694 --> 00:04:02,759
[MUSIC]