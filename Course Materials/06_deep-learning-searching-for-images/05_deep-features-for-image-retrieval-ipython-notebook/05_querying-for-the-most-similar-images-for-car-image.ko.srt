1
00:00:00,184 --> 00:00:04,142
[음악]

2
00:00:04,142 --> 00:00:07,885
도우미 함수를 만들어 놨으니

3
00:00:07,885 --> 00:00:10,700
다른 이미지에도 써봅시다

4
00:00:10,700 --> 00:00:15,150
살짝 꼼수를 썼는데 차를 찾아서

5
00:00:15,150 --> 00:00:17,050
몇몇 예제를 시도해 봅니다

6
00:00:17,050 --> 00:00:25,250
이 차는 image_train의 8번째 이미지입니다

7
00:00:25,250 --> 00:00:27,820
하나씩 넘겨서 찾았습니다

8
00:00:27,820 --> 00:00:34,123
차 이미지를 보기 위해서

9
00:00:34,123 --> 00:00:42,050
.show를 붙여보면

10
00:00:42,050 --> 00:00:44,180
빨간 차가 나옵니다

11
00:00:44,180 --> 00:00:46,960
여기 빨간 차가 있죠

12
00:00:46,960 --> 00:00:50,120
그렇다면 이 차의
최근접 이웃은 누가 될까요?

13
00:00:50,120 --> 00:00:54,120
여기서 실행한 명령입니다

14
00:00:54,120 --> 00:00:58,820
get_images_from_ids에
차를 입력합니다

15
00:00:58,820 --> 00:01:01,010
지름길로 가보죠

16
00:01:01,010 --> 00:01:06,676
get_images_from_ids에

17
00:01:06,676 --> 00:01:11,632
knn_model과 입력으로는

18
00:01:11,632 --> 00:01:16,220
차 이미지를 줍니다

19
00:01:16,220 --> 00:01:21,060
knn_model에 현재 이미지를 입력하면

20
00:01:22,160 --> 00:01:26,800
결과는 SFrame 리스트가 될 텐데

21
00:01:26,800 --> 00:01:32,230
그중 이미지 열을 선택해서

22
00:01:32,230 --> 00:01:36,040
.show를 호출합니다

23
00:01:36,040 --> 00:01:40,502
이렇게 하면 입력한 차도 빨간색이었는데

24
00:01:40,502 --> 00:01:43,574
나온 것도 모두 빨간 차들입니다

25
00:01:43,574 --> 00:01:45,350
아주 멋지죠

26
00:01:45,350 --> 00:01:52,418
단 몇 줄로 차와 고양이의
최근접 이웃 모델을 만들었습니다

27
00:01:52,418 --> 00:01:53,849
[음악]