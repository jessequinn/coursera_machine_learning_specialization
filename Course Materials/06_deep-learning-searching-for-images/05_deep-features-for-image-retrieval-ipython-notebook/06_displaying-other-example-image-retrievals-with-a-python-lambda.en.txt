[MUSIC] Okay, now I wanna do one last thing, because it will be just fun,
and then we can all be excited. So what I did here, query on
a particular car for a particular image. Let's create a function that does all of
that and we can create anytime I want. And so this will be kind of a fun thing to do. So, just for fun, let's create a lambda to find and show nearest neighbor images. So, this is a little
bit of Python trickery. We get to play with it together. So, we're gonna call this lambda. Find, no, just go directly to show. Show_neighbors and this is gonna be a lambda and
it's gonna take the index i of the image. And here it is what it's gonna do. It's going to do exactly what we saw. So it's gonna get images from IDs,
query the nearestneighbor model, but instead of query for car, let's query
from image train of i to i plus one. And then we're gonna take the image and
we're gonna call .show in it. This is a crazy long lambda. But after we created it,
we can do something pretty neat with it. So now, I can just call show_neighbors and I give it the index of
the car which was eight, and if you scroll down,
you'll see those red cars. Really cool. Now, we can call show_neighbors
with some other image. I actually haven't thought about or
played with this, I just made this lambda up together, so actually, I haven't,
let's just try and run numbers. So, how about number 26? So now it's gonna find the neighbors
that even know what it is, 26 is this car over here. Actually let me make this a little bigger,
so we can all see. So show neighbors of 26 is this blue car. This assigns a few other cars,
which is pretty cool. Let's pick some other number,
show_neighbors of these 2,000 images maybe image 1222. I actually don't know what that would be,
but now we can see, oh it's a bird. And, you find the nearest neighbors, oh, birds and
they'll all similar kind of poses. And I know that this is kind of a Ostrich
heads and thses other kinds of birds. But, they're all birds,
which is pretty cool and remember we're just using
those deep features. And now for the last one,
so show_neighbors and you can play with all of this at home. Let's show neighbors of image 2,000. Oops, Shift+Enter and
what are the neighbors of image 2000? Okay, you have a car. It got confused. It got an ostrich but
the the rest were all cars. So simple pictures work quite
well at image retrieval. You saw I made one mistake in
the few examples that we tried. But it actually gives you really good
results and really nice performance. And it was never trained on this dataset,
on this images. The images were different sizes,
different categories, but it still worked quite well and
quite exciting. So these are tools and techniques that can be used in a wide
range of areas in a really exciting way. [MUSIC]