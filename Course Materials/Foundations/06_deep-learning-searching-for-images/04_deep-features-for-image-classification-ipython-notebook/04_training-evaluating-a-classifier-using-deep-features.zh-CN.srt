1
00:00:00,000 --> 00:00:03,569
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community

2
00:00:03,569 --> 00:00:09,379
现在的问题是

3
00:00:09,379 --> 00:00:14,640
我们能否用深度特征来改进我们的模型

4
00:00:14,640 --> 00:00:17,340
记住当我们谈到深度特征的时候

5
00:00:17,340 --> 00:00:22,650
我们研究了 在深度学习模块中

6
00:00:22,650 --> 00:00:26,900
通过一种叫做转换学习的方式深度特征
可以用来训练模型

7
00:00:26,900 --> 00:00:31,400
然后用它来预测图片

8
00:00:31,400 --> 00:00:34,330
甚至能在 训练数据仅仅有为数不多的已标签的图片 的情况下

9
00:00:34,330 --> 00:00:39,883
在这个例子中 我们来看一下训练数据的维度

10
00:00:39,883 --> 00:00:44,973
有一个基础的概念 我们一共有2000张图片

11
00:00:44,973 --> 00:00:47,489
不是一个很大的数据集

12
00:00:47,489 --> 00:00:52,089
然后我们可以进行下一步

13
00:00:52,089 --> 00:00:57,394
用深度学习2000多个图片中训练模型 

14
00:00:57,394 --> 00:01:01,110
这是你的下一步

15
00:01:01,110 --> 00:01:07,678
所以我们要载入深度学习模型

16
00:01:07,678 --> 00:01:11,825
这是已经编译好的

17
00:01:11,825 --> 00:01:20,830
只要用Graphlab 进行载入就可以了

18
00:01:20,830 --> 00:01:26,410
模型载入的数据是image net 这个数据

19
00:01:26,410 --> 00:01:27,710
在这里

20
00:01:27,710 --> 00:01:31,934
叫做imagenet_model

21
00:01:31,934 --> 00:01:37,860
这个模型会传输150万张图片

22
00:01:37,860 --> 00:01:40,105
有着1000个标签 是一个完全不同的数据

23
00:01:40,105 --> 00:01:44,243
150万张图片 也是我们之前提到过的AlextNet 模型

24
00:01:44,243 --> 00:01:49,350
它在ImageNet 比赛中取胜了

25
00:01:49,350 --> 00:01:54,090
我提前训练过这个模型了 你可以用这个模型来

26
00:01:55,240 --> 00:01:59,240
来训练我们的图片 并且添加新的一列

27
00:01:59,240 --> 00:02:04,380
叫做deep_feature 深度特征

28
00:02:04,380 --> 00:02:08,804
这新的一列就是

29
00:02:08,804 --> 00:02:12,900
我们刚才载入deep_learning_model 所得到的

30
00:02:14,280 --> 00:02:17,100
这个deep_learning_model

31
00:02:17,100 --> 00:02:23,123
我会运用一个叫做 extract_feature 的函数来提取特征

32
00:02:23,123 --> 00:02:29,680
能够提取那些深度特征

33
00:02:29,680 --> 00:02:33,420
他所做的就是转换学习
能够把一个领域中学习到的特征

34
00:02:33,420 --> 00:02:35,690
用到另外一个不同领域的数据集中

35
00:02:35,690 --> 00:02:38,560
这边的数据就是我的的 image_traindata

36
00:02:40,820 --> 00:02:42,890
这边仅仅用了两条代码

37
00:02:42,890 --> 00:02:44,300
很简单

38
00:02:44,300 --> 00:02:47,960
然后减小字体大小 可以看得更清楚一些

39
00:02:47,960 --> 00:02:52,990
这两条代码用来做转移学习

40
00:02:52,990 --> 00:02:55,670
所以我们用网上训练的特征

41
00:02:55,670 --> 00:02:57,822
运用到Sframe 的数据中

42
00:02:57,822 --> 00:03:02,860
计算深度特征仅仅需要几分钟

43
00:03:02,860 --> 00:03:07,030
我现在就准备做这个

44
00:03:07,030 --> 00:03:11,040
我会告诉你我们的深度模型

45
00:03:12,040 --> 00:03:14,530
如果我给你显示iamge_traindata

46
00:03:15,960 --> 00:03:20,730
我仅仅给你展示前几行

47
00:03:20,730 --> 00:03:26,550
你可以看到我们有着图片ID 图片

48
00:03:26,550 --> 00:03:30,490
也就是你看到的 然后就是标签 和一列叫做深度特征

49
00:03:30,490 --> 00:03:33,130
所以说提前运算了 然后储存到SFrame

50
00:03:33,130 --> 00:03:35,040
现在它已经被保存下了

51
00:03:35,040 --> 00:03:38,070
它还有最后一列叫做image_array 有着原始像素

52
00:03:38,070 --> 00:03:39,550
那是我们之前用来做训练原始像素模型的一列

53
00:03:39,550 --> 00:03:41,610
所以说深度特征已经在这了

54
00:03:41,610 --> 00:03:44,340
如果你运行这两行代码 你就能够自己在这个数据集中计算深度特征了

55
00:03:44,340 --> 00:03:46,800
或者说在别的数据集中计算

56
00:03:46,800 --> 00:03:50,114
然后让我们继续

57
00:03:50,114 --> 00:03:55,635
现在我们有了深度特征

58
00:03:55,635 --> 00:03:59,881
让我们来训练深度模型

59
00:03:59,881 --> 00:04:04,303
有了深度特征

60
00:04:04,303 --> 00:04:08,400
让我们训练分类器

61
00:04:08,400 --> 00:04:13,010
所以我们会用深度特征训练一个分类器

62
00:04:13,010 --> 00:04:20,620
所以我会叫做深度特征模型 而不再用原始像素模型

63
00:04:20,620 --> 00:04:25,032
所以用.create这个指令 我们以前用过的 

64
00:04:25,032 --> 00:04:29,113
我们用.create这个指令 我们之前用过的

65
00:04:29,113 --> 00:04:33,256
我们会用到深度特征 然后并把它用到简单的分类器中

66
00:04:33,256 --> 00:04:35,321
仅仅是把它用到逻辑斯蒂模型

67
00:04:35,321 --> 00:04:36,912
模型的输入数据是image_train_data

68
00:04:36,912 --> 00:04:40,112
我们不再用原始像素

69
00:04:40,112 --> 00:04:45,512
而是特征

70
00:04:45,512 --> 00:04:52,118
所以会用到deep_features

71
00:04:55,274 --> 00:04:59,726
最后我会说到标签 噢不 是目标

72
00:04:59,726 --> 00:05:04,421
也就是我们所要预测的 会在标签这一列中

73
00:05:06,981 --> 00:05:07,678
你去到那里

74
00:05:07,678 --> 00:05:12,483
我们正在训练分类器

75
00:05:12,483 --> 00:05:16,233
用到2000张图片

76
00:05:16,233 --> 00:05:20,558
用之前训练完的特征

77
00:05:20,558 --> 00:05:24,980
也就是那个2012年比赛中完成的

78
00:05:24,980 --> 00:05:29,960
让我们来仔细研究这个模型吧 我们先用它应用到一些数据上

79
00:05:29,960 --> 00:05:35,788
我要做的是

80
00:05:35,788 --> 00:05:40,993
先输入标题

81
00:05:40,993 --> 00:05:47,940
把深度模型用到第一组测试数据中

82
00:05:47,940 --> 00:05:51,330
就像我们之前在原始像素模型中用到的一样  我们也会同样应用

83
00:05:51,330 --> 00:05:58,580
所以记住 我们想要看前三张图

84
00:05:58,580 --> 00:06:00,170
也就是索引为0 1 2的图片

85
00:06:00,170 --> 00:06:03,820
来看一下这三张图到底是什么?

86
00:06:03,820 --> 00:06:06,647
输入.show来显示

87
00:06:06,647 --> 00:06:12,310
提醒一下应该是猫 车 猫

88
00:06:13,700 --> 00:06:22,490
我们先运行一下预测的结果

89
00:06:22,490 --> 00:06:27,747
会用到deep_feature_model

90
00:06:27,747 --> 00:06:33,137
然后预测这三张图

91
00:06:33,137 --> 00:06:36,256
输入的数据是image_test[0:3]

92
00:06:36,256 --> 00:06:38,860
记住正确的标签是猫 车 猫

93
00:06:38,860 --> 00:06:42,830
他的标签是 猫 机动车 猫

94
00:06:42,830 --> 00:06:44,880
预测完全正确

95
00:06:44,880 --> 00:06:45,830
完美!

96
00:06:45,830 --> 00:06:49,930
原始像素模型真的很糟糕

97
00:06:49,930 --> 00:06:55,570
如果用深度学习模型 前三个全对了

98
00:06:55,570 --> 00:07:00,719
那我们来正式的用模型预测

99
00:07:00,719 --> 00:07:07,275
下一步就是

100
00:07:07,275 --> 00:07:12,302
计算测试深度学习的准确率

101
00:07:12,302 --> 00:07:17,991
计算测试深度学习的准确率

102
00:07:17,991 --> 00:07:18,503
我们去到这里

103
00:07:18,503 --> 00:07:22,630
我们该怎么做呢?

104
00:07:22,630 --> 00:07:25,450
deep_features_model.evaluate这行代码

105
00:07:25,450 --> 00:07:27,480
就像我们在原始像素模型中用到的

106
00:07:27,480 --> 00:07:29,440
让我们来衡量结果吧

107
00:07:29,440 --> 00:07:32,702
输入值是测试数据

108
00:07:32,702 --> 00:07:33,562
也就是image_test

109
00:07:35,205 --> 00:07:39,290
记住我们原始像素模型有着46%的准确率

110
00:07:39,290 --> 00:07:40,450
有点糟糕

111
00:07:41,660 --> 00:07:46,830
但是如果用深度学习模型 78%的正确率 很好了

112
00:07:46,830 --> 00:07:48,720
已经到达预期的目标了

113
00:07:48,720 --> 00:07:52,697
如果你去预测更多的数据
相比较46%而言 预测准确率还是很好

114
00:07:52,697 --> 00:07:56,132
所以说深度特征提供了一个

115
00:07:56,132 --> 00:08:01,286
一个仅仅用很小的数据 用来测试深度特征

116
00:08:01,286 --> 00:08:05,527
然后能在分类任务中 做到很好的准确率

117
00:08:05,527 --> 00:08:06,027
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community