1
00:00:00,000 --> 00:00:03,930
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community

2
00:00:03,930 --> 00:00:08,228
好的 我们可以看到在基于特征的回归方法中 我们可以

3
00:00:08,228 --> 00:00:11,400
我们能够解决十分有限的用户数据问题

4
00:00:11,400 --> 00:00:14,950
另一方面 在我们的矩阵分解方法中 

5
00:00:14,950 --> 00:00:19,190
我们看到 我们可以捕捉到

6
00:00:19,190 --> 00:00:24,130
用户和商品之间的关系 尤其是学习这些用户和商品的特征

7
00:00:24,130 --> 00:00:26,960
问题是我们是否可以找到一个综合的方法

8
00:00:26,960 --> 00:00:29,310
能够获得它们两个的优点

9
00:00:29,310 --> 00:00:34,030
因此 重要的是基于分类方法的特征 或者

10
00:00:34,030 --> 00:00:37,530
或者说一些能够被获取的东西 像文本内容

11
00:00:37,530 --> 00:00:42,860
还有当前时间 我所看见的东西 用户信息 过去购买记录等

12
00:00:42,860 --> 00:00:47,560
然而从矩阵因式分解中发现的特征

13
00:00:47,560 --> 00:00:50,850
它能够获得一些有相似行为的用户组

14
00:00:50,850 --> 00:00:55,710
比如说 西雅图教书的妈妈群体

15
00:00:56,910 --> 00:01:00,730
问题是我们如何结合这两种不同的方式

16
00:01:00,730 --> 00:01:02,390
很直接的方式是

17
00:01:02,390 --> 00:01:05,810
当我们获得一个没有历史购买记录的新用户时

18
00:01:05,810 --> 00:01:10,250
挑一个没有购物历史的用户，我们可以使用

19
00:01:12,900 --> 00:01:16,170
仅仅该用户的特征

20
00:01:16,170 --> 00:01:19,830
比如说这个用户的年龄 性别等等

21
00:01:19,830 --> 00:01:23,550
来预测这个用户可能的得分

22
00:01:23,550 --> 00:01:29,440
同样的 通过获取到关于那个用户越来越多的信息

23
00:01:29,440 --> 00:01:33,570
我们可以加大矩阵分解方法的权重

24
00:01:33,570 --> 00:01:39,670
在推荐的时候 更多地使用那些学到的特征

25
00:01:39,670 --> 00:01:45,277
所以说把这些 理念捆绑到 基于特定用户 和

26
00:01:45,277 --> 00:01:50,660
基于特征的模型和矩阵分解得到的特征 非常简单

27
00:01:50,660 --> 00:01:52,716
逐渐在这二者切换

28
00:01:52,716 --> 00:01:56,713
根据每个用户或者每个商品有多少数据可用

29
00:01:59,879 --> 00:02:03,280
这是一种非常普遍的混合模型想法

30
00:02:04,510 --> 00:02:08,690
它已经被证实在推荐系统中具有影响力

31
00:02:08,690 --> 00:02:12,830
推荐系统 我们提到的经典例子

32
00:02:12,830 --> 00:02:16,800
之前我们提及的Netflix竞赛 就是一个经典案例

33
00:02:16,800 --> 00:02:20,140
这个竞赛 是一个如何对Netflix用户做出最好预测评价的竞赛

34
00:02:20,140 --> 00:02:26,020
谁可以为netflix用户提供最准确的打分预测

35
00:02:26,020 --> 00:02:31,960
数据集包括１亿不同用户的打分和观影记录

36
00:02:31,960 --> 00:02:37,557
几乎有１万８千部不同的电影，接近50万不同用户

37
00:02:37,557 --> 00:02:42,636
目标是对3,000,000影评做出最高准确率的预测

38
00:02:42,636 --> 00:02:45,400
奖金是1,000,000美元

39
00:02:45,400 --> 00:02:50,460
所以有很多人对争夺这个奖金很感兴趣

40
00:02:50,460 --> 00:02:56,060
我们在这个表中看到的是目前领先的团队

41
00:02:56,060 --> 00:02:58,700
他们的模型事实上整合了

42
00:02:58,700 --> 00:03:02,580
上百个不同的模型来达到这个水准

43
00:03:02,580 --> 00:03:05,911
这种类型的组合解决方案我们将要

44
00:03:05,911 --> 00:03:09,006
在分类课程模块中进行更多的讨论

45
00:03:09,006 --> 00:03:14,403
这种将各种模型结合起来提高性能的方法 能够超越

46
00:03:14,403 --> 00:03:19,587
任何一种单一的模型所能达到的性能 这是一种常见的并且十分有效的技术
翻译： | 审阅：Tod
Cousera Global Tranlator Community