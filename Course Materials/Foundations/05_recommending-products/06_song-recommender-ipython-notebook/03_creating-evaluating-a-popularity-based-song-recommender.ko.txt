[음악] 이게 우리 데이터 세트입니다 다음 단계에서 추천 시스템을 만듭니다 만들어볼까요 노래 추천기를 만들어보죠 평소처럼 훈련 테스트 스플릿부터 합니다 훈련 데이터를 훈련, 테스트 데이터로 나누죠 노래 데이터에 랜덤 스플릿을 통해 80%는 훈련, 20%는 테스팅으로 나눕니다 시드는 다시 0으로 설정해 결과값을 일치시킵니다 스플릿이 다 됐군요 추천 모델을 훈련시킬 차례입니다 에밀리의 강의 순서를 따라 훈련시킬 첫 추천 모델은 간단한 인기도 기반 추천기입니다 많은 웹사이트가 채용하는 방식인데 가장 많이 이메일로 공유된 뉴스나
가장 많이 구입된 상품, this is what's most popular, and
most common hashtags on Twitter today.
가장 인기 있고 흔한 트위터
해쉬태그가 이런 방식입니다 딱히 훌륭한 모델은 아니지만 많이 사용됩니다 유명한 인기도 모델을 훈련시켜보죠 popularity_model이라 이름 붙입니다 이 함수를 호출하기만 하면 됩니다 이게 그 추천기고요 create을 뒤에 붙이면 아시다시피 create은 추천기를 생성하는 함수입니다 훈련 데이터를 입력으로 놓고요 이 모델에는 정보가 좀 필요합니다 하나씩 짚어보죠 데이터 세트의 사용자 ID가
어떤 열인지 알려줘야 합니다 이 경우 user_id죠 user_id 이제 어떤 게 항목 ID인지 알아야 하는데 항목 ID는 상품이죠, 사용자와 상품 우리한테는 상품이 아니라 곡이 있습니다 항목 ID는 곡이 되고 엔터를 누르면 인기도 기반 추천 시스템이 만들어집니다 예측을 이제 좀 해볼까요 다음 단계에서는 스크롤을 잠시 내릴게요 인기도 모델을 통해 예측을 합니다 예를 들어 인기도 모델에게 특정 사용자 대상으로 추천을 해달라고 합니다 특정 사용자가 좋아하는 노래를 추천하라는 거죠 추천 함수는 사용자 리스트를 입력받아 지금은 리스트에 1을 넣죠 우리에겐 사용자 배열이 있었죠 사용자 배열의 첫 사람을 넣고 실행합니다 어떤 게 추천될까요? Harmonia, Bjork, King of Leon 등의
곡입니다 유심히 봐주세요 여기 Yoakam도 있고 사용자 0에게 추천된 노래들이죠 모델이 사용자 1에게 뭘 추천하나 볼까요 인기도 모델에서 추천 함수를 호출하고 사용자 리스트를 넣습니다 사용자 0가 아닌 사용자 1을 넣죠 쉬프트+엔터를 누르기 전에 생각해보죠 인기도 모델이 뭘 반환할까요? 모든 사람이 같은 노래를 추천받죠 가장 인기 있는 항목들만 추천하니까요 이 사람도 동일하게 Harmonia, Bjork, Dwight Yoakam, King of Leon을
추천받을 겁니다 재미가 없죠 모두가 같은 노래를 추천받으니까요 이게 이 모델의 문제점입니다 [음악]