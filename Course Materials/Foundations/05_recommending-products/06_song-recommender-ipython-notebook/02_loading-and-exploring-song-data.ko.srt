1
00:00:00,000 --> 00:00:04,337
[음악]

2
00:00:04,337 --> 00:00:09,035
이 모듈에서 에밀리가 상품 추천기 구축과

3
00:00:09,035 --> 00:00:12,810
연관 알고리즘을 설명했습니다

4
00:00:12,810 --> 00:00:15,780
이제 듣고 싶은만한 노래를 추천하는

5
00:00:15,780 --> 00:00:16,770
노트북을 만들 겁니다

6
00:00:16,770 --> 00:00:19,410
아주 신나는 것이죠

7
00:00:20,950 --> 00:00:26,960
노트북 제목을 바꿉니다

8
00:00:26,960 --> 00:00:31,920
노래 추천기입니다

9
00:00:34,490 --> 00:00:38,910
다시 한번 헤더와 툴바를 감춰서

10
00:00:38,910 --> 00:00:41,870
공간을 확보합니다

11
00:00:41,870 --> 00:00:47,310
평소와 같이 graphlab 도입으로 시작합니다

12
00:00:47,310 --> 00:00:48,390
시작해볼까요

13
00:00:50,250 --> 00:00:55,380
처음으로 음악 데이터를 읽어옵니다

14
00:00:57,050 --> 00:01:03,370
음악 데이터 읽어오기

15
00:01:04,390 --> 00:01:07,378
노래 백만 곡 데이터 세트라고 합니다

16
00:01:07,378 --> 00:01:10,209
song_data란 변수를 생성합니다

17
00:01:10,209 --> 00:01:11,750
여기

18
00:01:11,750 --> 00:01:16,445
graphlab.SFrame에

19
00:01:16,445 --> 00:01:21,737
song_data.gl을 읽어 저장합니다

20
00:01:21,737 --> 00:01:24,664
이렇게 읽었으면

21
00:01:24,664 --> 00:01:28,673
가볍게 데이터 탐색부터 해봅시다

22
00:01:28,673 --> 00:01:33,723
SFrame 데이터인 음악 데이터를

23
00:01:33,723 --> 00:01:38,970
탐색해봅니다

24
00:01:38,970 --> 00:01:43,400
가장 먼저 평소대로

25
00:01:43,400 --> 00:01:46,490
song_data 표의 처음 몇 줄을 살펴봅니다

26
00:01:47,930 --> 00:01:51,290
이게 song_data의 모습입니다

27
00:01:51,290 --> 00:01:54,590
표에는 사용자 ID

28
00:01:55,840 --> 00:01:58,090
들은 횟수

29
00:01:58,090 --> 00:02:02,589
노래 제목, 가수,

30
00:02:02,589 --> 00:02:06,730
노래까지 있습니다

31
00:02:06,730 --> 00:02:10,520
제목은 노래가 아닌 음반 제목입니다

32
00:02:10,520 --> 00:02:16,250
그리고 우리에게 주어진 건 각 사용자가

33
00:02:16,250 --> 00:02:21,606
어떤 노래를 얼마나 들었는지 나타내는 표입니다

34
00:02:21,606 --> 00:02:24,210
이를 통해 관심이 갈만한 노래를 찾는

35
00:02:24,210 --> 00:02:26,670
추천기를 만듭니다

36
00:02:26,670 --> 00:02:30,340
에밀리와 모듈에서 같이 알아봤듯이

37
00:02:30,340 --> 00:02:33,760
여러 유형의 추천기를 탐구하게 됩니다

38
00:02:34,850 --> 00:02:41,230
평소와 같이 노트북에 히스토그램을 그릴 겁니다

39
00:02:41,230 --> 00:02:47,467
set_target에

40
00:02:47,467 --> 00:02:50,243
ipynb를 인자로 줍니다

41
00:02:50,243 --> 00:02:54,540
그런 다음 song_data에서

42
00:02:54,540 --> 00:02:58,344
특정 열을 찾는데 노래 열이라고 하고

43
00:02:58,344 --> 00:03:03,320
.show를 입력하면 여러 노래와 재생 빈도

44
00:03:03,320 --> 00:03:08,300
히스토그램이 같이 나옵니다

45
00:03:08,300 --> 00:03:09,535
나왔죠

46
00:03:09,535 --> 00:03:14,062
제목별로 노래가 나오는데

47
00:03:14,062 --> 00:03:20,280
이 노래는 5970번 재생됐네요

48
00:03:20,280 --> 00:03:26,134
Bjork 노래는 5281번 재생됐고요

49
00:03:26,134 --> 00:03:31,270
이 노래는 브라질 노래인데

50
00:03:31,270 --> 00:03:35,471
Catola의 TVC는 3185번입니다

51
00:03:35,471 --> 00:03:40,274
노래를 좋아해서 여러 번 듣는 사람도 있죠

52
00:03:40,274 --> 00:03:44,868
우리가 보는 데이터는 이렇고

53
00:03:44,868 --> 00:03:51,160
곡 데이터의 길이를 잠깐 보면

54
00:03:51,160 --> 00:03:59,700
110만곡이 있음을 확인할 수 있습니다

55
00:03:59,700 --> 00:04:04,600
백만 곡, 사용자 짝이니 곡 평점입니다

56
00:04:04,600 --> 00:04:07,190
이게 데이터 세트인데 무척 큽니다

57
00:04:07,190 --> 00:04:13,040
이 큰 데이터 세트를 함께 다루는 작업을 해보죠

58
00:04:14,430 --> 00:04:17,540
일단 데이터 탐색부터 해봅시다

59
00:04:17,540 --> 00:04:20,846
각 사용자에게, 평점 백만 개 또는

60
00:04:20,846 --> 00:04:24,840
들은 횟수가 백만 개 있습니다

61
00:04:24,840 --> 00:04:27,290
사용자가 몇 명이나 되는지 봅시다

62
00:04:27,290 --> 00:04:33,413
지금부터

63
00:04:33,413 --> 00:04:39,990
##사용자 숫자 세기를 합니다

64
00:04:41,400 --> 00:04:45,320
그와 동시에 데이터 세트 탐색에 유용한

65
00:04:45,320 --> 00:04:47,210
요령 하나 보여드리죠

66
00:04:47,210 --> 00:04:52,860
사용자의 배열을 새로 만듭니다

67
00:04:52,860 --> 00:04:58,170
곡 데이터에서

68
00:04:58,170 --> 00:05:03,343
사용자 id 열을 봅니다

69
00:05:04,600 --> 00:05:10,670
unique 명령어를 적용합니다

70
00:05:10,670 --> 00:05:15,410
unique 명령어는 모든 사용자 중에

71
00:05:15,410 --> 00:05:19,120
중복을 제거하고 보여줍니다

72
00:05:19,120 --> 00:05:20,630
그러니까 순 사용자들이죠

73
00:05:20,630 --> 00:05:24,664
사용자 길이를 구하면

74
00:05:24,664 --> 00:05:30,010
백만 곡이 있는 이 데이터 세트에는

75
00:05:30,010 --> 00:05:34,900
순 사용자 66346명이 있습니다

76
00:05:34,900 --> 00:05:38,090
나머지는 평점이라 생각하시겠지만

77
00:05:38,090 --> 00:05:39,138
재생 빈도 행입니다

78
00:05:39,138 --> 00:05:43,839
[음악]